{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///node_modules/@ux/component-utilities/src/breakpoints.js","webpack:///node_modules/@ux/component-utilities/src/classNames.js","webpack:///node_modules/@ux/component-utilities/src/id.js","webpack:///node_modules/@ux/component-utilities/src/is-browser.js","webpack:///node_modules/@ux/component-utilities/src/constants.js","webpack:///node_modules/@ux/component-utilities/src/offset.js","webpack:///node_modules/@ux/component-utilities/src/scroll-into-view.js","webpack:///node_modules/@ux/component-utilities/src/out-of-viewport.js","webpack:///node_modules/@ux/component-utilities/src/use-breakpoints.js","webpack:///node_modules/@ux/component-utilities/src/use-click-outside.js","webpack:///node_modules/@ux/component-utilities/src/use-event-listener.js","webpack:///node_modules/@ux/component-utilities/src/breakpoints-hoc.js","webpack:///node_modules/@ux/component-utilities/src/use-click-outside-hoc.js","webpack:///node_modules/@ux/button/src/index.js","webpack:///node_modules/@ux/icon/base.js","webpack:///node_modules/@ux/icon/x/index.js","webpack:///node_modules/@ux/icon/chevron-down/index.js","webpack:///node_modules/@ux/icon/checkmark/index.js","webpack:///node_modules/@ux/icon/chevron-right/index.js","webpack:///node_modules/@ux/icon/alert/index.js","webpack:///node_modules/@ux/icon/link-arrow/index.js","webpack:///node_modules/@ux/icon/information/index.js","webpack:///node_modules/@ux/icon/help/index.js","webpack:///node_modules/@ux/icon/star-outline/index.js","webpack:///node_modules/@ux/icon/minus/index.js","webpack:///node_modules/@ux/icon/ellipses/index.js","webpack:///node_modules/@ux/icon/chevron-left/index.js","webpack:///node_modules/@ux/icon/index.js","webpack:///node_modules/@ux/icon/search/index.js","webpack:///node_modules/@ux/icon/svgosm.js","webpack:///node_modules/@ux/growl/src/index.js","webpack:///node_modules/react-trfq/lib/index.js","webpack:///node_modules/@ux/icon/window-new/index.js","webpack:///node_modules/@ux/icon/comment/index.js","webpack:///node_modules/@ux/icon/delete/index.js","webpack:///node_modules/@ux/icon/refresh/index.js","webpack:///node_modules/@ux/icon/clock/index.js","webpack:///node_modules/@ux/growl/src/growl-message.js","webpack:///node_modules/@ux/icon/ok/index.js","webpack:///node_modules/@ux/icon/chevron-dbl-left/index.js","webpack:///node_modules/@ux/icon/chevron-dbl-right/index.js","webpack:///node_modules/@ux/icon/plus/index.js","webpack:///node_modules/@ux/icon/star/index.js","webpack:///node_modules/@ux/icon/chevron-up/index.js","webpack:///node_modules/@ux/icon/enhance.js","webpack:///js/vendor.js","webpack:///node_modules/@ux/accordion/src/accordion.js","webpack:///node_modules/@ux/accordion/src/index.js","webpack:///node_modules/@ux/alert/src/icons.js","webpack:///node_modules/@ux/alert/src/index.js","webpack:///node_modules/@ux/button-set/src/index.js","webpack:///node_modules/@ux/form-element/src/enums.js","webpack:///node_modules/@ux/fieldset/src/fieldset.js","webpack:///node_modules/@ux/fieldset/src/index.js","webpack:///node_modules/@ux/form-element/src/textual.js","webpack:///node_modules/@ux/form-element/src/flip.js","webpack:///node_modules/@ux/form-element/src/element.js","webpack:///node_modules/@ux/form-element/src/index.js","webpack:///node_modules/@ux/checkbox/src/index.js","webpack:///node_modules/@ux/form-group/src/index.js","webpack:///node_modules/@ux/checkbox-group/src/index.js","webpack:///node_modules/@ux/collapsible/src/indicator.js","webpack:///node_modules/@ux/collapsible/src/index.js","webpack:///node_modules/@ux/component/src/breakpoints.js","webpack:///node_modules/@ux/component/src/component.js","webpack:///node_modules/@ux/component/src/index.js","webpack:///node_modules/@ux/criteria/src/criteria.js","webpack:///node_modules/@ux/criteria/src/util.js","webpack:///node_modules/@ux/criteria/src/criteria-connect.js","webpack:///node_modules/@ux/criteria/src/criteria-rule.js","webpack:///node_modules/@ux/criteria/src/rules/min-characters.js","webpack:///node_modules/@ux/criteria/src/rules/max-characters.js","webpack:///node_modules/@ux/criteria/src/rules/min-max-characters.js","webpack:///node_modules/@ux/criteria/src/rules/include-number.js","webpack:///node_modules/@ux/criteria/src/rules/include-uppercase.js","webpack:///node_modules/@ux/criteria/src/rules/include-lowercase.js","webpack:///node_modules/@ux/criteria/src/rules/no-outer-whitespace.js","webpack:///node_modules/@ux/criteria/src/rules/index.js","webpack:///node_modules/@ux/criteria/src/index.js","webpack:///node_modules/@ux/criteria/src/criteria-header.js","webpack:///node_modules/@ux/dropdown/src/dropdown.js","webpack:///node_modules/@ux/dropdown/src/dropdown-control.js","webpack:///node_modules/@ux/dropdown/src/dropdown-divider.js","webpack:///node_modules/@ux/dropdown/src/dropdown-header.js","webpack:///node_modules/@ux/dropdown/src/dropdown-item.js","webpack:///node_modules/@ux/dropdown/src/dropdown-menu.js","webpack:///node_modules/@ux/dropdown/src/selectable-item.js","webpack:///node_modules/@ux/dropdown/src/index.js","webpack:///node_modules/@ux/form/src/form.js","webpack:///node_modules/@ux/form/src/index.js","webpack:///node_modules/@ux/spinner/src/index.js","webpack:///node_modules/@ux/message-overlay/src/index.js","webpack:///node_modules/@ux/modal/src/modal.js","webpack:///node_modules/@ux/modal/src/modal-header.js","webpack:///node_modules/@ux/modal/src/modal-nav.js","webpack:///node_modules/@ux/modal/src/modal-body.js","webpack:///node_modules/@ux/modal/src/modal-footer.js","webpack:///node_modules/@ux/modal/src/index.js","webpack:///node_modules/@ux/namespace-component/index.js","webpack:///node_modules/@ux/pagination/src/index.js","webpack:///node_modules/@ux/password/src/index.js","webpack:///node_modules/@ux/pivot/src/pivot.js","webpack:///node_modules/@ux/pivot/src/index.js","webpack:///node_modules/@ux/progress-bar/src/index.js","webpack:///node_modules/@ux/progress-steps/src/progress-step.js","webpack:///node_modules/@ux/progress-steps/src/index.js","webpack:///node_modules/@ux/quantity-selector/src/index.js","webpack:///node_modules/@ux/radio/src/index.js","webpack:///node_modules/@ux/radio-group/src/index.js","webpack:///node_modules/@ux/remaining/src/fallback.js","webpack:///node_modules/@ux/remaining/src/index.js","webpack:///node_modules/@ux/search/src/default-item.js","webpack:///node_modules/@ux/search/src/index.js","webpack:///node_modules/@ux/stars/src/base.js","webpack:///node_modules/@ux/stars/src/index.js","webpack:///node_modules/@ux/table/src/sortable.js","webpack:///node_modules/@ux/table/src/collection.js","webpack:///node_modules/@ux/table/src/td.js","webpack:///node_modules/@ux/table/src/th.js","webpack:///node_modules/@ux/table/src/tr.js","webpack:///node_modules/@ux/table/src/thead.js","webpack:///node_modules/@ux/table/src/tbody.js","webpack:///node_modules/@ux/table/src/tfoot.js","webpack:///node_modules/@ux/table/src/index.js","webpack:///node_modules/@ux/tabs/src/tab-content.js","webpack:///node_modules/@ux/tabs/src/tab.js","webpack:///node_modules/@ux/tabs/src/tab-index.js","webpack:///node_modules/@ux/tabs/src/index.js","webpack:///node_modules/@ux/telephone-input/src/country-dropdown.js","webpack:///node_modules/@ux/telephone-input/src/index.js","webpack:///node_modules/@ux/text/src/index.js","webpack:///node_modules/@ux/toggle/src/toggle.js","webpack:///node_modules/@ux/toggle/src/index.js","webpack:///node_modules/@ux/tooltip/src/tooltip-close.js","webpack:///node_modules/@ux/tooltip/src/tooltip-title.js","webpack:///node_modules/@ux/tooltip/src/tooltip-content.js","webpack:///node_modules/@ux/tooltip/src/tooltip-portal.js","webpack:///node_modules/@ux/tooltip/src/index.js","webpack:///node_modules/@godaddy/request/index.js","webpack:///node_modules/@ux/util/src/utils/diagnostics.js","webpack:///node_modules/@ux/util/src/utils/json.js","webpack:///node_modules/@ux/util/src/utils/url.js","webpack:///node_modules/@ux/util/src/index.js","webpack:///node_modules/@ux/inline-styles/src/variables/palette.js","webpack:///node_modules/@ux/inline-styles/src/stylesheet.js","webpack:///node_modules/@ux/inline-styles/src/variables/typography.js","webpack:///node_modules/@ux/inline-styles/src/query.js","webpack:///node_modules/@ux/inline-styles/src/index.js","webpack:///js/index.js","webpack:///js/build.js"],"names":["root","factory","exports","module","define","amd","a","i","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","p","jsonpArray","uxcore2WebpackJsonp","oldJsonpFunction","slice","breakpoints","Breakdancer","width","Infinity","classNames","names","filter","Boolean","reduce","memo","className","indexOf","split","Array","isArray","keys","forEach","item","all","join","id","context","props","_name","toLowerCase","toString","trim","replace","char","encodeURIComponent","test","isBrowser","navigator","target","document","offset","ref","rect","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","scrollIntoViewIfNeeded","obj","current","outOf","height","innerHeight","clientHeight","bottom","body","parentNode","scrollTop","currentWindow","useBreakpoints","points","debug","diagnostics","breakpoint","setBreakpoint","useState","viewport","setViewport","useEffect","_resize","detail","newBreakpoint","includes","distances","map","point","Math","abs","compare","min","currently","addEventListener","removeEventListener","useOnClickOutside","handler","listener","event","composedPath","from","contains","changed","dispatchEvent","CustomEvent","useEventListener","Breakpoints","children","ClickOutside","onClick","targetRef","propTypes","breapoints","PropTypes","oneOfType","string","arrayOf","any","func","isRequired","node","buttonTypes","designs","LEGACY_DESIGN_MAPPING","addon","base","button","canvas","content","contentPurchase","contentLight","danger","defaultDark","defaultLight","defaultLightSecondary","defaultPrimary","defaultPurchase","defaultBrand","defaultInfo","defaultWarning","defaultDanger","defaultSuccess","defaultFeature","info","link","purchase","brand","submit","success","tertiary","tertiaryInline","warning","feature","toggle","linkLight","merch","merchSec","merchLight","merchSecLight","Button","Component","constructor","super","this","_warn","_ariaAttributes","aria-label","aria-labelledby","aria-haspopup","aria-disabled","icon","text","design","as","render","active","disabled","download","external","href","onBlur","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseDown","onMouseEnter","onTouchStart","size","title","type","mappedDesign","mappedAs","String","startsWith","TagName","classes","passThroughProps","curr","propName","accessory","ariaActiveAttr","buttonType","role","prepareIcon","aria-hidden","createElement","u","h","iconComponent","clsName","iconClassName","React","cloneElement","[object Object]","defaultProps","_interopRequireWildcard","require","_interopRequireDefault","_extends2","_objectWithoutProperties2","_react","_svgosm","_propTypes","displayName","deprecated","Fwd","forwardRef","_ref","desc","failed","again","res","svgosm","details","extract","assign","svg","fill","xlinkHref","number","Icon","style","color","fontSize","SVGOSM","_defineProperty2","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","arguments","source","getOwnPropertyDescriptors","defineProperties","html","tracker","mounted","mount","container","createElementNS","xmlns","appendChild","innerHTML","match","some","getComputedStyle","cssvar","cssvarvalue","getPropertyValue","charAt","parse","str","start","finish","exec","substr","shapes","viewBox","fn","set","a11ytitle","a11ydesc","_msgId","Growl","_fadeTimers","state","messages","componentDidMount","global","growlInstance","componentWillUnmount","_clearMessages","_addMessage","config","msgProps","_setupMessage","fade","_startFade","fadeTime","setState","onClose","_closeMessage","_stopFade","onMouseLeave","msgId","clearTimeout","setTimeout","idx","_messageElements","elements","element","ariaLabels","close","onCloseButtonKeyDown","_handleMessageKeyDown","enter","enterActive","exit","exitActive","timeout","growlMessage","_handleKeyDown","growlMain","closeAllButton","querySelector","currentTarget","aria-live","closeAll","closeLabel","addGrowlMessage","addMessage","e","TrfqEvent","TrfqImpression","TrfqPageReq","gtm","_createClass","descriptor","configurable","writable","Constructor","protoProps","staticProps","_typeof","iterator","_react2","_propTypes2","_objectWithoutProperties","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_trfq","scope","trfq","logEvent","evt","cb","cbDelay","cmd","Number","isNaN","isFinite","logImpression","logPageReq","path","w","ux","disable","ga","gtm.start","Date","getTime","gtmScript","insertionPoint","getElementsByTagName","insertionParent","async","src","tccUrl","insertBefore","configure","options","_gaDataLayer","concat","gaconfig","_gaq","domain","fallbackRequiredProp","propType","fallback","componentName","Error","on","delay","_React$Component","TrfqEventComponent","getPrototypeOf","_props","_props$trfqId","trfqId","_props$trfqOn","trfqOn","_props$trfqDesc","trfqDesc","_props$trfqData","trfqData","_props$trfqDelay","trfqDelay","eventName","toUpperCase","currHandler","_React$Component2","TrfqImpressionComponent","_props$trfqId2","_React$Component3","TrfqPageReqComponent","_props$trfqPath","trfqPath","ICONS","component","OkIcon","InfoIcon","error","AlertIcon","GrowlMessage","renderIcon","data-action","aria-level","doc","querySelectorAll","enhance","animationName","iconname","use","setAttribute","setAttributeNS","classList","remove","add","ReactDOM","ReactTransitionGroup","intl","ReactIntl","Base","args","open","componentDidUpdate","prevProps","panels","styles","Children","child","index","tabIndex","preventDefault","Accordion","aria-multiselectable","array","highlight","Star","Checkmark","Info","Alert","critical","neutral","Help","internal","Comment","UX_ALERT_CLASSNAME","TYPE_TO_EMPHASIS_MAP","offer","note","c3","message","header","legacyChildren","Fragment","dismissible","emphasis","mappedEmphasis","closeButton","y","buttonComponent","clsx","buttonClassName","g","ButtonSet","hostClassNames","marginClassNames","ux-button-set-split","grid","navigation","controls","hideLabel","bool","inline","input","label","readOnly","notice","onChange","proxy","indeterminate","required","V","autoComplete","failure","validates","validate","onValidation","onValidChange","oneOf","values","clearable","isEvent","prop","toArray","invalid","valid","view","count","FieldSetWithRef","W","X","Fieldset","has-danger","Textual","hasClassName","hadInput","clearButton","te","clear","labelGridClass","inputGridClass","Q","htmlFor","re","Flip","currentChecked","checked","isButton","ux-custom-control-inline","targetClassName","ux-button","indicator","le","E","sr-only","aria-checked","control","find","dataset","select","isFlip","ignoreProps","validating","isValid","prevState","nextProps","lookups","nextValidate","failureMessage","spread","v","defaultChecked","isClear","attributes","defaultValue","isValidElement","_id","placeholder","persist","focus","validator","done","he","_error","_notice","_controls","_input","_required","action","Input","ae","Validates","FormElement","InputType","aria-describedby","superAttrs","be","aria-required","form-control","custom-control-input","form-control-danger","form-control-lg","form-control-sm","form-control-merch","Checkbox","Group","inputs","properties","ve","CheckboxGroup","optional","data-toggle","Indicator","background","wrapperClass","Panel","code","onEnter","onEntering","scrollHeight","onEntered","onExit","offsetHeight","reflow","onExiting","Function","wrapper","collapsed","panel-indicator-shown","aria-controls","aria-expanded","Ce","CSSTransition","exitDone","appear","appearActive","mountOnEnter","in","hasDOM","eventdist","EventDist","EventDistContext","createContext","withEventDistContext","addhoc","getWrappedComponent","Consumer","sharedEventDist","EventDistShape","SharedComponent","off","once","breakup","obassign","isMobile","emit","WebComponent","show","display","hide","outside","trigger","outOfViewport","Criteria","setupRules","valids","every","k","iconDesign","isRule","wasValid","visible","standalone","enableModern","ariaLiveChange","Validate","fade-in","fade-out","combineFunctions","funcA","funcB","detach","b","arg","EVENT_PROPS","Connect","Je","sate","_setupInput","_setupCriteria","_onValidChangeHandler","_onChangeHandler","_onValidationHandler","_onFocusHandler","_onBlurHandler","forceValidation","method","_children","criteria","Rule","tt","promisePending","_queuedValue","_performValidate","Promise","newState","then","_setValidateResults","iconStateClass","ariaCriteriaItem","Qe","ux-criteria-rule-checked","MinCharactersRule","nt","MaxCharactersRule","max","MinMaxCharactersRule","IncludeNumberRule","IncludeUppercaseRule","IncludeLowercaseRule","NoOuterWhitespaceRule","Header","Rules","types","isOpen","onToggle","toggleBackground","selectedItems","selected","defaultSelected","mt","keyboardSelectionIndex","items","isMultiSelect","redirectToHrefIfAvailable","itemProps","location","selectIndex","itemIndex","selectItem","callback","nextState","nextSelected","broadcast","keyDown","onArrowUpDown","delta","dataLength","getSelectedItem","childs","TripleDot","yt","DropdownSplit","other","DropdownButton","rip","DropdownSelect","keycodes","Space","Enter","Escape","ArrowUp","ArrowDown","accepts","eventHandlers","hasPlaceholder","toggleIcon","wt","DropdownControl","jt","Ct","DropdownDivider","DropdownHeader","CheckboxItem","PureComponent","componentRef","isSelected","DropdownItem","getRef","_t","It","aria-selected","alignLeft","alignmentTypes","right","preferLeft","preferRight","autoAlignments","defaultAlignmentClassName","alignmentValues","menuAlignmentPropType","DropdownMenu","menuRef","dropdownItem","selectableItem","menuAlignment","alignmentOverride","enableFullscreen","alignMenuClass","autoAlign","mobileFullscreen","DropdownValue","DropdownComponent","hideHandle","createRef","activeItem","bounds","getElementBounds","getHorizontalRender","Wt","getVerticalRender","viewportBounds","x","innerWidth","elementBounds","menuBounds","menuElement","labelBounds","componentLabel","menuItemRef","menuItemBounds","itemHeight","hasLabel","menuBottomBound","overflowBelow","spaceAbove","showUp","dropdownControl","Pt","tripledot","ux-select-dropdown","triple-dot-dropdown btn btn-link","dropdown-disabled disabled","menu-up","has-label","full-screen","ElementType","elementType","$t","Ut","alignment","shape","validateComponents","Dropdown","Form","uploader","encType","onSubmit","formprops","form-inline","Qt","Spinner","spinnerName","cx","cy","startOffset","MessageOverlay","updateDimensions","minHeight","parentMinHeight","overlay","catchBubbledEvents","stopPropagation","renderMessage","progress","sn","wrapperStyle","el","onBackgroundClick","disableAutoClose","baseRender","Nav","Body","Footer","nav","footer","animate","backdrop","DEFAULT_ARIA_LABELS","ModalHeader","data-dismiss","ModalNav","ModalBody","ModalFooter","ModalComponent","startTarget","keydown","modalDialog","rootElement","modalOuter","getRootNode","previousElement","activeElement","parentElement","dialogButton","focusableEls","firstFocusableEl","lastFocusableEl","insideMouseDown","handleForwardTab","handleBackwardTab","shiftKey","now","aria-modal","Modal","defaultNamespace","NamespaceContext","namespace","withNamespaceContext","namespaceContext","withNamespace","WrappedComponent","includeOriginal","hocComponent","NamespaceShape","NamespaceConsumer","NamespaceProvider","_namespace","contextValue","Provider","Pagination","pageItems","pageSelected","total","ceil","totalItems","_totalPages","_allowItemsPerPageSelection","pageItemsChoices","_enableBackLinks","_enableForwardLinks","_pageRangeToShow","totalPages","maxPageLinks","pageRangeStart","floor","pageRangeEnd","_pageLinksSection","end","step","val","onPageClick","_moreLinksSection","morePages","_firstLinkSection","statusClass","hidden","showBookends","jn","onNavigationClick","firstPage","_lastLinkSection","Pn","lastPage","_prevLinkSection","Fn","prevPage","_nextLinkSection","In","nextPage","_numberItemsSection","onPageItemsChanged","Tt","_paginationSection","paginationSizeClass","navigationType","selection","wrapClass","pageItemValidation","num","Password","toggleHidden","ev","_show","_hide","Tn","Chevron","breakpointSizes","mobile","phablet","tablet","desktop","large","xlarge","Pivot","subtitle","xsSubtitles","graphic","arrow","subtitleRender","columns","useButton","Tag","linkButton","gridClasses","md","lg","xl","xxl","gridStyle","currentSize","sizes","aStyle","ux-pivot-disabled","ux-pivot-selected","ux-pivot-arrow","onSelected","Rn","Pivots","selectedIndex","setIndex","xsGraphics","pivotList","pivotListRender","ux-pivot-slats","ux-pivot-xs-graphics","STATUS","Warning","Success","Primary","CIRCLE_SIZES","strokeWidth","BREAKPOINTS","ProgressBar","_percent","_exactPercent","_labelElement","_noticeElement","_displayElement","showPercent","startShiftPercent","unit","_size","lineHeight","lastIndexOf","percent","displayElement","breakdown","targetIdx","_progressClasses","status","striped","_tickCount","isSmall","tickCount","ticks","tickLabel","_tickLabels","labels","transform","_tickLines","tickWidth","_bar","hideTickLabels","aria-valuenow","aria-valuemax","aria-valuemin","_circle","circleSize","center","radius","PI","fillStyle","strokeDashoffset","strokeDasharray","strokeLinecap","Status","Incomplete","Current","Complete","ProgressStep","ProgressSteps","_getStepStatus","_stepElements","results","steps","Step","isNumber","QuantitySelector","_onChange","_onKeydown","getId","decrease","increase","_safeDefaultValue","by","isError","nextValue","_setValue","_checkRange","parseInt","noDefault","errorMessage","decrement","rr","increment","Radio","RadioGroup","FallbackMessage","RegExp","Remaining","remaining","maxLength","lr","pr","DefaultItem","onSelect","has","buttonText","debounce","hideTruncatedResults","maxResults","onFilter","onSearch","renderItem","reset","resultsOnEmpty","searchLabel","searchButton","Search","onElementValueChange","onFilterChange","builtInFilter","builtInTransform","setStateAndClose","preventBlur","Er","suggestion","suggestionEnabled","shouldEnableSuggestion","applyFilter","dataArray","customFilter","numResults","datum","lowerDatum","lowerValue","endsWith","firstIndex","lastIndex","getSuggestion","transformedData","escapedValue","escapeRegExp","reg","filterBy","filteredData","extraState","listContainer","childNodes","formElement","isSearch","shouldComponentUpdate","renderButton","SearchIcon","renderList","wr","renderLookAhead","remainder","substring","visibility","unknownProps","placeholderText","aria-owns","aria-autocomplete","Sr","rating","generateOnClick","star","renderText","Stars","onInputKeyDown","Ir","isHovering","hovered","_getClassName","handleMouseOver","handleMouseOut","incrementedHoverIndex","renderStars","stars","starType","Fr","I","onRatingClick","rateThis","aria-valuetext","startTabIndex","Sortable","sort","newData","comparator","getSortableProps","direction","sortable","flip","column","dir","Collection","sortableChild","setSortableOptionsForChild","childElementType","getProperties","renderChildren","components","Ar","Th","handleKeyDown","plain","showIcon","visibleClass","Kr","COMPONENTS","td","Td","th","Tr","enableKeyboard","click","tr","Thead","Tbody","compose","collection","order","row","enu","non","_key","rowProps","Jr","renderCells","cell","renderRows","Tfoot","thead","tbody","tfoot","Table","activeRow","tableClassName","Yr","TabContent","Tab","itemClassName","linkClassName","ariaControls","ariaSelectedTab","directions","prev","side","next","TabIndex","conveyorMarginLeft","defaultStepSize","stepSize","moveConveyor","margin","absMargin","tabsExceededWidth","tabindex","conveyor","tabs","sum","tab","tabStyles","parseFloat","marginLeft","marginRight","conveyorArrowStyle","controlAttributes","data-slide","marginLeftStyle","change","contentIds","Tabs","getTabId","selectedTab","CountryDropdown","countryData","onCountrySelect","activeClassName","selectedCountry","countryKey","callingCode","country","phoneRegEx","TelephoneInput","phoneNumber","marketId","presorted","countryDataProps","sortCountryData","normalizedCountryData","normalizeCountryData","parsedPhoneNumber","parsePhoneNumber","phoneCountryKey","getCountryKeyFromCallingCode","countryCallingCode","getCallingCodeFromCountryKey","showCountryList","lineNumber","inputError","onInputBlur","onInputFocus","onInputChange","onOutsideClick","onCountryClick","phoneControl","createEvent","onChangeHandler","validatePhoneNumber","updates","phoneInput","selectionStart","buildPhoneNumber","selectionEnd","localeCompare","1","newNumber","outsideListener","newValue","updated","keyCode","safeModifierKeys","ctrlKey","metaKey","directionModifier","firstPeriodPos","noSelectionBeforeDot","cursorBeforeDotNotFullSel","dotSelectedButNotFullSel","dotIndex","isEmpty","getSelectedCountry","renderCountryList","ls","countryList","ux-tel-btn-danger","asOptions","Proxy","_","tagName","validatePropTypeLabel","allowedTypes","Toggle","ux-toggle-small","small","TooltipClose","TooltipTitle","TooltipContent","anchor","update","recalculateAnchor","forceUpdate","anchorsDiffer","prevAnchor","newAnchor","JSON","stringify","bounding","recalculatedAnchor","position","viewportWidth","tooltip","above","overflow","arrowMargin","arrowMarginLeft","bs-tooltip-bottom","bs-tooltip-top","contentRef","hideClose","bs","dismiss","ys","TooltipPortal","inDOM","attachmentElement","removeChild","createPortal","ws","openOnHover","Tooltip","anchorRef","anchorMouseEnter","anchorMouseLeave","startAutoHideTimer","stopAutoHideTimer","autoHideTime","autoHideTimerHandle","onDismiss","autoHideTimeout","closeFromClickOutside","onOpen","pointer","cursor","outline","dataEid","ariaLabel","persistent","only","xs","data-eid","F","Close","Content","Title","log","send","url","controller","AbortController","credentials","qs","query","jsonp","abort","signal","request","Request","fetch","handleResponse","catch","response","headers","statusText","reject","Ms","del","_s","patch","post","put","loggers","run","URL","address","URLParse","domains","hostname","pop","sub","extractProtocol","cookie","storage","getItem","setItem","removeItem","sessionStorage","palette","specification","spec","copy","clone","cloneable","_preserved","fontSizes","delimiter","Query","vars","load","marketFonts","marketGroups","colors","paletteColors","iso639","locale","marketGroup","lang","region","group","marketFont","font","fontStack","fontFamily","family","fontWeight","weight","paletteName","tone","loadable","variables","browserPalette","brandFonts","fonts","paletteMarketGroups","lo","defaultLocale","market","typography","styleType","sizeValue","typographies","fontSizeBase","StyleSheet","freeze","variety","pathArguments","versions","ux/uxcore2-extended-support","process","utils","NamespaceComponent","thing"],"mappings":"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","file":"uxcore2.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"uxcore2WebpackJsonp\"] = window[\"uxcore2WebpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([77,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Breakdancer from 'breakdancer';\n\n/**\n * Our breakpoint specifications. The key represents the name of the breakpoint\n * and the object specifies the specification in order to trigger the break\n * point. These breakpoints follow the design specification from our\n * invisionapp.\n *\n * Please note that the values in the breakdancer represent the minimum values\n * so need to + 1 the design specification in order to get an exact match.\n *\n * @type {Breakdancer}\n * @public\n */\nconst breakpoints = new Breakdancer([\n  {\n    name: 'mobile',\n    width: 519 + 1\n  },\n\n  {\n    name: 'phablet',\n    width: 767 + 1\n  },\n\n  {\n    name: 'tablet',\n    width: 991 + 1\n  },\n\n  {\n    name: 'desktop',\n    width: 1199 + 1\n  },\n\n  {\n    name: 'large',\n    width: 1719 + 1\n  },\n  //\n  // Last capture all the things query.\n  //\n  {\n    name: 'xlarge',\n    width: Infinity\n  }\n]);\n\nexport default breakpoints;\n","/**\n  * Helper function to create and manage an array of classNames.\n  *\n  * @returns {String|Undefined} Concatenated result of classNames.\n  * @public\n  */\nexport default function classNames(...names) {\n  const result = names\n    .filter(Boolean)\n    .reduce((memo, className) => {\n      if (typeof className === 'string' && ~className.indexOf(' ')) {\n        className = className.split(' ');\n      }\n\n      if (Array.isArray(className)) {\n        Array.prototype.push.apply(memo, classNames(...className).split(' '));\n      } else if (typeof className === 'object') {\n        Object.keys(className).forEach(function each(key) {\n        //\n        // In object mode we want to optionally enable or disable classNames\n        // based on boolean values for the keys. We're not going to be too\n        // strict on true and false as we want things like `undefined` and\n        // `null` to also trigger removal.\n        //\n          if (className[key]) {\n            memo.push(key);\n          } else if (~memo.indexOf(key)) {\n            memo.splice(memo.indexOf(key), 1);\n          }\n        });\n      } else {\n        memo.push(className);\n      }\n\n      return memo;\n    }, [])\n    .filter(function filter(item, i, all) {\n      return Boolean(item) && all.indexOf(item) === i;\n    })\n    .join(' ');\n\n  //\n  // If we return an empty string and directly pass it in to the className\n  // property of a React component we will add an empty attribute to the\n  // element. Returning `undefined` ensures that no empty property is added.\n  //\n  // The undefined value is also still accepted as value for the `classNames`\n  // method so the resulting className can still be manipulated afterwards.\n  //\n\n  // eslint-disable-next-line no-undefined\n  return result ? result : undefined;\n}\n","import name from 'fn.name';\n\n/**\n  * Generate a persistent id so it will be same every single time so it can\n  * still be used to link to certain parts in the form. If there is already an\n  * `id` provided it will fallback to that.\n  *\n  * We want to follow the HTML4 specification here to ensure that we generate\n  * valid id attributes for every single doc type. HTML5 is less strict about\n  * this as it only disallows spaces to be present in the attribute.\n  *\n  * @param {String} key Fallback key to retrieve from props.\n  * @param {ReactElement} context react component from which this function is called\n  * @returns {String} The persistent, but semi-unique id.\n  * @public\n  */\nexport default function id(key, context) {\n  if (typeof context === 'undefined') {\n    context = key;\n    // eslint-disable-next-line no-undefined\n    key = undefined;\n  }\n  const props = context.props;\n  const _name = name(context).toLowerCase();\n  let value = (props.id || props[key] || _name).toString().trim();\n\n  // If there are non-ASCII characters, use encodeURIComponent to deterministically replace them\n  // eslint-disable-next-line no-control-regex\n  value = value.replace(/[^\\x00-\\x7F]/g, char => {\n    return encodeURIComponent(char).replace('%', ':');\n  });\n\n  //\n  // An id attribute must start with A-Za-z char. If this is not the case\n  // we're going to prefix it. Just for clarity we prefix it with the word\n  // `id-`\n  //\n  if (!/^[A-Za-z]/.test(value)) value = 'id-' + value;\n\n  // eslint-disable-next-line no-useless-escape\n  return value.replace(/[^A-Za-z\\:\\;\\-\\_0-9\\.]+/g, '-');\n}\n","/**\n  * Check if we are running in a TRUE browser (i.e. **NOT** Node.js)\n  * environment. This will only return true in REAL browser environments\n  * (i.e. not `jsdom`). The navigator object will toString as '[object Navigator]'\n  * instead of '[object Object]' if it was a leaked Node.js global.\n  *\n  * *NOTE:* This will return true in PhantomJS environments and other headless\n  * browsers since those are, in fact, REAL browsers in the strict sense.\n  *\n  * @returns {Boolean} Is this a browser\n  * @public\n  */\nexport default function isBrowser() {\n  return typeof navigator !== 'undefined' && Object.prototype.toString.call(navigator) === '[object Navigator]';\n}\n","const hasDOM = typeof document !== 'undefined';\nconst target = hasDOM ? window : {};\n\nexport {\n  target\n};\n","import { target } from './constants';\n/**\n  * Calculate the component's offset relative to the window.\n  *\n  * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n  * @returns {Object} left and top offsets.\n  * @public\n  */\nexport default function offset(ref) {\n  const rect = ref.getBoundingClientRect();\n\n  return {\n    left: rect.left + target.pageXOffset - target.document.documentElement.clientLeft,\n    top: rect.top + target.pageYOffset - target.document.documentElement.clientTop\n  };\n}\n","import outOfViewport from './out-of-viewport';\n\nfunction isRef(obj) {\n  return obj !== null && typeof obj === 'object' && Object.prototype.hasOwnProperty.call(obj, 'current');\n}\n\n/**\n  * Scroll the current element into the visible area of the browser window if not there.\n  * If the element is already within the visible area of the browser window, then do not scroll.\n  *\n  * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n  * @throws Will throw an error if ref is not valid\n  * @public\n  */\nexport default function scrollIntoViewIfNeeded(ref) {\n  if (!isRef(ref)) return;\n  const { current } = ref;\n  const outOf = outOfViewport(current);\n  if (!outOf) return;\n\n  // WebKit & Blink have this native method.\n  if (current.scrollIntoViewIfNeeded) {\n    current.scrollIntoViewIfNeeded(false);\n    return;\n  }\n\n  //\n  // TODO (crobbins, jkeslin): do we still need this in this implementation?\n  //\n  // // If the menu itself is statically positioned, we need to take that into account\n  // if (ref.offsetParent !== ref.parentNode) {\n  //   top -= activeItem.parentNode.offsetTop;\n  // }\n\n  //\n  // Remark (crobbins): MDN suggests checking if `typeof body.scrollTop === 'number'`\n  // but based on empirical evidence that documentation is simply wrong. Other sources\n  // around the Internetz suggest that when the value is 0 `document.body` should be used.\n  // (see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect)\n  //\n  let body = document.documentElement || document.body.parentNode;\n  if (body.scrollTop === 0) {\n    body = document.body;\n  }\n\n  body.scrollTop = body.scrollTop + outOf;\n}\n","/**\n * Returns a value indicating that the specified `ref` is out of the viewport in\n * a given direction +ve or -ve pixels. If the `ref` is within the viewport then\n * returns 0.\n *\n * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n * @returns {Number|undefined} Number of pixels document.body.scrollTop must be modified by\n * @public\n */\nexport default function outOfViewport(ref) {\n  const rect = ref.getBoundingClientRect();\n  if (rect.top < 0) {\n    return rect.top;\n  }\n\n  const height = window.innerHeight || document.documentElement.clientHeight;\n  if (rect.bottom > height) {\n    return rect.bottom - height;\n  }\n\n  return 0;\n}\n","import breakpoints from './breakpoints';\nimport diagnostics from 'diagnostics';\nimport { useEffect, useState } from 'react';\n\nconst currentWindow = typeof window === 'undefined' ? null : window;\nif (currentWindow) {\n  currentWindow.addEventListener('resize', () => {\n    if (!breakpoints.changed()) return;\n    currentWindow.dispatchEvent(new CustomEvent('breakpoint:hook:changed', { detail: {\n      breakpoint: breakpoints.breakpoint } }));\n  });\n}\n/**\n * @typedef {Object} Breakpoint\n * @prop {string} name The name of the breakpoint\n * @prop {number} width The minimum width of the breakpoint in pixels\n */\n/**\n * @typedef {Object} Viewport\n * @prop {number} width The width of the viewport in pixels\n * @prop {number} height The height of the viewport in pixels\n */\n/**\n * @typedef {Object} useBreakpointsState\n * @prop {Breakpoint} breakpoint The current breakpoint\n * @prop {Viewport} viewport The current viewport size\n */\n\n/**\n * React hook to setup breakpoint handling with breakdancer\n *\n * @param  {...string} points List of breakpoint names to subscribe to\n * @returns {useBreakpointsState} State variables for current breakpoint and viewport\n */\nexport default function useBreakpoints(...points) {\n  const debug = diagnostics('ux:use-breakpoints');\n  const [breakpoint, setBreakpoint] = useState(() => {\n    /** @type {Breakpoint} */\n    const currentBreakpoint = breakpoints.breakpoint;\n    return currentBreakpoint;\n  });\n  const [viewport, setViewport] = useState(() => {\n    /** @type {Viewport} */\n    const currentViewport = breakpoints.viewport();\n    return currentViewport;\n  });\n\n  useEffect(() => {\n    const _resize = ({ detail: newBreakpoint }) => {\n      if (!points || !points.length) return;\n      //\n      // Find the nearest registered point by minimal distance from the actual width.\n      //\n      if (!points.includes(newBreakpoint)) {\n        const distances = points.map(point => Math.abs(breakpoints.compare(point, 'width')));\n        newBreakpoint = points[distances.indexOf(Math.min(...distances))];\n      }\n\n      //\n      // Check if the breakpoint is actually different Breakpoint might have changed based on nearest algorithm.\n      //\n      if (breakpoint === newBreakpoint) return;\n\n      debug('updating state as breakpoint changed to %s', newBreakpoint);\n      setViewport(breakpoints.viewport());\n      setBreakpoint(newBreakpoint);\n    };\n\n    _resize({ detail: breakpoints.currently() });\n    // @ts-ignore\n    if (currentWindow) currentWindow.addEventListener('breakpoint:hook:changed', _resize);\n\n    return () => {\n      // @ts-ignore\n      if (currentWindow) currentWindow.removeEventListener('breakpoint:hook:changed', _resize);\n    };\n  }, [breakpoint, debug, points]);\n\n  return {\n    breakpoint,\n    viewport\n  };\n}\n","import { useEffect  } from 'react';\nimport isBrowser from './is-browser';\n\n/**\n * Assign an new event listener to the body element that only triggers if the\n * event target is outside the provided reference DOM Node.\n * Code is referenced from https://usehooks.com/useOnClickOutside/\n *\n * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n * @param {Function} handler Completion callback function.\n * @public\n */\nexport default function useOnClickOutside(ref, handler) {\n\n  /**\n   * Trigger the listener if the clicked target does not contain the\n   * HTML/Component reference.\n   * @private\n   */\n  useEffect(\n    () => {\n      if (!isBrowser) return;\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        const composedPath = typeof event.composedPath === 'function' && !Array.from(event.composedPath()).includes(ref.current);\n        if (!composedPath || !ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    [ref, handler]\n  );\n}\n","// based on https://github.com/donavon/use-event-listener\n\nimport { useRef, useEffect } from 'react';\n\nconst useEventListener = (\n  eventName,\n  handler,\n  element,\n  options = {}\n) => {\n  const savedHandler = useRef();\n  const { capture, passive, once } = options;\n\n  // Use element if passed, or default to window in the browser\n  element = element || typeof window !== 'undefined' && window;\n\n  // Update ref.current value if handler changes.\n  // This allows our effect below to always get latest handler ...\n  // ... without us needing to pass it in effect deps array ...\n  // ... and potentially cause effect to re-run every render.\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    // Make sure element supports addEventListener\n    const isSupported = element && element.addEventListener;\n    // Safety check for SSR - hook becomes noop if addEventListener not on element\n    if (!isSupported) {\n      return;\n    }\n\n    // Create event listener that calls handler function stored in ref\n    const eventListener = (event) => savedHandler.current(event);\n    // Additional options to support capture, passive, once\n    const opts = { capture, passive, once };\n\n    // Add listener\n    element.addEventListener(eventName, eventListener, opts);\n    return () => {\n      // Remove event listener on cleanup\n      element.removeEventListener(eventName, eventListener, opts);\n    };\n  }, [eventName, element, capture, passive, once]);\n};\n\nexport default useEventListener;\n","import PropTypes from 'prop-types';\nimport useBreakpoints from './use-breakpoints';\n\nexport default function Breakpoints({ children, breakpoints }) {\n  const { breakpoint } = useBreakpoints(...breakpoints);\n  return children({ breakpoint });\n}\n\nBreakpoints.propTypes = {\n  breapoints: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf('string')\n  ]),\n  /** remaining elements to render */\n  children: PropTypes.any\n};\n","import PropTypes from 'prop-types';\nimport useOnClickOutside from './use-click-outside';\n/**\n * @param {Object} props props\n * @param {function} props.onclick outside handler\n * @param {object} props.targetRef parent ref\n * @returns {React.ReactComponent} HOC component for handling clicks outside\n */\nexport default function ClickOutside({ onClick, children, targetRef }) {\n  useOnClickOutside(targetRef, onClick);\n  return children;\n}\n\nClickOutside.propTypes = {\n  /** Event handler */\n  onClick: PropTypes.func.isRequired,\n  /** needs to be a React.createRef */\n  targetRef: PropTypes.object.isRequired,\n  /** remaining elements to render */\n  children: PropTypes.node\n};\n","/* eslint-disable no-process-env, no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport Icon from '@ux/icon';\nimport ChevronIcon from '@ux/icon/chevron-down';\nimport LinkArrowIcon from '@ux/icon/link-arrow';\nimport WindowNewIcon from '@ux/icon/window-new';\n\nconst UX_BUTTON_CLASSNAME = 'ux-button';\n\n//\n// Valid HTML Button types.\n//\nconst buttonTypes = ['button', 'reset', 'submit'];\n\nconst designs = [\n  'critical',\n  'inline',\n  'primary',\n  'secondary',\n  'control'\n];\n\n// This mapping exists to \"automatically\" convert legacy v2001 Button designs to their\n// closest v2002 equivalent. This will allow for easier upgrades during the transition period\n// when v2001 is still supported (and possibly used by downstream shared widgets)\n// @TODO Remove in v2100\nconst LEGACY_DESIGN_MAPPING = {\n  addon: '',\n  base: '',\n  button: 'primary',\n  canvas: '',\n  content: 'inline',\n  contentPurchase: 'inline',\n  contentLight: 'inline',\n  danger: 'critical',\n  default: 'secondary',\n  defaultDark: 'secondary',\n  defaultLight: 'secondary',\n  defaultLightSecondary: 'secondary',\n  defaultPrimary: 'primary',\n  defaultPurchase: 'primary',\n  defaultBrand: '',\n  defaultInfo: '',\n  defaultWarning: 'critical',\n  defaultDanger: 'critical',\n  defaultSuccess: '',\n  defaultFeature: '',\n  info: '',\n  link: 'inline',\n  purchase: 'primary',\n  brand: '',\n  submit: 'primary',\n  success: '',\n  tertiary: 'inline',\n  tertiaryInline: 'inline',\n  warning: 'critical',\n  feature: 'primary',\n  toggle: '',\n  linkLight: 'inline',\n  merch: 'primary',\n  merchSec: 'secondary',\n  merchLight: 'link',\n  merchSecLight: 'link'\n};\n\n/**\n* Display a button from a set of predefined types.\n*\n* @displayName Button\n* @class Button\n* @public\n*/\nexport class Button extends Component {\n  constructor(props) {\n    super(props);\n    this._warn();\n  }\n\n  get _ariaAttributes() {\n    return {\n      'aria-label': this.props['aria-label'],\n      'aria-labelledby': this.props['aria-labelledby'],\n      'aria-haspopup': this.props['aria-haspopup'],\n      'aria-disabled': this.props['aria-disabled']\n    };\n  }\n\n\n  _warn() {\n    const {\n      children,\n      icon,\n      text,\n      design,\n      as\n    } = this.props;\n\n    if (process.env.NODE_ENV === 'production') return;\n\n    if (children) {\n      console.warn(`Warning: The use of children elements within @ux/button is deprecated.\n        Please use the 'text' prop instead.`);\n    }\n\n    const missingText = !(text || children);\n    const missingLabel = !(this._ariaAttributes['aria-label'] || this._ariaAttributes['aria-labelledby']);\n    if (icon && missingText && missingLabel) {\n      console.warn([\n        `Warning: Buttons may not be accessible containing only an icon, `,\n        `consider adding the 'aria-label' or 'aria-labelledby' prop to the @ux/button.`\n      ].join(''));\n    }\n\n    const mappedDesign = LEGACY_DESIGN_MAPPING[design];\n    if (typeof mappedDesign !== 'undefined') {\n      console.warn([\n        `Warning: The Button design '${design}' was deprecated in v2001 and will be removed in v2100, `,\n        `please use one of (${designs.join(', ')}). The design '${mappedDesign}' is being used instead. See http://x.co/6nzLv`\n      ].join(''));\n    }\n    if (String(design).startsWith('merch') && typeof as === 'undefined') {\n      console.warn([\n        `Warning: Merch button designs were deprecated in v2001 and will be removed in v2100. This `,\n        `button will be using the \\`as=\"cta\"\\` prop, you should explicitly set this prop. See http://x.co/6nzLv`\n      ].join(''));\n    }\n  }\n\n  /**\n   * Render the button element with predefined classes and restricted designs.\n   *\n   * @returns {ReactElement} Button element.\n   * @private\n   */\n  render() { // eslint-disable-line complexity, max-statements\n    const {\n      active,\n      as,\n      className,\n      children,\n      design,\n      disabled,\n      download,\n      external,\n      href,\n      icon,\n      id,\n      onBlur,\n      onClick,\n      onFocus,\n      onKeyDown,\n      onKeyPress,\n      onKeyUp,\n      onMouseDown,\n      onMouseEnter,\n      onTouchStart,\n      size,\n      text,\n      title,\n      type\n    } = this.props;\n\n    // @TODO Remove in v2100\n    const mappedDesign = LEGACY_DESIGN_MAPPING[design] || design;\n    // @TODO Remove in v2100\n    const mappedAs = (typeof as === 'undefined' && String(design).startsWith('merch')) ? 'cta' : as;\n\n    const TagName = href ? 'a' : 'button';\n    const classes = [UX_BUTTON_CLASSNAME];\n\n    // Only allow data-* attributes to pass-through\n    const passThroughProps = Object.keys(this.props).reduce((curr, propName) => {\n      if (propName.startsWith('data-')) {\n        curr[propName] = this.props[propName];\n      }\n      return curr;\n    }, {});\n\n    let accessory;\n    let ariaActiveAttr;\n    let buttonType;\n    let role;\n\n    const content = (children && !text) ? children : text;\n\n    if (!href) {\n      buttonType = buttonTypes.includes(type.toLowerCase()) ? type : buttonTypes[0];\n\n      const prepareIcon = {\n        'aria-hidden': true,\n        'className': `${UX_BUTTON_CLASSNAME}-accessory`\n      };\n\n      switch (mappedAs) {\n        case 'select':\n          accessory = <ChevronIcon { ...prepareIcon }/>;\n          ariaActiveAttr = 'aria-expanded';\n          break;\n        case 'cta':\n          accessory = <LinkArrowIcon { ...prepareIcon }/>;\n          break;\n        case 'external':\n          accessory = <WindowNewIcon { ...prepareIcon }/>;\n          break;\n        case 'toggle':\n          ariaActiveAttr = 'aria-checked';\n          role = 'switch';\n          break;\n        default:\n          ariaActiveAttr = 'aria-pressed';\n      }\n    }\n\n    if (designs.includes(mappedDesign)) {\n      classes.push(`${UX_BUTTON_CLASSNAME}-${mappedDesign}`);\n    }\n\n    if (size === 'small') {\n      classes.push(`${UX_BUTTON_CLASSNAME}-small`);\n    }\n\n    if (!content) {\n      classes.push(`${UX_BUTTON_CLASSNAME}-square`);\n    }\n\n    let iconComponent;\n    if (icon) {\n      const { className: clsName } = icon.props || {};\n      const iconClassName = classNames(`${UX_BUTTON_CLASSNAME}-icon`, clsName);\n      iconComponent = React.cloneElement(icon, { className: iconClassName });\n    }\n\n    return <TagName\n      { ...this._ariaAttributes }\n      { ...(typeof active === 'boolean' && { [ariaActiveAttr]: active }) }\n      className={ classNames(classes.join(' '), className) }\n      disabled={ disabled }\n      download={ href && download }\n      href={ href }\n      id={ id }\n      { ...({ onBlur, onClick, onFocus, onKeyDown, onKeyPress, onKeyUp, onMouseEnter, onMouseDown, onTouchStart }) }\n      role={ role }\n      target={ href && external ? '_blank' : null }\n      title={ title }\n      type={ buttonType }\n      { ...passThroughProps }>\n      { iconComponent }\n      { content && <span className={ `${UX_BUTTON_CLASSNAME}-text` }>{ content }</span> }\n      { accessory }\n    </TagName>;\n  }\n}\n\nButton.defaultProps = {\n  type: 'button'\n};\n\nButton.designs = designs;\n\nButton.propTypes = {\n  /** DEPRECATED prop to render children elements */\n  'children': PropTypes.node,\n  /** Boolean for a11y support */\n  'active': PropTypes.bool,\n  /** Label for a11y support */\n  'aria-label': PropTypes.string,\n  /** Labeledby for a11y support */\n  'aria-labelledby': PropTypes.string,\n  /** haspopup for a11y support */\n  'aria-haspopup': PropTypes.bool,\n  /** disabled for a11y support */\n  'aria-disabled': PropTypes.bool,\n  /** Displays the button with different properties and a11y support */\n  'as': PropTypes.oneOf(['cta', 'select', 'toggle', 'external']),\n  /** Classes applied to a button for positioning purposes */\n  'className': PropTypes.string,\n  /** Visual style of the component */\n  'design': PropTypes.oneOf(Button.designs),\n  /** Sets the disabled state of a button */\n  'disabled': PropTypes.bool,\n  /** Allows for link to be downloadable and take optional download file name */\n  'download': PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string\n  ]),\n  /** Link opens in a new tab/page */\n  'external': PropTypes.bool,\n  /** Uri for where a button links to, which turns a button into an <a> tag */\n  'href': PropTypes.string,\n  /** Optional icon from @ux/icon for the button, appears on the left */\n  'icon': PropTypes.shape({ type: Icon.type, props: PropTypes.object }),\n  /** Id applied to a button */\n  'id': PropTypes.string,\n  /** Blur handler for a button */\n  'onBlur': PropTypes.func,\n  /** Click handler for a button */\n  'onClick': PropTypes.func,\n  /** Focus handler for a button */\n  'onFocus': PropTypes.func,\n  /** Key Down handler for a button */\n  'onKeyDown': PropTypes.func,\n  /** Key Press handler for a button */\n  'onKeyPress': PropTypes.func,\n  /** Key Up handler for a button */\n  'onKeyUp': PropTypes.func,\n  /** Mouse Enter handler for a button */\n  'onMouseEnter': PropTypes.func,\n  /** Mouse Down handler for a button */\n  'onMouseDown': PropTypes.func,\n  /** Touch Start handler for a button */\n  'onTouchStart': PropTypes.func,\n  /** Size of the button */\n  'size': PropTypes.oneOf(['small']),\n  /** Contents of the button */\n  'text': PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number\n  ]),\n  /** An optional title-attribute for the button element, frequently displayed as a tooltip by browsers */\n  'title': PropTypes.string,\n  /** Button type */\n  'type': PropTypes.string\n};\n\nexport default Button;\n","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _svgosm = require(\"./svgosm.js\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/**\n * Generates our dedicated Icon component.\n *\n * @param {String} displayName Name of the Icon.\n * @param {String} deprecated Indication if the icon should be deprecated\n * @returns {React.Component} The React Component.\n * @public\n */\nmodule.exports = function create(displayName, deprecated) {\n  /**\n   * The base component that renders the Icon.\n   *\n   * @constructor\n   * @param {Object} props All the props\n   * @param {Number} props.width Width of the icon.\n   * @param {Number} props.height Height of the icon.\n   * @param {String} props.className Class name of the icon.\n   * @param {String} props.title A11y title of the icon.\n   * @param {String} props.desc A11y description of the icon.\n   * @param {String} props.role A11y role for the icon.\n   * @param {Object} props.props The rest of the props that are spread on the <use> tag.\n   * @param {React.Ref} ref Forwarding reference\n   * @private\n   */\n  const Fwd = /*#__PURE__*/_react.default.forwardRef(function Icon(_ref, ref) {\n    let {\n      width,\n      height,\n      className,\n      title,\n      desc,\n      role\n    } = _ref,\n        props = (0, _objectWithoutProperties2.default)(_ref, [\"width\", \"height\", \"className\", \"title\", \"desc\", \"role\"]);\n    const [failed, again] = (0, _react.useState)(null);\n\n    const res = _svgosm.svgosm.get(displayName, function extract() {\n      const details = _svgosm.svgosm.extract(`uxp-icon-${displayName}`);\n\n      if (!details) return;\n      return Object.assign(details, {\n        title: title,\n        desc: desc\n      });\n    }); //\n    // Allows us to forcefully trigger a re-render of the Icon in the case\n    // where styles would be loaded after the JavaScript is executed. E.g.\n    // in the case that CSS in manually injected using React so we can't read\n    // it out until an initial render of a component has taken place.\n    //\n    // This is one time fail safe only per component to prevent too many\n    // re-render attempts.\n    //\n\n\n    (0, _react.useEffect)(function retry() {\n      if (res || failed) return;\n      again(true);\n    }, []);\n    if (!res) return null;\n    const svg = {\n      className: ['uxicon-svg-container', className].join(' '),\n      height: height || res.height,\n      width: width || res.width,\n      role,\n      ref\n    };\n    return /*#__PURE__*/_react.default.createElement(\"svg\", svg, /*#__PURE__*/_react.default.createElement(\"use\", (0, _extends2.default)({\n      fill: \"currentColor\"\n    }, props, {\n      xlinkHref: res.link\n    })));\n  }); //\n  // Ease debugging.\n  //\n\n\n  Fwd.displayName = displayName + 'Icon';\n  /**\n   * PropType validation.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Fwd.propTypes = {\n    width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n    height: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n    className: _propTypes.default.string,\n    desc: _propTypes.default.string,\n    title: _propTypes.default.string,\n    role: _propTypes.default.string\n  };\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Fwd.defaultProps = {\n    role: 'img',\n    width: '1.5em',\n    height: '1.5em'\n  }; //\n  // Ensure that this is not active in production environments, should be\n  // auto deleted by minifiers.\n  //\n\n  if (process.env.NODE_ENV !== 'production') {\n    //\n    // Please note that the icon is passed as string because of our\n    // {namespace:field} template pattern. The files are processed with babel\n    // which thinks it's an object pattern and reformats it as a pretty object\n    // which breaks the template engine. So we're just gonna pass it as string\n    // to work around that limitation.\n    //\n    if (deprecated === 'true') console.log(`The icon \"${displayName}\" is deprecated and will be removed in the next major release of @ux/icon`);\n  }\n\n  return Fwd;\n};","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('x', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('chevron-down', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('checkmark', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('chevron-right', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('alert', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('link-arrow', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('information', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('help', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('star-outline', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('minus', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('ellipses', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('chevron-left', 'false');","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * Render a UXIcon.\n *\n * @displayName Icon\n * @class Icon\n * @public\n */\nclass Icon extends Component {\n  render() {\n    const style = {};\n    const { name, color, size } = this.props;\n    const className = `uxicon uxicon-${name}`;\n\n    if (size) style.fontSize = size;\n    if (color) style.color = color;\n\n    return (\n      <span style={ style } className={ className } />\n    );\n  }\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @public\n */\nIcon.propTypes = {\n  /** Name of the icon */\n  name: PropTypes.string.isRequired,\n  /** Color of the button */\n  color: PropTypes.string,\n  /** Size of the button */\n  size: PropTypes.number\n};\n\nexport default Icon;\n","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('search', 'false');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.svgosm = exports.SVGOSM = exports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Our default root element.\n *\n * @type {DOMElement|Null}\n * @private\n */\nconst html = typeof document !== 'undefined' ? document.body || document.documentElement : null;\n/**\n * SVG Object Storage Manager (SVGOSM) attempts to reduce the SVG DOM footprint\n * by moving all SVG objects into symbols so they can be re-used without having\n * to inject the full SVG structure in multiple places.\n *\n * @class\n * @param {String} name Name, id of the container to inject.\n * @public\n */\n\nclass SVGOSM {\n  constructor(name, root = html) {\n    this.id = name; // Name of the container.\n\n    this.tracker = {}; // Storage tracker to reduce DOM lookup.\n\n    this.mounted = []; // List of all roots we need to operate in.\n\n    if (root) this.mount(root);\n  }\n  /**\n   * Inject a new SVG element into a given root that is going to be used as\n   * storage for all our new symbols so they can be referenced in our HTML.\n   *\n   * @param {DOMElement} root Container we need to mount in.\n   * @public\n   */\n\n\n  mount(root) {\n    const container = document.createElement('div');\n    container.style = 'display:none';\n    container.id = this.id;\n    const svg = document.createElementNS(SVGOSM.xmlns, 'svg');\n    container.appendChild(svg);\n    root.appendChild(container);\n    this.mounted.push({\n      svg,\n      root,\n      container\n    }); //\n    // Populate with other discovered icons.\n    //\n\n    Object.keys(this.tracker).forEach(key => {\n      svg.innerHTML += this.tracker[key].sym;\n    });\n  }\n  /**\n   * Extract information out the CSS of a given HTML element and extract the svg\n   * content and the size of the element.\n   *\n   * @param {String} name Name of the CSS variable we need to extract.\n   * @returns {Object|Undefined} The resulting information.\n   * @public\n   */\n\n\n  extract(name) {\n    if (!name) return;\n    let match;\n    this.mounted.some(function search({\n      container\n    }) {\n      const style = window.getComputedStyle(container, ':before');\n      const cssvar = name.startsWith('--') ? name : `--${name}`;\n      const cssvarvalue = style.getPropertyValue(cssvar);\n      let content = style.getPropertyValue('content'); //\n      // BLACK MAGIC WARNING: The following blocks provide the following:\n      //\n      // - Provide backwards compatibility to content: url(svg)\n      // - Bail out of old font based content: \"\\char\" properties\n      // - Prefer cssvariable values over old content: url() as they can\n      //   be overridden for white labels.\n      //\n      // The big problem here is that `content` can really be anything, it can\n      // be `none`, it can be `''`, even `normal` when nothing is assigned to it\n      // depending on the element it receives. So we need to figure out _when_\n      // to bail out.\n      //\n      // Browsers also handle reading out the `content` property differently,\n      // literally all over the place. Some encode the content, include the\n      // quotes that are wrapped around the content, others just include the\n      // actual string. So, we just want to normalize this to what ever we want\n      // to validate against, which is a single character.\n      //\n\n      if (content.length === 3) content = content.charAt(1);\n\n      if (content) {\n        if (content.includes('svg')) {\n          match = content;\n        } else if (content.length === 1 && !/[a-z\\d]/i.test(content)) {\n          //\n          // The contents of icon fonts would be a unicode wrapped in quotes. So\n          // if it's 3 chars length (not binary size), and the 2nd character is\n          // not alphabetical or a number, it must be unicde char and we should\n          // proceed to **not** transform anything here.\n          //\n          return !!match;\n        }\n      } //\n      // If a CSS variable is defined it should always be used as SVG contents.\n      // When we found absolutely nothing at this point, bail out.\n      //\n\n\n      if (cssvarvalue && cssvarvalue.includes('svg')) match = cssvarvalue;\n      return !!match;\n    });\n    if (!match) return;\n    return this.parse(match);\n  }\n  /**\n   * Parses the given SVG string and extracts contents.\n   *\n   * @param {String} str The encoded SVG string.\n   * @returns {Object} Parsed SVG result.\n   * @private\n   */\n\n\n  parse(str) {\n    if (!~str.indexOf('svg')) return {};\n    str = str.replace(/%23/g, '#').replace(/\\\\\"/g, '\"');\n    const start = str.indexOf('>');\n    const finish = str.indexOf('</svg>');\n    const result = /viewBox=.*?([\\d\\s.]+)/.exec(str.substr(0, start));\n    if (!result) return {};\n    return {\n      shapes: str.slice(start + 1, finish),\n      viewBox: result[1]\n    };\n  }\n  /**\n   * Returns the correct reference to the object.\n   *\n   * @param {String} name The name of the object we want to use.\n   * @param {Function} [fn] Sets the value if there isn't any.\n   * @returns {Object|Null} The value that should be used in the `xlink:href` attr.\n   * @public\n   */\n\n\n  get(name, fn) {\n    const res = this.tracker[name];\n    if (res || !fn) return res;\n    this.set(name, fn(name));\n    return this.tracker[name];\n  }\n  /**\n   * Store a new Symbol in our managed SVG object.\n   *\n   * @param {String} name Name of the symbol.\n   * @param {Object} data Detailed information about the symbol.\n   * @param {String} data.viewBox The viewBox of the symbol.\n   * @param {String} data.title Title of the symbol.\n   * @param {String} data.desc Description of the symbol.\n   * @param {String} data.shapes The actual symbol that need to be stored.\n   * @returns {Boolean} Indication if the shape was inserted.\n   * @public\n   */\n\n\n  sym(name, _ref = {}) {\n    let {\n      viewBox,\n      title,\n      desc,\n      shapes\n    } = _ref,\n        data = (0, _objectWithoutProperties2.default)(_ref, [\"viewBox\", \"title\", \"desc\", \"shapes\"]);\n    if (!shapes) return false;\n    const a11ytitle = `<title>${title || name}</title>`;\n    const a11ydesc = desc ? `<desc>${desc}</desc>` : '';\n    const sym = `<symbol id=\"${this.id}-${name}\" viewBox=\"${viewBox}\">${a11ytitle}${a11ydesc}${shapes}</symbol>`;\n    this.tracker[name] = _objectSpread(_objectSpread({}, data), {}, {\n      link: `#${this.id}-${name}`,\n      viewBox,\n      sym\n    });\n    return sym;\n  }\n  /**\n   * Store a new Symbol in our managed SVG object.\n   *\n   * @param {String} name Name of the symbol.\n   * @param {Object} data Detailed information about the symbol.\n   * @returns {Boolean} Indication if the shape was inserted.\n   * @public\n   */\n\n\n  set(name, data) {\n    const sym = this.sym(name, data);\n    if (!sym) return false;\n    this.mounted.forEach(({\n      svg\n    }) => {\n      svg.innerHTML += sym;\n    });\n    return true;\n  }\n\n}\n/**\n * The XML namespace.\n *\n * @type {String}\n * @private\n */\n\n\nexports.SVGOSM = exports.default = SVGOSM;\nSVGOSM.xmlns = 'http://www.w3.org/2000/svg';\n/**\n * Pre-create an instance.\n *\n * @type {SVGOSM}\n * @public\n */\n\nconst svgosm = new SVGOSM('svg-container');\nexports.svgosm = svgosm;","import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport GrowlMessage from './growl-message';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { classNames } from '@ux/component-utilities';\n\n/**\n * The next number for unique message id\n *\n * @type {number}\n * @private\n */\nlet _msgId = 0;\n\n/**\n * The Growl component.\n *\n * @displayName Growl\n * @class Growl\n * @public\n */\nclass Growl extends Component {\n  constructor() {\n    super(...arguments);\n\n    this._fadeTimers = {};\n    this.state = {\n      messages: []\n    };\n  }\n\n  componentDidMount() {\n    if (!global.growlInstance) {\n      global.growlInstance = this;\n    } else {\n      // eslint-disable-next-line\n      try { console.error('Growl can only have one active instance.'); } catch (e) {}\n    }\n  }\n\n  /**\n   * React lifecycle hook invoked when component is about to unmount.\n   *\n   * @private\n   */\n  componentWillUnmount() {\n    this._clearMessages();\n\n    if (this === global.growlInstance) {\n      global.growlInstance = null;\n    }\n  }\n\n  /**\n   * Adds new message based on provided config options.\n   *\n   * @param {object}  config            Configuration\n   * @param {string}  config.title      Title\n   * @param {string}  config.content    Description\n   * @param {string}  [config.icon]     Icon\n   * @param {boolean} [config.fade]     Fade\n   * @param {number}  [config.fadeTime] Fade time in milliseconds\n   * @private\n   */\n  _addMessage(config) {\n    const msgProps = this._setupMessage(config);\n\n    const messages = this.state.messages.slice(0);\n    messages.push(msgProps);\n    if (msgProps.fade) {\n      this._startFade(msgProps.id, msgProps.fadeTime);\n    }\n\n    this.setState({\n      messages\n    });\n  }\n\n  /**\n   * Sets up callback and props for new GrowlMessage.\n   *\n   * @param {object} config Message config\n   * @returns {object} msgProps Props used for a GrowlMessage\n   * @private\n   */\n  _setupMessage(config) {\n    const id = `GrowlMsg_${_msgId++}`;\n\n    const msgProps = {\n      id,\n      fade: true,\n      onClose: () => {\n        this._closeMessage(id);\n      },\n      ...config\n    };\n\n    if (msgProps.fade) {\n      msgProps.fadeTime = !msgProps.fadeTime ? this.props.fadeTime : msgProps.fadeTime;\n\n      msgProps.onMouseEnter = () => {\n        this._stopFade(id);\n      };\n      msgProps.onMouseLeave = () => {\n        this._startFade(id, msgProps.fadeTime);\n      };\n    }\n    return msgProps;\n  }\n\n  /**\n   * Cancel a message fade timer.\n   *\n   * @param {string} msgId Message id for timer to stop\n   * @private\n   */\n  _stopFade(msgId) {\n    if (msgId in this._fadeTimers) {\n      clearTimeout(this._fadeTimers[msgId]);\n      delete this._fadeTimers[msgId];\n    }\n  }\n\n  /**\n   * Start a message fade timer.\n   *\n   * @param {string} msgId Message id for timer to stop\n   * @param {number} fadeTime Time in milliseconds before fade\n   * @private\n   */\n  _startFade(msgId, fadeTime) {\n    this._fadeTimers[msgId] = setTimeout(() => {\n      this._closeMessage(msgId);\n    }, fadeTime);\n  }\n\n  /**\n   * Clear all the messages.\n   *\n   * @private\n   */\n  _clearMessages() {\n    this.state.messages.forEach(m => {\n      this._stopFade(m.id);\n    });\n\n    this.setState({\n      messages: []\n    });\n  }\n\n  /**\n   * Close a message.\n   *\n   * @param {string} msgId Id of message to close\n   * @private\n   */\n  _closeMessage(msgId) {\n    let idx = 0;\n    for (idx; idx < this.state.messages.length; idx++) {\n      if (this.state.messages[idx].id === msgId) break;\n    }\n\n    const messages = this.state.messages.slice(0);\n    this._stopFade(msgId);\n\n    messages.splice(idx, 1);\n\n    this.setState({\n      messages\n    });\n  }\n\n  /**\n   * Get the message elements.\n   *\n   * @returns {Array} GrowlMessage elements\n   * @private\n   */\n  get _messageElements() {\n    const elements = [];\n\n    this.state.messages.forEach((m) => {\n      const element = (\n        <GrowlMessage\n          onClose={ this._closeMessage.bind(this) }\n          key={ m.id }\n          { ...m }\n          ariaLabels={{\n            close: this.props.ariaLabels.close\n          }}\n          onCloseButtonKeyDown={ this._handleMessageKeyDown.bind(this) } />\n      );\n      elements.push(\n        <CSSTransition\n          key={ m.id }\n          classNames={{\n            enter: 'ux-growl-item-enter',\n            enterActive: 'ux-growl-item-enter-active',\n            exit: 'ux-growl-item-exit',\n            exitActive: 'ux-growl-item-exit-active'\n          }}\n          timeout={{ enter: 500, exit: 500 }}>\n          { element }\n        </CSSTransition>\n      );\n    });\n\n    return elements;\n  }\n\n  /**\n   * Handle keyboard events for escape key on the close all button.\n   *\n   * @param {Event} event Browser event.\n   * @private\n   */\n  _handleMessageKeyDown(event) {\n    const messageEvent = event.target;\n    const growlMessage = messageEvent.parentNode.parentNode;\n\n    if (event.type === 'keydown' && event.key === 'Escape') {\n      this._closeMessage(growlMessage.id);\n    }\n  }\n\n  /**\n   * Handle keyboard events for escape key on the close all button.\n   *\n   * @param {Event} event Browser event.\n   * @private\n   */\n  _handleKeyDown(event) {\n    const key = event.key;\n\n    if (this.growlMain) {\n      this.closeAllButton = this.growlMain.querySelector('.ux-growl-clear-show');\n    }\n\n    if (event.type === 'keydown' && key === 'Escape' && this.closeAllButton === event.currentTarget) {\n      this._clearMessages();\n    }\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {ReactElement} Rendered Growl element.\n   * @private\n   */\n  render() {\n    const { messages = [] } = this.state || {};\n    if (!messages.length) return false;\n\n    return (\n      <div aria-live='polite' className='ux-growl' ref={ r => { this.growlMain = r; } }>\n        <button\n          type='button'\n          aria-label={ this.props.ariaLabels.closeAll }\n          className={ classNames('ux-growl-clear', messages.length >= 2 ? 'ux-growl-clear-show' : '') }\n          onClick={ this._clearMessages.bind(this) }\n          onKeyDown={ this._handleKeyDown.bind(this) }>\n          { this.props.closeLabel }\n        </button>\n        <div className='ux-growl-messages' >\n          <TransitionGroup>\n            { this._messageElements }\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Adds new message based on provided config options.\n *\n * @param {object}  config            Configuration\n * @param {string}  config.title      Title\n * @param {string}  config.content    Description\n * @param {string}  [config.icon]     Icon\n * @param {boolean} [config.fade]     Fade\n * @param {number}  [config.fadeTime] Fade time in milliseconds\n * @public\n */\nfunction addGrowlMessage(config) {\n  if (!global.growlInstance) {\n    // eslint-disable-next-line\n    try { console.error('No Growl instance.'); } catch (e) {}\n  } else {\n    global.growlInstance._addMessage(config);\n  }\n}\n\n/**\n * Adds new message based on provided config options.\n *\n * @param {object}  config            Configuration\n * @param {string}  config.title      Title\n * @param {string}  config.content    Description\n * @param {string}  [config.icon]     Icon\n * @param {boolean} [config.fade]     Fade\n * @param {number}  [config.fadeTime] Fade time in milliseconds\n * @public\n */\nGrowl.addGrowlMessage = Growl.addMessage = addGrowlMessage;\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nGrowl.propTypes = {\n  /** Time in milliseconds before individual messages fade away */\n  fadeTime: PropTypes.number.isRequired,\n  /** Visible text for close all button */\n  closeLabel: PropTypes.node,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for close-all button */\n    closeAll: PropTypes.string,\n    /** Screen reader label for individual message close button */\n    close: PropTypes.string\n  })\n};\n\n/**\n * PropType defaults.\n *\n * @type {Object}\n * @private\n */\nGrowl.defaultProps = {\n  fadeTime: 3000,\n  closeLabel: '[ close all ]',\n  ariaLabels: {\n    closeAll: '[ close all ]',\n    close: 'Close'\n  }\n};\n\n/**\n * Check if Growl has an active instance.\n *\n * @returns {boolean} If an instance exists\n * @public\n */\nObject.defineProperty(Growl, 'hasInstance', {\n  get() {\n    return global.growlInstance !== null;\n  }\n});\n\n\nexport {\n  addGrowlMessage,\n  Growl as default\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrfqEvent = exports.TrfqImpression = exports.TrfqPageReq = exports.gtm = exports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; /* eslint-disable max-params */\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Get or create a global _trfq object.\nfunction _trfq() {\n  // Get the global scope to use.\n  // In browsers, `this` refers to the `window` object, which serves as the global scope.\n  // If `this` is falsy (e.g. in Node environments), we must fall back to the `global` scope object.\n  // If even the `global` scope object is missing, fall back to an empty object.\n  /* eslint-disable no-invalid-this */\n  var scope = this || global || {};\n  /* eslint-enable no-invalid-this */\n\n  if (!scope._trfq) {\n    scope._trfq = [];\n  }\n\n  return scope._trfq;\n}\n\n/* Make sure scope._trfq is initialized */\n_trfq();\n\n/**\n * trfq - Procedural interface for Traffic 2.\n */\nvar trfq = {\n  /**\n   * @public trfq.logEvent - Logs a Traffic 2 event with the given metadata.\n   *\n   * @param {String} id Traffic 2 event ID (e.g. `gce.sales.hosting.profile.login.update` (required)\n   * @param {String} desc Traffic 2 event description. (e.g. `click`, `hover`, `touch`, `custom`) (required)\n   * @param {Object} data Traffic 2 key-value metadata (e.g. `{ 'status': 'OK', 'foo', 42 }`).\n   * @param {Event} evt Event object. Will be passed to the callback.\n   * @param {Function} cb Callback to execute after logging. Called with the `evt` argument.\n   * @param {Number} cbDelay Callback delay in milliseconds (passed to setTimeout). If undefined, callback is immediate.\n   * @returns {Mixed} If no callback was specified, nothing is returned. If no callback delay was specified, the result of the\n   * callback is returned. Otherwise, a timeout ID is returned, suitable for use with `clearTimeout`.\n   */\n  logEvent: function logEvent(id, desc, data, evt, cb, cbDelay) {\n    function toKeyValueArray(obj) {\n      return Object.keys(obj).map(function (key) {\n        return [key, typeof obj[key] === 'number' ? obj[key] : String(obj[key])];\n      });\n    }\n\n    var cmd = ['cmdLogPageEvent', desc, id];\n    cmd.push((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && data !== null ? toKeyValueArray(data) : []);\n\n    if (evt) {\n      cmd.push(evt.target, evt);\n    }\n\n    _trfq().push(cmd);\n\n    if (typeof cb === 'function') {\n      return Number.isNaN(cbDelay) || !Number.isFinite(cbDelay) ? cb(evt) : setTimeout(cb, cbDelay);\n    }\n  },\n\n\n  /**\n   * @public trfq.logImpression - Logs a Traffic 2 impression with the given ID.\n   *\n   * @param {String} id Traffic 2 event ID (e.g. `gce.sales.hosting.profile.login.update` (required)\n   * @returns {undefined}\n   */\n  logImpression: function logImpression(id) {\n    _trfq().push(['cmdLogImpression', id]);\n  },\n\n\n  /**\n   * @public trfq.logPageReq - Logs a Traffic 2 virtual page request with the given path.\n   *\n   * @param {String} path Traffic 2 virtual path (e.g. `/virtual-page`) (required)\n   * @returns {undefined}\n   */\n  logPageReq: function logPageReq(path) {\n    _trfq().push(['cmdLogPageRequest', path]);\n  }\n};\n\n/**\n * gtm - procedural API to configure Google Tag Manager. Google Tag Manager is responsible\n * for loading the Traffic2 \"driver\" script (e.g. tcc.combined.2.1.25c.min.js).\n */\nvar gtm = {\n  /**\n   * @public gtm.start – pushes the final 'gtm.start' event into the _gaDataLayer\n   * @returns {undefined}\n   */\n  start: function start() {\n    var w = window;\n    if (w.ux && w.ux.disable && w.ux.disable.ga === true) {\n      return;\n    } // eslint-disable-line no-undef\n\n    var l = '_gaDataLayer';\n    w[l] = w[l] || [];\n    w[l].push({\n      'gtm.start': new Date().getTime(),\n      event: 'gtm.js'\n    });\n\n    var gtmScript = document.createElement('script');\n    var insertionPoint = document.getElementsByTagName('script')[0];\n    var insertionParent = insertionPoint.parentNode;\n\n    //\n    // We hard-code \"GTM-SXRF\" because this is controlled by Traffic2 itself\n    // by definition since it is the only script loaded by Google Tag Manager.\n    //\n    gtmScript.type = 'text\\/javascript';\n    gtmScript.async = 'true';\n    gtmScript.src = w.ux && w.ux.tccUrl || 'https://www.googletagmanager.com/gtm.js?id=GTM-SXRF&l=_gaDataLayer';\n\n    insertionParent.insertBefore(gtmScript, insertionPoint);\n  },\n\n  /**\n   * @public gtm.configure – pushes any data objects in `options.data` into _gaDataLayer\n   * and then pushes final 'gtm.start' event.\n   *\n   * @param {Object} options Google Tag Manager data options.\n   * @returns {undefined}\n   */\n  configure: function configure(options) {\n    if (!options || (typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n      return;\n    }\n\n    var w = window;\n    var data = options.data || [];\n    w._gaDataLayer = w._gaDataLayer || [];\n    w._gaDataLayer = w._gaDataLayer.concat(data, w.ux && w.ux.gaconfig || []);\n\n    w._gaq = w._gaq || [];\n    if (options.domain) {\n      w._gaq.push(['_setDomainName', options.domain]);\n    }\n\n    gtm.start();\n  }\n};\n\n/**\n * @private fallbackRequiredProp - Creates a React prop validator with the following checks:\n * - If the prop is truthy, validate the prop with the given base validator.\n * - Otherwise, if the given fallback is truthy, validate the fallback with the base validator.\n * - If neither the prop nor the fallback is truthy, validation fails.\n *\n * @param {Function} propType Base React prop validator\n * @param {Mixed} fallback Fallback value to use\n * @returns {Function} A React prop validator as described above.\n */\nfunction fallbackRequiredProp(propType, fallback) {\n  return function requiredWithFallback(props, propName, componentName) {\n    var prop = props[propName];\n    if (prop) {\n      return propType(props, propName, componentName);\n    } else if (fallback) {\n      return propType(_defineProperty({}, propName, fallback), propName, componentName);\n    }\n\n    return new Error('No prop `' + propName + '`supplied to `' + componentName + '` and no fallback was found. ' + 'Validation failed.');\n  };\n}\n\n/**\n * @public TrfqEvent - Higher-order React component for Traffic 2 event logging.\n *\n * @param {React.Component} Component React component to wrap.\n * @param {String} id Event identifier to log (e.g. `gce.sales.hosting.profile.login.update`)\n * @param {String} on Name of event on which the logging should occur (e.g. `mouseDown`, `submit`) (default: `click`)\n * @param {String} desc Event description (e.g. `click`, `hover`, `touch`, `custom`) (default: same as `on`)\n * @param {Mixed} data Key-value metadata about the event (e.g. `{ \"status\": \"OK\", \"foo\": \"bar\" }` (optional)\n * @param {Number} delay Delay in number of milliseconds to use with `setTimeout` for calling the component's existing event\n * handler (for the event specified by `on`). Useful for ensuring logging finishes in case the event would normally trigger a page\n * load. (optional)\n * @returns {React.Component} A React component wrapped with Traffic 2 event logging, with the following attributes available:\n * - `{String} trfqId` Event identifier to log (overrides `id`)\n * - `{String} trfqOn` Name of event on which the logging should occur (overrides `on`)\n * - `{String} trfqDesc` Event description (overrides `desc`)\n * - `{Mixed} trfqData` Key-value metadata (overrides `data`)\n * - `{Number} trfqDelay` Existing handler delay (overrides `delay`)\n */\nfunction TrfqEvent(Component, id) {\n  var on = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'click';\n  var desc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : on;\n  var data = arguments[4];\n  var delay = arguments[5];\n\n  return function (_React$Component) {\n    _inherits(TrfqEventComponent, _React$Component);\n\n    function TrfqEventComponent() {\n      _classCallCheck(this, TrfqEventComponent);\n\n      return _possibleConstructorReturn(this, (TrfqEventComponent.__proto__ || Object.getPrototypeOf(TrfqEventComponent)).apply(this, arguments));\n    }\n\n    _createClass(TrfqEventComponent, [{\n      key: 'render',\n      value: function render() {\n        var _props = this.props,\n            _props$trfqId = _props.trfqId,\n            trfqId = _props$trfqId === undefined ? id : _props$trfqId,\n            _props$trfqOn = _props.trfqOn,\n            trfqOn = _props$trfqOn === undefined ? on : _props$trfqOn,\n            _props$trfqDesc = _props.trfqDesc,\n            trfqDesc = _props$trfqDesc === undefined ? desc : _props$trfqDesc,\n            _props$trfqData = _props.trfqData,\n            trfqData = _props$trfqData === undefined ? data : _props$trfqData,\n            _props$trfqDelay = _props.trfqDelay,\n            trfqDelay = _props$trfqDelay === undefined ? delay : _props$trfqDelay,\n            props = _objectWithoutProperties(_props, ['trfqId', 'trfqOn', 'trfqDesc', 'trfqData', 'trfqDelay']);\n\n        // First compute the (React) event to handle from\n        // the name provided to the higher-order component.\n\n\n        var eventName = 'on' + trfqOn.charAt(0).toUpperCase() + trfqOn.slice(1);\n\n        // Store a reference to the existing event handler, and overwrite it\n        // with an interceptor to log the event.\n        var currHandler = props[eventName];\n        props[eventName] = function trfqEventHandler(evt) {\n          trfq.logEvent(trfqId, trfqDesc, trfqData, evt, currHandler, trfqDelay);\n        };\n\n        return _react2.default.createElement(Component, props);\n      }\n    }], [{\n      key: 'propTypes',\n      get: function get() {\n        var string = _propTypes2.default.string,\n            number = _propTypes2.default.number,\n            object = _propTypes2.default.object;\n\n        return {\n          trfqId: fallbackRequiredProp(string, id),\n          trfqOn: fallbackRequiredProp(string, on),\n          trfqDesc: fallbackRequiredProp(string, desc),\n          trfqData: object,\n          trfqDelay: number\n        };\n      }\n    }]);\n\n    return TrfqEventComponent;\n  }(_react2.default.Component);\n}\n\n/**\n * @public TrfqImpression - Higher-order React component for Traffic 2 impression logging upon `componentWillMount`.\n *\n * @param {React.Component} Component The component to wrap (required)\n * @param {String} id Event identifier to log (e.g. `gce.sales.hosting.profile.login.update`)\n * @returns {React.Component} A React component wrapped with Traffic 2 impression logging, with the following attribute available:\n * - `{String} trfqId` Event identifier to log (overrides `id`)\n */\nfunction TrfqImpression(Component, id) {\n  return function (_React$Component2) {\n    _inherits(TrfqImpressionComponent, _React$Component2);\n\n    function TrfqImpressionComponent() {\n      _classCallCheck(this, TrfqImpressionComponent);\n\n      return _possibleConstructorReturn(this, (TrfqImpressionComponent.__proto__ || Object.getPrototypeOf(TrfqImpressionComponent)).apply(this, arguments));\n    }\n\n    _createClass(TrfqImpressionComponent, [{\n      key: 'componentWillMount',\n\n\n      /**\n       * componentWillMount - Logs a Traffic 2 impression when the component is about to mount.\n       */\n      value: function componentWillMount() {\n        var _props$trfqId2 = this.props.trfqId,\n            trfqId = _props$trfqId2 === undefined ? id : _props$trfqId2;\n\n        trfq.logImpression(trfqId);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        // Don't pass along trfq props\n        var props = _objectWithoutProperties(this.props, []);\n\n        delete props.trfqId;\n        return _react2.default.createElement(Component, props);\n      }\n    }], [{\n      key: 'propTypes',\n      get: function get() {\n        var string = _propTypes2.default.string;\n\n        return { trfqId: fallbackRequiredProp(string, id) };\n      }\n    }]);\n\n    return TrfqImpressionComponent;\n  }(_react2.default.Component);\n}\n\n/**\n * TrfqPageReq - Higher-order React component for Traffic 2 page request logging upon `componentWillMount`.\n *\n * @param {React.Component} Component The component to wrap (required)\n * @param {String} path Virtual path to log (e.g. `/virtual-page`)\n * @returns {React.Component} A React component wrapped with Traffic 2 page request logging, with the following attribute\n * available:\n * - `{String} trfqPath` Virtual path (overrides `path`)\n */\nfunction TrfqPageReq(Component, path) {\n  return function (_React$Component3) {\n    _inherits(TrfqPageReqComponent, _React$Component3);\n\n    function TrfqPageReqComponent() {\n      _classCallCheck(this, TrfqPageReqComponent);\n\n      return _possibleConstructorReturn(this, (TrfqPageReqComponent.__proto__ || Object.getPrototypeOf(TrfqPageReqComponent)).apply(this, arguments));\n    }\n\n    _createClass(TrfqPageReqComponent, [{\n      key: 'componentWillMount',\n\n\n      /**\n       * componentWillMount - Logs a Traffic 2 virtual page request when the component is about to mount.\n       */\n      value: function componentWillMount() {\n        var _props$trfqPath = this.props.trfqPath,\n            trfqPath = _props$trfqPath === undefined ? path : _props$trfqPath;\n\n        trfq.logPageReq(trfqPath);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        // Don't pass along trfq props\n        var props = _objectWithoutProperties(this.props, []);\n\n        delete props.trfqPath;\n        return _react2.default.createElement(Component, props);\n      }\n    }], [{\n      key: 'propTypes',\n      get: function get() {\n        var string = _propTypes2.default.string;\n\n        return { trfqPath: fallbackRequiredProp(string, path) };\n      }\n    }]);\n\n    return TrfqPageReqComponent;\n  }(_react2.default.Component);\n}\n\n//\n// Keep references to non-default exports on `trfq`\n// for non ES6 module run-time scenarios.\n//\ntrfq.gtm = gtm;\ntrfq.TrfqPageReq = TrfqPageReq;\ntrfq.TrfqImpression = TrfqImpression;\ntrfq.TrfqEvent = TrfqEvent;\n\nexports.default = trfq;\nexports.gtm = gtm;\nexports.TrfqPageReq = TrfqPageReq;\nexports.TrfqImpression = TrfqImpression;\nexports.TrfqEvent = TrfqEvent;","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('window-new', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('comment', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('delete', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('refresh', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('clock', 'false');","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Button from '@ux/button';\nimport OkIcon from '@ux/icon/ok';\nimport InfoIcon from '@ux/icon/information';\nimport AlertIcon from '@ux/icon/alert';\nimport Close from '@ux/icon/x';\nimport { classNames } from '@ux/component-utilities';\n\n/**\n * Mappings of icon name to appropriate icon component and classes.\n *\n * @type {object}\n * @private\n */\nconst ICONS = {\n  success: {\n    component: OkIcon,\n    classes: ['success']\n  },\n  warning: {\n    component: InfoIcon,\n    classes: ['warning']\n  },\n  error: {\n    component: AlertIcon,\n    classes: ['error']\n  }\n};\n\n/**\n * Component for a message.\n *\n * @displayName Growl Message\n * @class GrowlMessage\n * @public\n */\nexport class GrowlMessage extends Component {\n  renderIcon() {\n    const props = this.props;\n\n    if (props.icon in ICONS) {\n      const { component: Icon, classes } = ICONS[props.icon];\n      return (\n        <div className={ classNames('ux-growl-icon', ...classes) }>\n          <Icon\n            aria-hidden='true'\n            width={ 22 }\n            height={ 22 }\n          />\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const props = this.props;\n    const content = typeof props.content === 'function' ? props.content(props) : props.content;\n\n    return (\n      <div\n        id={ props.id }\n        className='ux-growl-msg'\n        onMouseEnter={ props.onMouseEnter }\n        onMouseLeave={ props.onMouseLeave }>\n        <div className='ux-growl-msg-content'>\n          <Button\n            aria-label={ props.ariaLabels.close }\n            className='ux-growl-msg-close'\n            design={ 'inline' }\n            data-action='close'\n            onClick={ props.onClose }\n            onKeyDown={ props.onCloseButtonKeyDown }\n            icon={ <Close /> } />\n          { this.renderIcon() }\n          <div className='ux-growl-msg-title' role='heading' aria-level='1'>{ props.title }</div>\n          <div className='ux-growl-msg-text'>{ content }</div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @public\n */\nGrowlMessage.propTypes = {\n  /** the unique id of the Message  */\n  id: PropTypes.string.isRequired,\n  /** The title of the message  */\n  title: PropTypes.node.isRequired,\n  /** The message content as either a valid node or function. */\n  content: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  /** The icon for the message valid options: none, success, warning, error */\n  icon: PropTypes.oneOf(['none', ...Object.keys(ICONS)]).isRequired,\n  /** callback function for when the user closes the message */\n  onClose: PropTypes.func.isRequired,\n  /** callback function for when mouse enteres the message dom node */\n  onMouseEnter: PropTypes.func,\n  /** callback function for when mouse leaves the message dom node */\n  onMouseLeave: PropTypes.func,\n  /** passthrough callback function from button when keydown event happens on button */\n  onCloseButtonKeyDown: PropTypes.func,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Label for mobile-view menu close button */\n    close: PropTypes.string\n  })\n};\n\n/**\n * PropType defaults.\n *\n * @type {Object}\n * @private\n */\nGrowlMessage.defaultProps = {\n  icon: 'none',\n  ariaLabels: {\n    close: 'Close'\n  }\n};\n\nexport default GrowlMessage;\n","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('ok', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('chevron-dbl-left', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('chevron-dbl-right', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('plus', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('star', 'false');","\"use strict\";\n\n/**\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n * /!\\                                                                     /!\\\n * /!\\   WARNING THIS FILE IS AUTOMATICALLY GENERATED. DO NOT ALTER IT'S   /!\\\n * /!\\      CONTENTS MANUALLY. UPDATE THE TEMPLATE FILE INSTEAD.           /!\\\n * /!\\                                                                     /!\\\n * /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\ /!\\\n */\nconst create = require('../base.js'); //\n// @ux/require: './index.css';\n//\n// Unfortunately, WebPack decided to remove the ability to use labels as require\n// indicator as that would be the only way we could make WebPack automatically\n// bundle files without them actually being required serverside.\n//\n\n\nmodule.exports = create('chevron-up', 'false');","\"use strict\";\n\nvar _svgosm = require(\"./svgosm.js\");\n\nmodule.exports = function CSIENHANCE(doc) {\n  //\n  // Prevent it from running in a normal Node.js environment. (For when a bundle\n  // is loaded for serverside rendering)\n  //\n  if (!doc || !doc.querySelectorAll) return;\n  /**\n   * Enhance the current node.\n   *\n   * @param {HTMLElement} node HTMLElement to enhance.\n   * @private\n   */\n\n  function enhance(node) {\n    const iconname = /uxicon-([\\w|-]+)/gim.exec(node.className);\n    if (!iconname) return;\n    const name = iconname[1];\n\n    const res = _svgosm.svgosm.get(name, function extract() {\n      const details = _svgosm.svgosm.extract(`uxp-icon-${name}`);\n\n      if (!details) return;\n      return Object.assign(details, {\n        title: node.title\n      });\n    });\n\n    if (!res) return;\n    const svg = doc.createElementNS(_svgosm.SVGOSM.xmlns, 'svg');\n    const use = doc.createElementNS(_svgosm.SVGOSM.xmlns, 'use');\n    const style = window.getComputedStyle(node, ':before');\n    const width = style.getPropertyValue('width');\n    const height = style.getPropertyValue('height');\n    [['role', 'img'], ['width', width || 24], ['height', height || 24], ['xmlns', _svgosm.SVGOSM.xmlns], ['class', 'uxicon-svg uxicon-svg-' + name]].forEach(data => svg.setAttribute(data[0], data[1]));\n    use.setAttribute('fill', 'currentColor');\n    use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', res.link);\n    node.classList.remove('uxicon-' + name, 'uxicon');\n    node.classList.add('uxicon-enhanced');\n    svg.appendChild(use);\n    node.appendChild(svg);\n  }\n  /**\n   * Track DOM changes so we can enhance newly inserted icons.\n   *\n   * @param {Event} evt DOM event.\n   * @private\n   */\n\n\n  function uxIconInserted(evt) {\n    if (evt.animationName !== 'uxIconInserted') return;\n    enhance(evt.target);\n  }\n\n  [...doc.querySelectorAll('.uxicon:not(.uxicon-enhanced)')].forEach(enhance);\n  doc.addEventListener('animationstart', uxIconInserted, false);\n  return enhance;\n}(typeof document !== 'undefined' && document);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport * as ReactIntl from 'react-intl';\nimport * as ReactTransitionGroup from 'react-transition-group';\n\nwindow.ux = window.ux || {};\nwindow.ux.React = window.React = React;\nwindow.ux.ReactDOM = window.ReactDOM = ReactDOM;\nwindow.ux.PropTypes = window.PropTypes = PropTypes;\nwindow.ux.ReactTransitionGroup = window.ReactTransitionGroup = ReactTransitionGroup;\n\n//\n// Expose React hook to Format.JS, requires React as global.\n//\nwindow.ux.intl = ReactIntl;\n","import React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Base Componenet for Accordion\n *\n * @public\n * @constructor\n */\nexport default class Base extends Component {\n  constructor(props, ...args) {\n    super(props, ...args);\n\n    this.state = {\n      open: +this.props.open || -1\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // If the `open` prop is changed, we need to make sure the internal `open`\n    // state responds to that accordingly.\n    if (prevProps.open !== this.props.open && this.props.open !== this.state.open) {\n      this.setState({ open: this.props.open });\n    }\n  }\n\n  /**\n   * Process the child elements so they can be orchestrated by the accordion\n   * interface.\n   *\n   * @returns {Array} A set of children components that need to be rendered.\n   * @param {Object} styles Optional Browser\n   * @private\n   */\n  panels(styles = {}) {\n    const open = this.state.open;\n    const { children } = this.props;\n\n    if (!children) {\n      return;\n    }\n\n    return Children.map(children, (child, index) => {\n      if (!child || !child.props || !('title' in child.props)) return child;\n\n      const onClick = child.props.onClick;\n\n      //\n      // Increase the index so it's no longer zero based. This makes\n      // for a much more friendly developer interface.\n      //\n      index++;\n\n      return React.cloneElement(child, {\n        key: index,\n        tabIndex: 0,\n        open: index === open,\n        styles,\n        onClick: (e) => {\n          e.preventDefault();\n\n          let toggle = true;\n          if (typeof onClick === 'function') {\n            toggle = onClick(e, index);\n          }\n\n          if (this.state.open === index) {\n            index = -1;\n          }\n\n          if (toggle !== false) {\n            this.setState({ open: index });\n          }\n        }\n      });\n    });\n  }\n}\n\n\n/**\n * Default properties\n * @type {Object}\n * @public\n */\n\nBase.defaultProps = {\n  open: -1\n};\n\n/**\n * Property validation.\n *\n * @type {Object}\n * @public\n */\nBase.propTypes = {\n  /** Which panel should be open by default. */\n  open: PropTypes.number,\n  /** The actual collapsible panels. */\n  children: PropTypes.node.isRequired,\n  /** The title for the accordion. */\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  /** Developer indicates start index */\n  startTabIndex: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Base from './accordion';\n\n/**\n * Accordion, or a wrapper that orchestrates multiple panels.\n *\n * @displayName Accordion (Web)\n * @class Accordion\n * @public\n */\nexport default class Accordion extends Base {\n  /**\n   * Renders the title element, if title is defined and not empty.\n   *\n   * @returns {React.DOM} renders accordion title\n   * @private\n   */\n  title() {\n    if (typeof this.props.title !== 'undefined' && this.props.title !== '') {\n      return (\n        <h1 className='text-center'>{ this.props.title }</h1>\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Render the accordion.\n   *\n   * @returns {React.DOM} Wrapping div for the accordion\n   * @private\n   */\n  render() {\n    return (\n      <div className={ this.props.className }>\n        { this.title() }\n\n        <div className='ux-accordion' aria-multiselectable='true' role='tablist' aria-live='polite'>\n          { this.panels() }\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Property validation.\n *\n * @type {object}\n * @public\n */\nAccordion.propTypes = {\n  /** Which panel should be open by default. */\n  open: PropTypes.number,\n  /** The actual collapsible panels. */\n  children: PropTypes.node.isRequired,\n  /** The title for the accordion. */\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  /** Optional className */\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array\n  ])\n};\n","import Checkmark from '@ux/icon/checkmark';\nimport Info from '@ux/icon/information';\nimport Comment from '@ux/icon/comment';\nimport Alert from '@ux/icon/alert';\nimport Help from '@ux/icon/help';\nimport Star from '@ux/icon/star-outline';\n\n/**\n * Type to icon mapping. Can be extended with more types if needed.\n *\n * @type {Object}\n * @public\n */\nexport const ICONS = {\n  highlight: Star,\n  success: Checkmark,\n  info: Info,\n  warning: Alert,\n  critical: Alert,\n  neutral: Help,\n  internal: Comment\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport Button from '@ux/button';\nimport XIcon from '@ux/icon/x';\nimport { ICONS } from './icons.js';\n\n\nconst UX_ALERT_CLASSNAME = 'ux-alert';\n\nconst TYPE_TO_EMPHASIS_MAP = {\n  danger: 'critical',\n  offer: 'highlight',\n  note: 'neutral',\n  c3: 'internal'\n};\n\n/**\n * Alert notifications component.\n *\n * Alerts may be dissmissible, or not have a close button.\n *\n * @displayName Alert\n * @class Alert\n * @public\n */\nexport default class Alert extends Component {\n  constructor() {\n    super(...arguments);\n    this._warn();\n    this.state = { open: true };\n  }\n\n  _warn() {\n    const {\n      message, // eslint-disable-line react/prop-types\n      header, // eslint-disable-line react/prop-types\n      type // eslint-disable-line react/prop-types\n    } = this.props;\n\n    if (process.env.NODE_ENV === 'production') return;\n\n    const mappedEmphasis = TYPE_TO_EMPHASIS_MAP[type];\n    if (typeof mappedEmphasis !== 'undefined') {\n      console.warn([\n        `Warning: Alert prop 'type' was deprecated and replaced by 'emphasis' in v2002 and will be removed in v2100. `,\n        `The legacy type='${type}' best maps to emphasis='${mappedEmphasis}'. See http://x.co/6nzLv`\n      ].join(''));\n    }\n    if (message || header) {\n      console.warn([\n        `Warning: The 'type', 'message', and 'header' props were deprecated in v2002 and will be removed in v2100. `,\n        `The alert component is now operating in legacy mode and should be updated. See http://x.co/6nzLv`\n      ].join(''));\n    }\n  }\n\n  close() {\n    this.setState({ open: false });\n    this.props.onClose && this.props.onClose();\n  }\n\n  legacyChildren() {\n    const {\n      children,\n      message, // eslint-disable-line react/prop-types\n      header, // eslint-disable-line react/prop-types\n      type // eslint-disable-line react/prop-types\n    } = this.props;\n\n    // If legacy props are not used, then this component is being used correctly\n    if (!message && !header && !type) return children;\n\n    return <>\n      {header && <><strong className='headline-primary' role='heading' aria-level='1'>{header}</strong>{' '}</>}\n      {message && <>{message}{' '}</>}\n      {children}\n    </>;\n  }\n\n  /**\n   * Render the alert component.\n   *\n   * @returns {ReactElement} Alert box.\n   * @public\n   */\n  render() {\n    const {\n      button,\n      className,\n      dismissible,\n      emphasis,\n      ariaLabels\n    } = this.props;\n\n    // @TODO Remove in v2100\n    const {\n      type // eslint-disable-line react/prop-types\n    } = this.props;\n    const mappedEmphasis = TYPE_TO_EMPHASIS_MAP[type] || emphasis;\n\n    const classes = [UX_ALERT_CLASSNAME, `${UX_ALERT_CLASSNAME}-${mappedEmphasis}`, className].filter(Boolean);\n\n    // Only allow data-* attributes to pass-through\n    const passThroughProps = Object.keys(this.props).reduce((curr, propName) => {\n      if (propName.startsWith('data-')) {\n        curr[propName] = this.props[propName];\n      }\n      return curr;\n    }, {});\n\n    let closeButton;\n    if (dismissible) {\n      closeButton = <Button\n        className={ `${UX_ALERT_CLASSNAME}-close-button` }\n        design={ 'inline' }\n        onClick={ this.close.bind(this) }\n        icon={ <XIcon/> }\n        aria-label={ ariaLabels.close }/>;\n    }\n\n    const Icon = ICONS[mappedEmphasis];\n    let buttonComponent;\n    if (button) {\n      const { className: clsx } = button.props || {};\n      const buttonClassName = classNames(`${UX_ALERT_CLASSNAME}-button`, clsx);\n      buttonComponent = React.cloneElement(button, { className: buttonClassName, as: 'cta', design: 'inline' });\n    }\n\n    return (this.state.open &&\n      <div className={ classes.join(' ') } role='alert' { ...passThroughProps }>\n        { <Icon className={ `${UX_ALERT_CLASSNAME}-icon` }/> }\n        <div className={ `${UX_ALERT_CLASSNAME}-content` }>\n          {/* @TODO Replace `this.legacyChildren()` with just `children` in v2100 */}\n          <div className={ `${UX_ALERT_CLASSNAME}-message` }>{ this.legacyChildren() }</div>\n          { buttonComponent }\n        </div>\n        { closeButton }\n      </div>\n    );\n  }\n}\n/**\n * The default properties.\n *\n * @type {Object}\n * @private\n */\nAlert.defaultProps = {\n  dismissible: true,\n  ariaLabels: {\n    close: 'Close'\n  },\n  emphasis: 'critical'\n};\n/**\n * Property types.\n *\n * @type {Object}\n * @private\n */\nAlert.propTypes = {\n  /** Adds a cta button */\n  button: PropTypes.shape({ type: Button.type, props: PropTypes.object }),\n  /** Additional alert detail content */\n  children: PropTypes.node,\n  /** Additional class name to target for positioning */\n  className: PropTypes.string,\n  /** Flag for whether the alert can be dismissed */\n  dismissible: PropTypes.bool,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for close button */\n    close: PropTypes.string\n  }),\n  /** Describes the purpose of the alert */\n  emphasis: PropTypes.oneOf(Object.keys(ICONS)),\n  /** Callback function when alert is closed */\n  onClose: PropTypes.func\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\n\nconst UX_BUTTON_SET_CLASSNAME = 'ux-button-set';\n\n/**\n * UXCore based ButtonSet.\n *\n * @displayName Button Set\n * @class ButtonSet\n * @public\n */\nexport default class ButtonSet extends Component {\n  constructor() {\n    super();\n  }\n\n  /**\n   * Render the ButtonSet Component.\n   *\n   * @returns {ReactElement} ButtonSet element.\n   * @private\n   */\n  render() {\n    const { className, split, children } = this.props;\n    const hostClassNames = classNames(UX_BUTTON_SET_CLASSNAME, className);\n    const marginClassNames = classNames(`${UX_BUTTON_SET_CLASSNAME}-margin`, { [`${UX_BUTTON_SET_CLASSNAME}-split`]: split });\n\n    return (\n      <div className={ hostClassNames }>\n        <div className={ marginClassNames } role='group'>\n          { children }\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Optional properties: split defines if the ButtonSet's\n * children should split to multiple lines or not.\n *\n * @enum {Object} expected types of properties.\n * @public\n */\nButtonSet.propTypes = {\n  /** Classes to set on the element */\n  className: PropTypes.string,\n  /** Defines whether child elements too wide to fit on screen should drop down to the next line*/\n  split: PropTypes.bool,\n  /** Child elements to be included in the Button Set*/\n  children: PropTypes.node\n};\n","import PropTypes from 'prop-types';\nimport Button from '@ux/button';\n\n/**\n * Default properties used for components.\n *\n * @type {Object}\n * @public\n */\nconst defaultProps = {\n  input: {\n    size: 'default',\n    value: '',\n    grid: {}\n  }\n};\n\n/**\n * Allowed properties for both the wrapping element and internal input element.\n *\n * @type {Object}\n * @public\n */\nconst props = {\n  /** DEPRECATED: Please use 'controls'. This indicates that a button has to be rendered on the right side of the label which\n   * you can use to hide/show things for a given element. This does require the action property\n   * to also be supplied. */\n  button: PropTypes.node,\n  /** DEPRECATED: Please use 'controls'. optional secondary form element button to be used in conjunction with button.\n   * If href is provided it will be set on navigation instead of button if both are provided.\n   * If any action is provided it will be used on button or ignored if no button is supplied. */\n  navigation: PropTypes.node,\n  /** Controls to be rendered to the right side of the label, this can be any grouping of elements. */\n  controls: PropTypes.node,\n  elements: PropTypes.object,\n  /** An error element that will be rendered */\n  error: PropTypes.element,\n  /** An object with classNames if you want to render the input elements in a specific grid.\n   * It should have a label and input property with the classNames as value. Note: Provide\n   * numbers that represent the relative flex property instead of a className. */\n  grid: PropTypes.object,\n  /** Hide the label for the element */\n  hideLabel: PropTypes.bool,\n  /** The ID of the element, if none is provided, an ID will be generated. It is recommended to provide an ID */\n  id: PropTypes.string,\n  /** Indication if the element should be rendered as inline element. */\n  inline: PropTypes.bool,\n  /** A raw input element to be rendered */\n  input: PropTypes.element,\n  /** The label for the element */\n  label: PropTypes.node.isRequired,\n  /** Prevent the user from changing the value of the input. */\n  readOnly: PropTypes.bool,\n  /** Optional small text that needs to be added at the bottom of the input element. Can be used for hints. */\n  notice: PropTypes.node,\n  /** A change handler triggered whenever the input value changes. */\n  onChange: PropTypes.func,\n  /** A change handler triggered whenever the component blurs (is deselected). */\n  onBlur: PropTypes.func,\n  /** Disables the form element */\n  disabled: PropTypes.bool,\n  /** Do not render the element in a fieldset but use an empty div instead. */\n  proxy: PropTypes.bool,\n  /** The type of input element that needs to be rendered. If nothing is provided, the default text type is used instead. */\n  type: PropTypes.string,\n  /** For checkbox only. True when checkbox's state is indeterminate. */\n  indeterminate: PropTypes.bool,\n  /** Marks the form element as required for the form */\n  required: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.bool\n  ]),\n  /** The value for input element. */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool\n  ])\n};\n\n/**\n * Defined seperatly as the UXCore2 bundle will remove propTypes for performance,\n * FormElement._input depends on this data, this reference will keep it around.\n *\n * @type {Object}\n * @public\n */\nconst propTypes = {\n  input: props,\n  element: {\n    ...props,\n    /** A string to specify what, if any, autocomplete data should be used.\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete */\n    autoComplete: PropTypes.string,\n    /** A string to use as an error message under the input element for invalid input. */\n    failure: PropTypes.string,\n    /** Indicates if the input is valid.  Overrides the validate function.\n     * Note: Use this when the output of validate is the result of higher\n     * order properties that are passed in. */\n    validates: PropTypes.bool,\n    /** A function that returns a boolean as indication for invalid or valid\n     * state of the input element. It receives the value as first argument.\n     * Note: use this when state is internal to the element, e.g. value or\n     * onChange should not be passed in as property. */\n    validate: PropTypes.func,\n    /** A function that is triggered after the value is updated, by the user or programatically.\n      *  Note: Do not use this when wrapping with a Critera.Connect component. */\n    onValidation: PropTypes.func,\n    /** Optional string, either large or small, that corresponds to a large/small height and font size\n     * of the input field. The default sizes will display if no string is given */\n    size: PropTypes.string,\n    /** Callback for validity changes. See \"Validation\". */\n    onValidChange: PropTypes.func,\n    /** The design to use for the input, see @ux/button for design options */\n    design: PropTypes.oneOf(Object.values(Button.designs)),\n    /** Adds a small clickable clear button on the element to allow users to easily erase the value from the input.*/\n    clearable: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.bool\n    ])\n  }\n};\n\n/**\n * Validates event object\n *\n * @param {SyntheticEvent} event Change event of TextInput or input element.\n * @returns {Boolean} Argument is eventlike.\n * @public\n */\nfunction isEvent(event) {\n  return typeof event === 'object' && 'target' in event;\n}\n\n/**\n * Return the value from an event.\n *\n * @param {SyntheticEvent} event Change event of TextInput or input element.\n * @returns {String} Input value.\n * @public\n */\nfunction getValue(event) {\n  if (!isEvent(event)) {\n    return event;\n  }\n\n  const target = event.target || {};\n\n  return target.value;\n}\n\n/**\n * Return the type of input element\n *\n * @param {SyntheticEvent} event Change event of TextInput or input element.\n * @returns {String|Undefined} Input type.\n * @public\n */\nfunction getType(event) {\n  if (!isEvent(event)) {\n    return;\n  }\n\n  return event.target.type || 'text';\n}\n\n/**\n * Get the property name that should be used to store in state.\n *\n * @param {String} type Input type.\n * @returns {String} Property name.\n * @public\n */\nfunction getStateProperty(type) {\n  //\n  // For types like checkbox, radio or unknown (i.e. RN Switch) return `checked` as the preferred property\n  //\n  if (!type || type === 'checkbox' || type === 'radio') {\n    return 'checked';\n  }\n\n  return 'value';\n}\n\nexport {\n  getStateProperty,\n  defaultProps,\n  propTypes,\n  getValue,\n  getType\n};\n","import React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Platform independant Fieldset base class.\n *\n * @Constructor\n * @public\n */\nexport default class Base extends Component {\n  /**\n   * Check if the child input elements contain a given property.\n   *\n   * @param {Array} children Child elements.\n   * @param {String} prop Name of the property that should be present.\n   * @returns {Boolean} Results\n   * @private\n   */\n  includes(children, prop) {\n    return React.Children.toArray(children).some(child => {\n      if (!child.type || !child.props) return false;\n\n      if (child.type === 'input' || child.type.toString() === 'TextInput') {\n        return prop in child.props;\n      }\n\n      return this.includes(child.props.children, prop);\n    });\n  }\n\n  /**\n   * Check if our given input is invalid.\n   *\n   * @param {Array} children Child elements.\n   * @returns {Boolean} Results\n   * @public\n   */\n  invalid(children) {\n    return this.includes(children || this.props.children, 'data-invalid');\n  }\n\n  /**\n   * Check if our given input is valid.\n   *\n   * @param {Array} children Child elements.\n   * @returns {Boolean} Results\n   * @public\n   */\n  valid(children) {\n    return this.includes(children || this.props.children, 'data-valid');\n  }\n\n  /**\n   * Default proxy value.\n   *\n   * TODO (crobbins): Should be combined with index.js since it only has\n   * one concrete implementation.\n   *\n   * @public\n   */\n  get proxy() {\n    throw new Error('Proxy implementation required');\n  }\n\n  /**\n   * Default view value.\n   *\n   * TODO (crobbins): Should be combined with index.js since it only has\n   * one concrete implementation.\n   *\n   * @public\n   */\n  get view() {\n    throw new Error('View implementation required');\n  }\n\n  /**\n   * Render the view of the class unless the `proxy` property is true.\n   *\n   * @returns {ReactElement} View from extended class.\n   * @private\n   */\n  render() {\n    const { proxy, children } = this.props;\n\n    if (proxy) {\n      return Children.count(children) === 1 ? children : this.proxy;\n    }\n\n    return this.view;\n  }\n}\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nBase.propTypes = {\n  /** Determines if the children are wrapped in a proxy component */\n  proxy: PropTypes.bool,\n  /** Child components in the fieldset */\n  children: PropTypes.node\n};\n","import PropTypes from 'prop-types';\nimport Base from './fieldset';\nimport React from 'react';\nimport { classNames as clsx } from '@ux/component-utilities';\n\nconst FieldSetWithRef = React.forwardRef(\n  ({ children, classNames, ...props }, ref) => (\n    <fieldset ref={ ref } className={ classNames } { ...props }>\n      {children}\n    </fieldset>\n  )\n);\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nFieldSetWithRef.propTypes = {\n  ...Base.propTypes,\n\n  /** Classes applied to a fieldset */\n  classNames: PropTypes.string\n};\n\n/**\n * Render a field set.\n *\n * @class Fieldset\n * @displayName Fieldset (Web)\n * @public\n */\nexport class Fieldset extends Base {\n  /**\n   * Render a plain div when proxy with multiple child elements.\n   *\n   * @returns {React.DOM} View element.\n   * @private\n   */\n  get proxy() {\n    return <div>{this.props.children}</div>;\n  }\n\n  /**\n   * Render the Fieldset, with or without error messages.\n   *\n   * @returns {React.DOM} Fieldset element.\n   * @private\n   */\n  get view() {\n    const { className, children, ...props } = this.props;\n\n    //\n    // This property should not be spread onto the fieldset\n    //\n    delete props.proxy;\n\n    //\n    // Preserve class ordering (form-group, props.className, rest)\n    //\n    const classNames = clsx(\n      'form-group',\n      className,\n      clsx({\n        'has-danger': this.invalid()\n      })\n    );\n\n    return (\n      <FieldSetWithRef classNames={ classNames } { ...props }>\n        {children}\n      </FieldSetWithRef>\n    );\n  }\n\n  render() {\n    return super.render();\n  }\n}\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nFieldset.propTypes = {\n  ...Base.propTypes,\n  /** Classes applied to a fieldset */\n  className: PropTypes.string\n};\n\nexport default Fieldset;\n","import React, { Component } from 'react';\nimport { shape, string } from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport Button from '@ux/button';\nimport Fieldset from '@ux/fieldset';\nimport Delete from '@ux/icon/delete';\nimport { propTypes, defaultProps } from './enums.js';\n\n\n/**\n * Renders an input element according to the design specifications.\n *\n * @displayName Textual Input (Web)\n *\n * @class Textual\n * @private\n */\nexport class Textual extends Component {\n  /**\n   * Render the actual component.\n   *\n   * @returns {React.DOM} The Component.\n   * @private\n   */\n  render() {\n    const props = this.props;\n    const length = props.value.length;\n    const className = classNames(\n      props.hideLabel && 'sr-only',\n      'form-control-label'\n    );\n\n    const hasClassName = classNames({\n      'has-danger': props.hadInput && props.validates === false\n    }\n    );\n\n    const clearButton = props.clearable && !!length && (\n      <Button\n        className='form-element-clear'\n        design={ 'inline' }\n        icon={ <Delete /> }\n        aria-label={ props.ariaLabels.clear }\n        onClick={ props.clearable }\n      />\n    );\n\n    const labelGridClass = classNames(\n      'form-element-header',\n      props.grid && props.grid.label\n    );\n    const inputGridClass = classNames(\n      'form-element-textual',\n      props.grid && props.grid.input\n    );\n\n    return (\n      <Fieldset proxy={ !!props.proxy } className={ hasClassName }>\n        <div className='form-element-flex'>\n          <header className={ labelGridClass }>\n            {(props.label || props.required) && (\n              <label\n                htmlFor={ props.id }\n                ref={ label => {\n                  props.elements.label = label;\n                } }\n                className={ className }\n                id={ `label-${props.id}` }>\n                {props.label} {props.required}\n              </label>\n            )}\n            {props.controls}\n          </header>\n          <div className={ inputGridClass }>\n            {props.input}\n            {clearButton}\n          </div>\n        </div>\n        {props.notice}\n        {props.error}\n      </Fieldset>\n    );\n  }\n}\n\n/**\n * PropType validation and defaultProperties. Extend default set of properties with web-only input\n * properties.\n *\n * @type {Object}\n * @private\n */\nTextual.defaultProps = {\n  ...defaultProps.input,\n  ariaLabels: {\n    clear: 'Clear field'\n  }\n};\n\nTextual.propTypes = {\n  ...propTypes.input,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: shape({\n    /** Screen reader label for clear field button */\n    clear: string\n  })\n};\n\nexport default Textual;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport Fieldset from '@ux/fieldset';\nimport Checkmark from '@ux/icon/checkmark';\nimport Minus from '@ux/icon/minus';\nimport Button from '@ux/button';\nimport { propTypes, defaultProps } from './enums';\n\n/**\n * Renders a radio/checkbox element according to the design specifications.\n *\n * @displayName Flip (Radio / Checkbox) (Web)\n *\n * @class Flip\n * @private\n */\nexport class Flip extends Component {\n  /**\n   * Render the actual component.\n   *\n   * @returns {React.DOM} The component.\n   * @private\n   */\n  render() {\n    let currentChecked = !!this.props.checked;\n    if (typeof this.props.elements.input !== 'undefined') {\n      currentChecked = this.props.elements.input.checked;\n    }\n\n    //\n    // This forces the input element to be rendered as a correct checkbox/radio\n    // element.\n    //\n    const isButton =\n      this.props.design === 'button' || Button.designs.includes(this.props.design);\n    const className = classNames(\n      {\n        'ux-custom-control-inline': this.props.inline\n      },\n      ['ux-custom-control', `ux-custom-${this.props.type}`]\n    );\n    const targetClassName = classNames(\n      {\n        'ux-button': isButton,\n        [`ux-button-${this.props.design}`]: Button.designs.includes(this.props.design)\n      },\n      ['ux-custom-target']\n    );\n\n    const indicatorClassName = 'ux-control-indicator';\n    let indicator;\n    if (this.props.type === 'checkbox') {\n      indicator = this.props.indeterminate ? (\n        <Minus className={ indicatorClassName } />\n      ) : (\n        <Checkmark className={ indicatorClassName } />\n      );\n    } else if (this.props.type === 'radio') {\n      indicator = <span className={ indicatorClassName }></span>;\n    }\n    const label = (\n      <label\n        className={ classNames({\n          'sr-only': this.props.hideLabel && !isButton\n        }) }\n        htmlFor={ this.props.id }\n        ref={ r => {\n          this.props.elements.label = r;\n        } }\n        id={ 'label-' + this.props.id }>\n        {this.props.label}\n      </label>\n    );\n\n    const target = (\n      <div\n        className={ targetClassName }\n        disabled={ this.props.disabled }\n        role='switch'\n        aria-checked={ currentChecked }>\n        {this.props.input}\n        {!isButton && indicator}\n        {label}\n      </div>\n    );\n\n    const control = (\n      <div className={ className }>\n        {target}\n        {this.props.notice}\n        {this.props.error}\n      </div>\n    );\n\n    return <Fieldset proxy={ !!this.props.proxy }>{control}</Fieldset>;\n  }\n}\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nFlip.propTypes = {\n  ...propTypes.input,\n  /** The design to use for the input, see @ux/button for design options */\n  design: PropTypes.oneOf(Object.values(Button.designs)),\n  /** True if the element (radio or checkbox) is checked */\n  checked: PropTypes.bool,\n  /** For checkbox only. True when checkbox's state is indeterminate. */\n  indeterminate: PropTypes.bool\n};\n\n/**\n *\n * @enum {Object} defaultProps\n * @public\n */\nFlip.defaultProps = {\n  ...defaultProps.input\n};\n\nexport default Flip;\n","import React, { Component } from 'react';\nimport { propTypes, getValue, getType, getStateProperty } from './enums';\nimport { id as _id } from '@ux/component-utilities';\nimport { Validates } from 'react-validation-context';\nimport PropTypes from 'prop-types';\nimport Textual from './textual';\nimport Flip from './flip';\n\nconst undef = void 0;\n\n/**\n * Helper function to discover data to use.\n *\n * @param {String} name Name of the key to search.\n * @param {Array} dataset Data set to search\n * @param {Mixed} fallback Optional fallback data.\n * @returns {Any} The found result.\n * @private\n */\nfunction find(name, dataset, fallback) {\n  const data = dataset.filter(obj => typeof obj[name] !== 'undefined')[0];\n\n  if (typeof data !== 'object') {\n    return fallback;\n  }\n\n  return data[name];\n}\n\n/**\n * Base class that contains the validation logic for inputs\n *\n * @displayName FormElement\n *\n * @class Base\n * @public\n */\nexport default class Base extends Component {\n  constructor(props) {\n    super(...arguments);\n    const required = this.select('required');\n\n    this.state = {\n      hadInput: !required || 'validates' in props || false\n    };\n\n    const type = this.select('type');\n    this.isFlip = type === 'checkbox' || type === 'radio';\n\n    this.ignoreProps = [];\n    this.elements = {};\n\n    this.clear = this.clear.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  /**\n   * React lifecycle hook invoked when component is mounted. Unless the overriding `validates`\n   * property is present, initially load the Input as valid and only call `validating` on change.\n   *\n   * @private\n   */\n  componentDidMount() {\n    const { props } = this;\n\n    const required = this.select('required');\n\n    if ('validates' in props || required) {\n      this.validating(\n        this.select('value'),\n        this.select('validate'),\n        (error, isValid) => {\n          this.setState({\n            isValid,\n            error\n          });\n        }\n      );\n    }\n  }\n\n  /**\n   * Handle state changes.\n   *\n   * @param {Object} prevProps previous this.props.\n   * @param {Object} prevState previous this.state.\n   */\n  componentDidUpdate(prevProps, prevState) { // eslint-disable-line max-statements, complexity\n    const nextProps = this.props;\n    const lookups = [prevState, prevProps, this];\n\n    if (\n      'validates' in nextProps &&\n      prevProps.validates !== nextProps.validates\n    ) {\n      const failure = nextProps.failure || find('failure', lookups);\n\n      this.setState({\n        error: failure && !nextProps.validates ? failure : null,\n        isValid: nextProps.validates\n      });\n    }\n\n    const nextValidate = nextProps.validate;\n    const validate = find('validate', lookups);\n    const value = nextProps.value || find('value', lookups);\n\n    if (\n      'value' in nextProps &&\n      nextProps.value !== prevProps.value &&\n      'onValidation' in nextProps\n    ) {\n      nextProps.onValidation(nextProps.value);\n    }\n\n    const failureMessage =\n      nextProps.failure ||\n      (typeof nextProps.required !== 'boolean' ? nextProps.required : undef);\n\n    //\n    // Only revalidate the value if both functions exist, are different and their return value is not equal.\n    // This will ensure `validate` does not run if identical arrow or bound functions are passed\n    // as properties, that are only distinct by memory reference.\n    //\n    if (nextValidate !== validate) {\n      if (nextValidate && validate && nextValidate(value) === validate(value)) {\n        return;\n      }\n\n      this.validating(value, nextProps.validate, (error, isValid) => {\n        this.setState({\n          isValid,\n          error:\n            isValid === false && prevState.error !== failureMessage\n              ? failureMessage\n              : error\n        });\n      });\n    } else if (\n      prevState.isValid === false &&\n      prevState.error !== failureMessage\n    ) {\n      this.setState({\n        error: failureMessage\n      });\n    }\n  }\n\n  /**\n   * Clean up and merge the properties that can be passed to the internal input element.\n   *\n   * @param {Object} data Attributes.\n   * @returns {Object} properties that can be spread,\n   * @private\n   */\n  filter(data) {\n    const props = this.props;\n    const spread = Object.keys(props)\n      .filter(\n        v =>\n          !(\n            v in data ||\n            v in propTypes.element ||\n            this.ignoreProps.includes(v)\n          )\n      )\n      .reduce((memo, key) => {\n        memo[key] = props[key];\n        return memo;\n      }, {});\n\n    if (\n      this.isFlip &&\n      typeof spread.checked !== 'undefined' &&\n      typeof spread.defaultChecked !== 'undefined'\n    ) {\n      delete spread.defaultChecked;\n    }\n\n    return spread;\n  }\n\n  /**\n   * Minor mock change handler that should be provided by the developer.\n   *\n   * @param {Event} event Change event.\n   * @param {boolean=} isClear Is the input being cleared by the clear button, defaults to false\n   * @private\n   */\n  onChange(event, isClear = false) {\n    const property = !isClear ? getStateProperty(getType(event)) : 'value';\n    const value = !isClear ? getValue(event) : this.state.value;\n    const props = this.props;\n\n    this.setState({\n      hadInput: true\n    });\n\n    //\n    // Check if the input validates and set state appropriately.\n    //\n    this.validating(value, this.select('validate'), (error, isValid) => {\n      this.setState({\n        isValid,\n        error\n      });\n\n      //\n      // Always call the provided onChange listener as developers might be\n      // interested in doing additional validation against event.target.value.\n      // Only call the default onChange mock if no value was explicitly passed\n      // as property, this prevents duplicating value states.\n      //\n      if ('onChange' in props) props.onChange(event, value);\n      if ('onValidation' in props) props.onValidation(value);\n      if (!(property in props))\n        this.setState({\n          [property]: value\n        });\n    });\n  }\n\n  /**\n   * Generate all the attributes to be rendered on an input.\n   *\n   * @returns {Object} Required data to render an input.\n   * @private\n   */\n  attributes() {\n    const { isValid, hadInput } = this.state;\n    const defaultValue = this.select('defaultValue');\n    let { id } = this.props;\n\n    // If no `id` prop was specified, fall back to label\n    if (!id) {\n      const label = this.select('label');\n\n      id = React.isValidElement(label) // If the label is a React element with an `id` prop... // use its `id` prop; otherwise...\n        ? label.props.id\n        : _id('label', { props: this.props }); // generate an `id` from it\n    }\n\n    const result = {\n      id,\n      type: this.select('type', 'text'),\n      name: this.select('name'),\n\n      //\n      // For value, we want to prefer props over the state, as a provided value\n      // prop will indicate that the user is controlling the input, instead of\n      // being the default uncontrolled input\n      //\n      value: find('value', [this.props, this.state, this], defaultValue || ''),\n\n      placeholder: this.select('placeholder'),\n      readOnly: this.select('readOnly'),\n      disabled: this.select('disabled'),\n      autoComplete: this.select('autoComplete'),\n      onChange: this.onChange,\n      onBlur: this.select('onBlur')\n    };\n\n    if (hadInput && isValid === false) {\n      result['data-invalid'] = true;\n    }\n    if (!hadInput || isValid === true) {\n      result['data-valid'] = true;\n    }\n\n    return result;\n  }\n\n  /**\n   * Clear the input value.\n   *\n   * @param {Event} event Input event.\n   * @public\n   */\n  clear(event) {\n    const input = this.elements.input;\n\n    if (event) {\n      event.preventDefault();\n      event.persist();\n    }\n\n    if (input) {\n      this.setState(\n        {\n          value: ''\n        },\n        function () {\n          this.onChange(event, true);\n        }\n      );\n      input.focus();\n    }\n  }\n\n  /**\n   * Get data from either the state, props or set property. Allow empty strings to\n   * be returned, especially important around `value` property.\n   *\n   * @param {String} name Property name.\n   * @param {Mixed} fallback Fallback value when property does not exist.\n   * @returns {Mixed} The value.\n   * @private\n   */\n  select(name, fallback) {\n    return find(name, [this.state || {}, this.props, this], fallback);\n  }\n\n  /**\n   * Checks if the input validates.\n   *\n   * @param {Mixed} value String or number representating the value to validate.\n   * @param {Function} validator Validator function to use. By default, selects the 'validate' property.\n   * @param {Function} done Completion callback.\n   * @returns {Mixed} The result of the callback.\n   * @private\n   */\n  validating(value, validator, done) { // eslint-disable-line max-statements, complexity\n    validator = validator || this.select('validate');\n\n    const required = this.select('required');\n    const failure = this.select('failure');\n    const input = this.elements.input;\n\n    //\n    // `validates` prop overrides everything else.\n    //\n    if ('validates' in this.props) {\n      if (failure && !this.props.validates) {\n        return done(failure, false);\n      }\n\n      return done(undef, this.props.validates);\n    }\n\n    if (!(required || typeof validator === 'function')) {\n      return done(undef, null);\n    }\n\n    if (input) {\n      value = input.value || value;\n    } else if (typeof value === 'undefined') {\n      value = this.select('value') || this.select('defaultValue');\n    }\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    //\n    // No value provided, but input is required. Only render as invalid if required.\n    // Assume `required` is the error message if it is a string.\n    //\n    if (!value) {\n      return done(required, required ? false : null);\n    }\n\n    // If a message for failure is provided and the input is invalid\n    const isValid = validator && validator.call(this, value);\n    if (failure && isValid === false) {\n      return done(failure, false);\n    }\n\n    return done(undef, validator ? isValid : null);\n  }\n\n  /**\n   * Render the actual component.\n   *\n   * @returns {React.DOM} Rendered form element.\n   * @private\n   */\n  render() {\n    const { onValidChange, clearable, size } = this.props;\n    const data = this.attributes();\n    const { isValid: validates, hadInput } = this.state;\n\n    const props = {\n      ...data,\n      hadInput,\n      validates,\n      size,\n      elements: this.elements,\n      error: this._error(),\n      notice: this._notice(),\n      controls: this._controls(),\n      input: this._input(data),\n      required: this._required(),\n      hideLabel: this.select('hideLabel'),\n      label: this.select('label'),\n      grid: this.select('grid'),\n      inline: !!this.select('inline'),\n      proxy: !!this.select('proxy'),\n      ariaLabels: this.props.ariaLabels\n    };\n\n    if (this.isFlip) {\n      props.design = this.select('design');\n      props.style = this.select('toggleStyle', this.props.style);\n      props.action = this.select('action');\n      props.checked = !!this.select('checked', !!this.select('defaultChecked'));\n      props.indeterminate = !!this.select('indeterminate');\n    }\n\n    if (clearable) {\n      props.clearable =\n        typeof clearable === 'function' ? clearable : this.clear;\n    }\n\n    const Input = this.isFlip ? Flip : Textual;\n\n    return (\n      <Validates\n        name={ data.id || data.name }\n        validates={ validates }\n        onValidChange={ onValidChange }>\n        <Input { ...props } />\n      </Validates>\n    );\n  }\n}\n\n/**\n * Allowed Validation properties.\n *\n * @enum {Object} propTypes\n * @public\n */\nBase.propTypes = {\n  ...propTypes.element,\n  /** A function that is triggered every time that your button is clicked. */\n  action: PropTypes.func,\n  /** The default value for input element. */\n  defaultValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool\n  ]),\n  /** True if the input should receive merch styles  */\n  merch: PropTypes.bool,\n  /** The name of the input element, so you know under what name your value will be submitted. */\n  name: PropTypes.string,\n  /** A function that is triggered when the value is updated by the user. */\n  onChange: PropTypes.func,\n  /** A function that is triggered after the value is updated, by the user or programatically.\n   *  Note: Do not use this when wrapping with a Critera.Connect component. */\n  onValidation: PropTypes.func,\n  /** For checkbox only. True when checkbox's state is indeterminate. */\n  indeterminate: PropTypes.bool,\n  /**\n   * A boolean or string to indicate if the input field is required. If\n   * a string is provided, it will be used as the error message.\n   */\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  /** Indicates if the input is valid.  Overrides the validate function.\n   * Note: Use this when the output of validate is the result of higher\n   * order properties that are passed in. */\n  validates: PropTypes.bool,\n  /** A function that returns a boolean as indication for invalid or valid\n   * state of the input element. It receives the value as first argument.\n   * Note: use this when state is internal to the element, e.g. value or\n   * onChange should not be passed in as property. */\n  validate: PropTypes.func,\n  /** optional styles passed through to flip's button */\n  toggleStyle: PropTypes.object,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for clear field button */\n    clear: PropTypes.string\n  })\n};\n","import { propTypes } from './enums';\nimport { classNames } from '@ux/component-utilities';\nimport Button from '@ux/button';\nimport Fieldset from '@ux/fieldset';\nimport PropTypes from 'prop-types';\nimport Textual from './textual';\nimport Base from './element';\nimport Flip from './flip';\nimport React from 'react';\n\n/**\n * Render a form element.\n *\n * @constructor\n * @public\n */\nclass FormElement extends Base {\n  /**\n   * Optionally render controls to appear to the right of the label. This can include the button, href, navigation or combination\n   *\n   * @returns {React.DOM|Undefined} A React DOM structure if we're supplied controls\n   * @private\n   */\n  _controls() {\n    const controls = this.select('controls');\n    let navigation = this.select('navigation');\n    let button = this.select('button');\n    let href = this.select('href');\n\n    if (typeof button === 'string') {\n      if (!href) href = '#';\n      button = (\n        <Button href={ href } text={ button } size='small' design='inline' />\n      );\n    }\n\n    if (typeof navigation === 'string') {\n      if (!href) href = '#';\n      navigation = (\n        <Button href={ href } text={ navigation } size='small' design='inline' />\n      );\n    }\n\n    return (\n      <div className='form-element-controls' key='button'>\n        {controls || (\n          <>\n            {navigation}\n            {button}\n          </>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Optionally render a * (required) indicator\n   *\n   * @returns {React.DOM|Undefined} A React DOM structure if we're supplied with a notice\n   * @private\n   */\n  _required() {\n    if (!this.select('required')) return;\n\n    return (\n      <span className='req' aria-hidden='true'>\n        *\n      </span>\n    );\n  }\n\n  /**\n   * Generate an input element based on the generated data.\n   *\n   * @param {Object} data Input creation information.\n   * @returns {React.DOM} The generated input element.\n   * @private\n   */\n  _input(data) {\n    data = data || this.attributes();\n    this.ignoreProps.push('href');\n    this.ignoreProps.push('action');\n    this.ignoreProps.push('defaultValue');\n\n    const spread = this.filter(data);\n    const InputType = data.type !== 'textarea' ? 'input' : 'textarea';\n    const input = (\n      <InputType\n        { ...spread }\n        { ...data }\n        ref={ i => {\n          this.elements.input = i;\n        } }\n      />\n    );\n\n    return input;\n  }\n\n  /**\n   * Optionally include a notice in the form element if provided through the\n   * options.\n   *\n   * @returns {React.DOM|Undefined} A React DOM structure if we're supplied with a notice\n   * @private\n   */\n  _notice() {\n    if (!this.select('notice')) return;\n\n    return (\n      <small\n        className='form-text'\n        ref={ notice => {\n          this.elements.notice = notice;\n        } }>\n        {this.select('notice')}\n      </small>\n    );\n  }\n\n  /**\n   * Render an error message below an input.\n   *\n   * @returns {React.DOM|Undefined} A React DOM structure if we have an error msg.\n   * @private\n   */\n  _error() {\n    const { error, hadInput } = this.state;\n    const { id } = this.attributes();\n\n    if (!error || !hadInput) return;\n\n    return (\n      <small className='form-text form-error' role='alert' aria-describedby={ id } >\n        {error}\n      </small>\n    );\n  }\n\n  /**\n   * Generate all the attributes to be rendered on an input.\n   *\n   * @returns {Object} Required data to render an input.\n   * @private\n   */\n  attributes() {\n    const superAttrs = super.attributes();\n    const { id } = superAttrs;\n    const { isValid, hadInput } = this.state;\n    return {\n      ...superAttrs,\n      'aria-labelledby': id && `label-${id}`,\n      'aria-disabled': this.select('disabled'),\n      'aria-required': !!this.select('required'),\n\n      'className': classNames(\n        this.select('className'),\n        {\n          'form-control': !this.isFlip,\n          'custom-control-input': this.isFlip,\n          'form-control-danger': hadInput && isValid === false,\n          'form-control-lg': this.props.size === 'large',\n          'form-control-sm': this.props.size === 'small',\n          'form-control-merch': this.props.merch\n        }\n      )\n    };\n  }\n}\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @public\n */\nFormElement.propTypes = {\n  ...propTypes.element,\n  ...Base.propTypes,\n\n  /**\n   * This only works if you've also set the button or navigation property.\n   * Represents the href of the button (or navigation if provided). If the\n   * associated property (i.e. button or navigation) is a string and href is not\n   * provided it will default to #.\n   */\n  href: PropTypes.string\n};\n\n//\n// Expose the main FormElement class. Also expose classes that could and are\n// used externally.\n//\nexport { Base as Validation, FormElement, Fieldset, Textual, Flip };\n\nexport default FormElement;\n","import { FormElement } from '@ux/form-element';\n\n/**\n * Interface for creating checkbox elements. Note: this code is also used by React Native to set the type\n * of the Form Element component.\n *\n * @displayName Checkbox\n * @class Checkbox\n * @public\n */\nexport class Checkbox extends FormElement {\n  constructor(...args) {\n    super(...args);\n\n    this.type = 'checkbox';\n    this.isFlip = true;\n  }\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormElement from '@ux/form-element';\nimport Button from '@ux/button';\n\n/**\n * Render multiple FormElements in a single fieldset.\n *\n * @displayName Form-Group\n *\n * @class Group\n * @public\n */\nexport default class Group extends React.Component {\n  /**\n   * Map and return data.inputs as FormElement components.\n   *\n   * @param {Object} properties Additional properties to spread on the element.\n   * @returns {Array} Collection of FormElements.\n   * @private\n   */\n  inputs(properties) {\n    const { inputs, design } = this.props;\n\n    return inputs.map((data, index) => {\n      return <FormElement\n        { ...data }\n        { ...properties }\n        design={ design }\n        key={ index }\n        type={ this.type }\n        proxy\n      />;\n    });\n  }\n\n  // eslint doesn't like documenting return types for \"abstract\" functions\n  /* eslint-disable valid-jsdoc */\n  /**\n   * Default view that can be rendered in react. Should be overruled for platform\n   * specific rendering.\n   *\n   * @returns {React.DOM} A fieldset of form elements.\n   * @public\n   */\n  get view() {\n    throw new Error('View implementation required');\n  }\n\n  /**\n   * Default type that can be rendered in react.\n   * Should be overruled for platform specific rendering.\n   *\n   * @returns {String} The FormElement type to use\n   * @public\n   */\n  get type() {\n    throw new Error('Type implementation required');\n  }\n  /* eslint-enable valid-jsdoc */\n\n  /**\n   * Render the input elements\n   *\n   * @returns {React.DOM} A fieldset of form elements.\n   * @private\n   */\n  render() {\n    return this.view;\n  }\n}\n\n/**\n * PropType validation for the component.\n *\n * @type {Object}\n * @private\n */\nGroup.propTypes = {\n  /** Array of form-element props, one for each input rendered */\n  inputs: PropTypes.array,\n  /** Child components */\n  children: PropTypes.node,\n  /** Do not render the elements in fieldsets but use an empty div instead */\n  proxy: PropTypes.bool,\n  /** The design to use for the inputs, see @ux/button for design options */\n  design: PropTypes.oneOf(Button.designs)\n};\n","import Fieldset from '@ux/fieldset';\nimport Group from '@ux/form-group';\nimport React from 'react';\n\n/**\n * Render a field set with multiple grouped checkbox elements.\n *\n * @displayName CheckboxGroup (Web)\n * @class CheckboxGroup\n * @public\n */\nexport default class CheckboxGroup extends Group {\n  /**\n   * Return type of input element.\n   *\n   * @returns {string} input type.\n   * @private\n   */\n  get type() {\n    return 'checkbox';\n  }\n\n  /**\n   * Render the group.\n   *\n   * @returns {ReactElement} Fieldset element.\n   * @private\n   */\n  render() {\n    const props = this.props;\n\n    //\n    // If a non-default design is desired for the component inputs\n    // we need to add some attributes to the div we wrap them in.\n    //\n    const optional = props.design === 'base' ? {} : {\n      'className': 'btn-group',\n      'data-toggle': 'buttons'\n    };\n\n    return (\n      <Fieldset proxy={ !!props.proxy }>\n        <div role='group' { ...optional }>\n          { props.children }\n          { this.inputs() }\n        </div>\n      </Fieldset>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n/**\n * Indicator icon\n *\n * @displayName Indicator (Web)\n * @class Indicator\n * @public\n */\nexport default function Indicator({ icon, background }) {\n  if (!(!!icon && !!background)) return null;\n\n  const wrapperClass = [background, 'panel-indicator'].filter(Boolean).join(' ');\n  const Icon = icon;\n\n  return (\n    <div className={ wrapperClass }>\n      <Icon />\n    </div>\n  );\n}\n\nIndicator.propTypes = {\n  /** Name of the icon to display. */\n  icon: PropTypes.elementType,\n  /** Background class to use. */\n  background: PropTypes.string\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport Chev from '@ux/icon/chevron-down';\nimport Indicator from './indicator';\nimport { classNames } from '@ux/component-utilities';\n\n/**\n * A single collapsible panel.\n *\n * @displayName Collapsible (Web)\n * @class Panel\n * @public\n */\nexport default class Panel extends Component {\n  constructor(props, ...args) {\n    super(props, ...args);\n\n    this.state = {\n      open: !!this.props.open\n    };\n    this.elements = {};\n\n    this.onClick = this.onClick.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  /**\n   * When rendering the component as child of a different component, it can be\n   * that this parent component wants to set a new open/close state on the\n   * component. We need to correctly process these props and set the correct\n   * open state again.\n   *\n   * @param {Object} prevProps THe previous props.\n   * @private\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props.open !== prevProps.open) {\n      this.setState({ open: this.props.open });\n    }\n  }\n\n  /**\n   * Generate a generic id from the title.\n   *\n   * @returns {string} A generated id attribute.\n   * @private\n   */\n  id() {\n    if (this.props.id) return this.props.id;\n\n    return this.props.title.toLowerCase().replace(/[\\s]/g, '-');\n  }\n\n  /**\n   * Handle clicks on the title/button of the collapsible panel, this can be\n   * used to augment the default behavior if you want to have manual control\n   * over the open and closing of the panel.\n   *\n   * @param {Event} e Browser event.\n   * @private\n   */\n  onClick(e) {\n    e.preventDefault();\n\n    const open = !this.state.open;\n\n    if (typeof this.props.onClick === 'function') {\n      if (this.props.onClick(e, open) !== false) {\n        this.setState({ open });\n      }\n\n      return;\n    }\n\n    this.setState({ open });\n  }\n\n  /**\n   * Handle keyboard events for enter and space on the title/button of the\n   * collapsible panel, this can be used to augment the default behavior if you\n   * want to have manual control over the open and closing of the panel.\n   *\n   * @param {Event} e Browser event.\n   * @private\n   */\n  onKeyDown(e) {\n    const code = e.key;\n\n    if (e.type === 'keydown' && (code === 'Enter' || code === ' ')) {\n      this.onClick(e);\n    }\n  }\n\n  /**\n   * We're about to start the open animation. Set the height to 0 so we can\n   * trigger transition in the next phase.\n   *\n   * @param {HTMLElement} node DOM Node.\n   * @private\n   */\n  onEnter(node) {\n    node.style.height = 0;\n  }\n\n  /**\n   * Transition className has added, manipulate the height to trigger it.\n   *\n   * @param {HTMLElement} node DOM Node.\n   * @private\n   */\n  onEntering(node) {\n    node.style.height = node.scrollHeight + 'px';\n  }\n\n  /**\n   * Animation has ended, transition class was removed. Remove the height.\n   *\n   * @param {HTMLElement} node DOM Node.\n   * @private\n   */\n  onEntered(node) {\n    node.style.height = '';\n  }\n\n  /**\n   * We're about to exit, start prepping element for transition.\n   *\n   * @param {HTMLElement} node DOM Node.\n   * @private\n   */\n  onExit(node) {\n    node.style.height = node.offsetHeight + 'px';\n    this.reflow(node);\n  }\n\n  /**\n   * Transition className was added, manipulate height to trigger it.\n   *\n   * @param {HTMLElement} node DOM Node.\n   * @private\n   */\n  onExiting(node) {\n    node.style.height = 0;\n  }\n\n  /**\n   * Force the browser to reflow, so it causes a re-render of a given section.\n   *\n   * @param {HTMLElement} node A DOM element.\n   * @private\n   */\n  reflow(node) {\n    new Function('oh', 'return oh')(node.offsetHeight); // eslint-disable-line no-new-func\n  }\n\n  /**\n   * Render the collapsible panel.\n   *\n   * @returns {React.DOM} Panel div.\n   * @private\n   */\n  render() {\n    const id = this.id();\n    const wrapper = classNames(this.props.className, 'panel panel-default');\n    const indicator = this.props.indicator && !!this.props.indicator.icon && !!this.props.indicator.background;\n    const button = classNames('panel-button', {\n      'collapsed': !this.state.open,\n      'panel-indicator-shown': indicator\n    });\n\n    return (\n      <div className={ wrapper }>\n        <button role='tab'\n          className={ button }\n          id={ id }\n          aria-controls={ id + '-collapse' }\n          ref={ r => { this.elements.header = r; } }\n          onClick={ this.onClick }\n          onKeyDown={ this.onKeyDown }\n          aria-expanded={ this.state.open }>\n          <Indicator { ...this.props.indicator } />\n          <div className='panel-title h3'>\n            { this.props.title }\n          </div>\n          <span className='panel-icon'>\n            <Chev width={ 24 } height={ 24 } />\n          </span>\n        </button>\n\n        <CSSTransition\n          classNames={{\n            exitDone: 'collapse',\n            exitActive: 'collapsing',\n            appear: 'collapse in',\n            appearActive: 'collapsing'\n          }}\n          timeout={ 350 }\n          mountOnEnter={ true }\n          in={ this.state.open }\n          onExit={ this.onExit.bind(this) }\n          onEnter={ this.onEnter.bind(this) }\n          onEntering={ this.onEntering.bind(this) }\n          onEntered={ this.onEntered.bind(this) }\n          onExiting={ this.onExiting.bind(this) }>\n          <div id={ id + '-collapse' }\n            ref={ r => { this.elements.body = r; } }\n            className='panel-collapse'\n            aria-labelledby={ id }\n            role='tabpanel'\n            aria-hidden={ !this.state.open }>\n            <div className='panel-content'>\n              { this.props.children }\n            </div>\n          </div>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\n/**\n * Property validation.\n *\n * @type {Object}\n * @public\n */\nPanel.propTypes = {\n  /** Render the panel opened or closed. */\n  open: PropTypes.bool,\n  /** Handler to run when the collapsible heading is clicked. */\n  onClick: PropTypes.func,\n  /** The element to show inside of the collapsible. */\n  children: PropTypes.node,\n  /** The title for the collapsible. */\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]).isRequired,\n  /** Handler for keyDown events on the collapsible. */\n  onKeyDown: PropTypes.func,\n  /** Optional unique identifier for the collapsible, used for ARIA references. */\n  id: PropTypes.string,\n  /** Props to pass down to the {@link Indicator} component. No indicator is shown when this prop is omitted. */\n  indicator: PropTypes.shape({\n    /** Name of the icon to display. */\n    icon: PropTypes.elementType,\n    /** Background class to use. */\n    background: PropTypes.string\n  }),\n  /** Optional class name. */\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.array\n  ])\n};\n","import Breakdancer from 'breakdancer';\n\n/**\n * Our breakpoint specifications. The key represents the name of the breakpoint\n * and the object specifies the specification in order to trigger the break\n * point. These breakpoints follow the design specification from our\n * invisionapp.\n *\n * Please note that the values in the breakdancer represent the minimum values\n * so need to + 1 the design specification in order to get an exact match.\n *\n * @type {Breakdance}\n * @public\n */\nconst breakpoints = new Breakdancer([\n  {\n    name: 'mobile',\n    width: 519 + 1\n  },\n\n  {\n    name: 'phablet',\n    width: 767 + 1\n  },\n\n  {\n    name: 'tablet',\n    width: 991 + 1\n  },\n\n  {\n    name: 'desktop',\n    width: 1199 + 1\n  },\n\n  {\n    name: 'large',\n    width: 1719 + 1\n  },\n  //\n  // Last capture all the things query.\n  //\n  {\n    name: 'xlarge',\n    width: Infinity\n  }\n]);\n\nexport default breakpoints;\n","import PropTypes from 'prop-types';\nimport breakpoints from './breakpoints';\nimport obassign from 'object-assign';\nimport React, { Component, createContext } from 'react';\nimport EventDist from 'eventdist';\nimport debug from 'diagnostics';\nimport name from 'fn.name';\nimport addhoc from 'addhoc';\n\n/**\n * We want to be able to execute this code in a non DOM environment as well so\n * we optionally scout the document.body and fallback to polyfill. As EventDist\n * doesn't care about the event interface provided we can just provide it with\n * an EventEmitter instance.\n *\n * NOTE: This should only check if we are in a browser like environment as it\n * should trigger for JSDOM and real browsers.\n *\n * @private\n */\nconst hasDOM = typeof document !== 'undefined';\nexport const target = hasDOM ? window : {};\n\n/**\n * Our EventDist on the window element so we can listen to window manipulation\n *\n * @type {EventDist}\n * @public\n */\nexport const eventdist = new EventDist(hasDOM && target);\n\n/**\n * React context to allow sharing of a single EventDist instance among components\n *\n * @const {React.Context}\n * @public\n * @example\n * import { EventDistContext } from '@ux/component';\n *\n * export default class MyApplicationComponent extends React.Component {\n *   constructor(...args) {\n *     this.eventdist = new EventDist(window);\n *   }\n *   render() {\n *     return (\n *       <EventDistContext.Provider value={ this.eventdist }>\n *         // ...\n *         <SomeComponentThatUsesWithEventDist />\n *         // ...\n *       </EventDistContext.Provider>\n *     )\n *   }\n * }\n */\nexport const EventDistContext = createContext(null);\n\n/**\n * Higher-Order Component function to provide a shared eventdist instance.\n *\n * @param {React.Component} WrappedComponent The component to be augmented with a shared eventdist instance\n * @returns {React.Component} A wrapped component class that provides a `eventdist` object as a prop\n * @public\n * @example\n * import Component, { withEventDistContext, EventDistShape } from '@ux/component';\n * class MyComponent extends Component {\n *   componentDidMount() {\n *     this.eventdist...\n *   }\n * }\n * MyComponent.propTypes = {\n *   ...EventDistShape\n * };\n *\n * export default withEventDistContext(MyComponent);\n */\nexport const withEventDistContext = addhoc(getWrappedComponent =>\n  <EventDistContext.Consumer>\n    { sharedEventDist => getWrappedComponent({ eventdist: sharedEventDist }) }\n  </EventDistContext.Consumer>, 'WithEventDistContext');\n\n/**\n * Shape of props added to components wrapped with {@link withEventDistContext}.\n *\n * @const {Object} EventDistShape\n * @public\n */\nexport const EventDistShape = {\n  eventdist: PropTypes.object\n};\n\n/**\n * The default component that extends React.Component so we can force the\n * Component interface and prevent React.createClass usage.\n * @displayName Shared Component\n * @constructor\n * @public\n */\nexport default class SharedComponent extends Component {\n  constructor(props, ...args) {\n    super(props, ...args);\n\n    this._name = name(this).toLowerCase();\n    this.debug = debug('ux:component:' + this._name);\n    this.eventdist = props && props.eventdist || eventdist;\n\n    this.points = [];\n    this.state = {\n      viewport: breakpoints.viewport(),\n      breakpoint: breakpoints.breakpoint\n    };\n\n    this.on.bind(this);\n    this.off.bind(this);\n    this.once.bind(this);\n    this.breakup.bind(this);\n    this.breakpoint.bind(this);\n  }\n\n  /**\n   * Trigger a re-render of the component when a new breakpoint has reached.\n   * This method should only be called once for the lifecycle of a component as\n   * you don't want to add multiple listeners for the same event as that would\n   * lead to multiple `setState` calls.\n   *\n   * @returns {Component} Returns self for chaining purposes.\n   * @public\n   */\n  breakpoint(...points) {\n    this.points.push(...points);\n    this._resize(breakpoints.currently());\n\n    return this.eventdist.on('breakpoint:changed', this._resize, this);\n  }\n\n  /**\n   * The resize handler.\n   *\n   * @param {String} breakpoint Current breakpoint.\n   * @private\n   */\n  _resize(breakpoint) {\n    const points = this.points;\n    if (!points || !points.length) return;\n\n    //\n    // Find the nearest registered point by minimal distance from the actual width.\n    //\n    if (!~points.indexOf(breakpoint)) {\n      const distances = points.map(point => Math.abs(breakpoints.compare(point, 'width')));\n      breakpoint = points[distances.indexOf(Math.min(...distances))];\n    }\n\n    //\n    // Check if the breakpoint is actually different Breakpoint might have changed based on nearest algorithm.\n    //\n    if (this.state.breakpoint === breakpoint) return;\n\n    this.debug('updating state as breakpoint changed to %s', breakpoint);\n    this.setState({\n      viewport: breakpoints.viewport(),\n      breakpoint: breakpoint\n    });\n  }\n\n  /**\n   * Un-attach our mounted handlers.\n   *\n   * @returns {Component} Returns self for chaining purposes.\n   * @public\n   */\n  breakup(...points) {\n    //\n    // If there are no points provided assume that assigned listeners need to be\n    // removed.\n    //\n    if (!points.length) points = this.points;\n\n    this.points = this.points.filter(point => {\n      return !~points.indexOf(point);\n    });\n\n\n    if (!this.points.length) {\n      this.eventdist.off('breakpoint:changed', this._resize, this);\n    }\n\n    return this;\n  }\n\n  /**\n   * Generate a persistent id so it will be same every single time so it can\n   * still be used to link to certain parts in the form. If there is already an\n   * `id` provided it will fallback to that.\n   *\n   * We want to follow the HTML4 specification here to ensure that we generate\n   * valid id attributes for every single doc type. HTML5 is less strict about\n   * this as it only disallows spaces to be present in the attribute.\n   *\n   * @param {String} key Fallback key to retrieve from props.\n   * @returns {String} The persistent but semi unique id.\n   * @public\n   */\n  id(key) {\n    const props = this.props;\n    let value = (props.id || props[key] || this._name).toString().trim();\n\n    // If there are non-ASCII characters, use encodeURIComponent to deterministically replace them\n    // eslint-disable-next-line no-control-regex\n    value = value.replace(/[^\\x00-\\x7F]/g, char => {\n      return encodeURIComponent(char).replace('%', ':');\n    });\n\n    //\n    // An id attribute must start with A-Za-z char. If this is not the case\n    // we're going to prefix it. Just for clarity we prefix it with the word\n    // `id-`\n    //\n    if (!/^[A-Za-z]/.test(value)) value = 'id-' + value;\n\n    // eslint-disable-next-line no-useless-escape\n    return value.replace(/[^A-Za-z\\:\\;\\-\\_0-9\\.]+/g, '-');\n  }\n\n  /**\n   * A polyfill for Object.assign.\n   *\n   * @param {Arguments} arguments Objects that should be assigned.\n   * @returns {Object} New object in memory with cloned properties.\n   * @public\n   */\n  assign() {\n    return obassign.apply(this, arguments);\n  }\n\n  /**\n   * Check if breakpoint is mobile.\n   *\n   * @returns {Boolean} Mobile or not.\n   * @public\n   */\n  get isMobile() {\n    return !!~['mobile', 'phablet'].indexOf(this.state.breakpoint);\n  }\n\n  /**\n   * Assign an new event listener to the body element so we can listen for\n   * key presses and other events.\n   *\n   * @param {String} event Event name.\n   * @param {Function} fn Completion callback function.\n   * @returns {Component} Returns self for chaining purposes.\n   * @public\n   */\n  on(event, fn) {\n    this.eventdist.on(event, fn, this);\n\n    return this;\n  }\n\n  /**\n   * Remove an assigned event listener of the body element. This will only\n   * remove previously assigned listeners through the `on` event..\n   *\n   * @param {String} event Event name.\n   * @param {Function} fn Completion callback function, optional.\n   * @returns {Component} Returns self for chaining purposes.\n   * @public\n   */\n  off(event, fn) {\n    this.eventdist.off(event, fn, this);\n    return this;\n  }\n\n  /**\n   * Assign an new event listener to the body element that we listen to once.\n   *\n   * @param {String} event Event name.\n   * @param {Function} fn Completion callback function.\n   * @returns {Component} Returns self for chaining purposes.\n   * @public\n   */\n  once(event, fn) {\n    this.eventdist.once(event, fn, this);\n\n    return this;\n  }\n}\n\nSharedComponent.propTypes = {\n  ...EventDistShape\n};\n","/* eslint no-undefined: 0*/\n\nimport Component, { eventdist, target, EventDistContext, EventDistShape, withEventDistContext } from './component';\nimport breakpoints from './breakpoints';\nimport debug from 'diagnostics';\n\n//\n// We pre-assign an event listener. This has one major drawback and that is that\n// we always assign an resize listen even when it's not needed or used by\n// components. But the added benefit is that if we have multiple components\n// listening, we don't do viewport comparison x amount of times. Another reason\n// is that breakpoints.changed() will only evaluate to `true` once. So if we\n// have multiple components listening to resize and checking for changes only\n// one them will actually see it as changed.\n//\neventdist.on('resize', function resized() {\n  if (!breakpoints.changed()) return;\n\n  eventdist.emit('breakpoint:' + breakpoints.breakpoint);\n  eventdist.emit('breakpoint:changed', breakpoints.breakpoint);\n});\n\n/**\n * The default component that extends React.Component so we can force the\n * Component interface and prevent React.createClass usage.\n *\n * @displayName Component (Web)\n * @constructor\n * @public\n */\nexport default class WebComponent extends Component {\n  /**\n   * Helper function to create and manage an array of classNames.\n   *\n   * @returns {String|Undefined} Concatenated result of classNames.\n   * @public\n   */\n  classNames(...names) {\n    const result = names\n      .filter(Boolean)\n      .reduce((memo, className) => {\n        if (typeof className === 'string' && ~className.indexOf(' ')) {\n          className = className.split(' ');\n        }\n\n        if (Array.isArray(className)) {\n          Array.prototype.push.apply(memo, this.classNames(...className).split(' '));\n        } else if (typeof className === 'object') {\n          Object.keys(className).forEach(function each(key) {\n          //\n          // In object mode we want to optionally enable or disable classNames\n          // based on boolean values for the keys. We're not going to be too\n          // strict on true and false as we want things like `undefined` and\n          // `null` to also trigger removal.\n          //\n            if (className[key]) {\n              memo.push(key);\n            } else if (~memo.indexOf(key)) {\n              memo.splice(memo.indexOf(key), 1);\n            }\n          });\n        } else {\n          memo.push(className);\n        }\n\n        return memo;\n      }, [])\n      .filter(function filter(item, i, all) {\n        return Boolean(item) && all.indexOf(item) === i;\n      })\n      .join(' ');\n\n    //\n    // If we return an empty string and directly pass it in to the className\n    // property of a React component we will add an empty attribute to the\n    // element. Returning `undefined` ensures that no empty property is added.\n    //\n    // The undefined value is also still accepted as value for the `classNames`\n    // method so the resulting className can still be manipulated afterwards.\n    //\n    return result ? result : undefined;\n  }\n\n  /**\n   * Check if we are running in a TRUE browser (i.e. **NOT** Node.js)\n   * environment. This will only return true in REAL browser environments\n   * (i.e. not `jsdom`). The navigator object will toString as '[object Navigator]'\n   * instead of '[object Object]' if it was a leaked Node.js global.\n   *\n   * *NOTE:* This will return true in PhantomJS environments and other headless\n   * browsers since those are, in fact, REAL browsers in the strict sense.\n   *\n   * @returns {Boolean} Is this a browser\n   * @public\n   */\n  get isBrowser() {\n    return typeof navigator !== 'undefined' && Object.prototype.toString.call(navigator) === '[object Navigator]';\n  }\n\n  /**\n   * Helper function to set style.display = 'block'.\n   *\n   * @returns {Object} style object.\n   * @public\n   */\n  get show() {\n    return this.display(true);\n  }\n\n  /**\n   * Helper function to set style.display = 'none'.\n   *\n   * @returns {Object} style object.\n   * @public\n   */\n  get hide() {\n    return this.display(false);\n  }\n\n  /**\n   * Helper function to display components. By default sets `display` to 'block'.\n   *\n   * @param {Object} style Mutable style object.\n   * @param {Boolean} show Should style become visible or not.\n   * @returns {Object} style object.\n   * @public\n   */\n  display(style, show = true) {\n    if (typeof style === 'boolean') {\n      show = style;\n      style = {};\n    }\n\n    style.display = show ? 'block' : 'none';\n    return { style };\n  }\n\n  /**\n   * Calculate the component's offset relative to the window.\n   *\n   * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n   * @returns {Object} left and top offsets.\n   * @public\n   */\n  offset(ref) {\n    const rect = ref.getBoundingClientRect();\n\n    return {\n      left: rect.left + target.pageXOffset - target.document.documentElement.clientLeft,\n      top: rect.top + target.pageYOffset - target.document.documentElement.clientTop\n    };\n  }\n\n  /**\n   * Assign an new event listener to the body element that only triggers if the\n   * event target is outside the provided reference DOM Node.\n   *\n   * @param {String} event Event name.\n   * @param {Function} fn Completion callback function.\n   * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n   * @returns {Component} Returns self for chaining purposes.\n   * @public\n   */\n  outside(event, fn, ref) {\n    /**\n     * Trigger the listener if the clicked target does not contain the\n     * HTML/Component reference.\n     *\n     * @param {Event} e Browser event.\n     * @private\n     */\n    function trigger(e) {\n      if (ref) {\n        // Composed path is used for modern browsers which may be using Shadow DOM\n        if (typeof e.composedPath === 'function') {\n          !Array.from(e.composedPath()).includes(ref) && fn(e, trigger);\n        } else {\n          !ref.contains(e.target) && fn(e, trigger);\n        }\n      }\n    }\n\n    this.eventdist.on(event, trigger, this);\n    return trigger;\n  }\n\n  /**\n   * Returns a value indicating that the specified `ref` is out of the viewport in\n   * a given direction +ve or -ve pixels. If the `ref` is within the viewport then\n   * returns 0.\n   *\n   * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n   * @returns {Number|undefined} Number of pixels document.body.scrollTop must be modified by\n   * @public\n   */\n  outOfViewport(ref) {\n    const rect = ref.getBoundingClientRect();\n    if (rect.top < 0) {\n      return rect.top;\n    }\n\n    const height = window.innerHeight || document.documentElement.clientHeight;\n    if (rect.bottom > height) {\n      return rect.bottom - height;\n    }\n\n    return 0;\n  }\n\n  /**\n   * Scroll the current element into the visible area of the browser window if not there.\n   * If the element is already within the visible area of the browser window, then do not scroll.\n   *\n   * @param {Node|ReactElement} ref Reference to a DOM Node or React Element.\n   * @public\n   */\n  scrollIntoViewIfNeeded(ref) {\n    const outOf = this.outOfViewport(ref);\n    if (!outOf) { return; }\n\n    // WebKit & Blink have this native method.\n    if (ref.scrollIntoViewIfNeeded) {\n      ref.scrollIntoViewIfNeeded(false);\n      return;\n    }\n\n    //\n    // TODO (crobbins, jkeslin): do we still need this in this implementation?\n    //\n    // // If the menu itself is statically positioned, we need to take that into account\n    // if (ref.offsetParent !== ref.parentNode) {\n    //   top -= activeItem.parentNode.offsetTop;\n    // }\n\n    //\n    // Remark (crobbins): MDN suggests checking if `typeof body.scrollTop === 'number'`\n    // but based on empirical evidence that documentation is simply wrong. Other sources\n    // around the Internetz suggest that when the value is 0 `document.body` should be used.\n    // (see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect)\n    //\n    let body = document.documentElement || document.body.parentNode;\n    if (body.scrollTop === 0) {\n      body = document.body;\n    }\n\n    body.scrollTop = body.scrollTop + outOf;\n  }\n}\n\n//\n// Export our utilized internals in various ways so they can be imported as\n// standalone functionality through the `import {debug} from 'component'`\n// syntax as well as access them directly through the exposed Component\n// constructor. This allows build systems to optimize and remove dead code if\n// needed.\n//\nexport { debug, eventdist, breakpoints, EventDistContext, EventDistShape, withEventDistContext };\n\nWebComponent.debug = debug;\nWebComponent.eventdist = eventdist;\nWebComponent.breakpoints = breakpoints;\nWebComponent.EventDistContext = EventDistContext;\nWebComponent.EventDistShape = EventDistShape;\nWebComponent.withEventDistContext = withEventDistContext;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport { CSSTransition } from 'react-transition-group';\nimport { Validate } from 'react-validation-context';\n\n/**\n * The primary criteria component.\n *\n * @displayName Criteria\n *\n * @class Criteria\n * @public\n */\nexport default class Criteria extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.state = { validates: false };\n\n    this.onValidChange = this.onValidChange.bind(this);\n    this.setupRules = this.setupRules.bind(this);\n  }\n\n  /**\n   * Validates the criteria by making sure every child is valid.\n   *\n   * @param {Object} valids The map of childs to their validities.\n   * @returns {Boolean} Whether or not every child is valid.\n   */\n  validate(valids) {\n    return Object.keys(valids).every(k => valids[k]);\n  }\n\n  /**\n   * Wires up Rule child components.\n   *\n   * @returns {Array} The resulting children with wired up Rules.\n   * @private\n   */\n  setupRules() {\n    const { children, value, iconDesign } = this.props;\n    let name = this.props.name;\n    let key = 0;\n\n    return React.Children.map(children, c => {\n      if (c.type.isRule !== true) {\n        return c;\n      }\n\n      name = c.props.name || `${name} rule ${key}`;\n      const w = React.cloneElement(c, { key, name, value, iconDesign });\n\n      key++;\n      return w;\n    });\n  }\n\n  /**\n   * Wrap the onValidChange handler to set this.state.validates\n   *\n   * @param {string} name The criteria name\n   * @param {boolean} isValid Whether the rule is valid\n   * @param {boolean} wasValid Whether the rule used to be valid\n   * @private\n   */\n  onValidChange(name, isValid, wasValid) {\n    if (this.props.onValidChange) {\n      this.props.onValidChange(name, isValid, wasValid);\n    }\n    this.setState({ validates: isValid });\n  }\n\n  /**\n   * Renders the component\n   *\n   * @returns {React.DOM} The rendered component\n   */\n  render() {\n    const { visible, name, standalone, enableModern } = this.props;\n    const { validates } = this.state;\n    const ariaLiveChange = this.state.validates ? 'off' : 'polite';\n    const display = visible ? 'block' : 'none';\n\n    if (enableModern) {\n      return (\n        <Validate name={ name || '' } validate={ this.validate } onValidChange={ this.onValidChange }>\n          <CSSTransition classNames='ux-criteria' in={ standalone || visible && !validates } timeout={ 400 }>\n            <div role='status' aria-live={ ariaLiveChange }\n              className={ classNames('ux-criteria', { standalone: standalone, valid: validates }) }>\n              <div className={ classNames('ux-criteria-content', {\n                'fade-in': visible && !validates,\n                'fade-out': !visible || validates\n              }) }>\n                { this.setupRules() }\n              </div>\n            </div>\n          </CSSTransition>\n        </Validate>\n      );\n    }\n    return (\n      <Validate name={ name || '' } validate={ this.validate } onValidChange={ this.onValidChange }>\n        <div role='status' aria-live={ ariaLiveChange } style={{ display }}\n          className={ classNames('ux-criteria ux-criteria-relative', { standalone: standalone }) }>\n          <div className='ux-criteria-content'>\n            { this.setupRules() }\n          </div>\n        </div>\n      </Validate>\n    );\n  }\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nCriteria.propTypes = {\n  /** The value of the data to which to apply the criteria */\n  value: PropTypes.any,\n  /** The name of the criteria */\n  name: PropTypes.string,\n  /** Called when the validation state changes */\n  onValidChange: PropTypes.func,\n  /** Whether the element is visible */\n  visible: PropTypes.bool,\n  /** The child elements */\n  children: PropTypes.node,\n  /** Specifies if the criteria is a standalone control or if it's\n  tied to a form field */\n  standalone: PropTypes.bool,\n  /** Enable control animations and absolute positioning.\n   * This should be avoided unless your app/site is experiencing\n   * major issues as this will be removed shortly.  */\n  enableModern: PropTypes.bool,\n  /** Use custom criteria checkmark design for Criteria.Rules */\n  iconDesign: PropTypes.string\n};\n\n/**\n * PropType defaults.\n *\n * @type {Object}\n * @private\n */\nCriteria.defaultProps = {\n  visible: true,\n  name: '',\n  standalone: true,\n  enableModern: true\n};\n","/**\n * Checks if a React element is or inherits from React component.\n *\n * @param {ReactElement} element The element instance\n * @param {ReactComponent} component The target component\n * @returns {Boolean} Result\n * @private\n */\nfunction isElementOfComponentType(element, component) {\n  return (element.type === component || element.type.prototype instanceof component);\n}\n\n/**\n * Takes two functions and combines them into one.\n *\n * @param {Function} funcA First function\n * @param {Function} funcB Second function\n * @returns {Function} Resulting function\n */\nfunction combineFunctions(funcA, funcB) {\n  if (typeof funcA !== 'function') {\n    throw new Error('First argument is not a function');\n  }\n\n  if (typeof funcB !== 'function') {\n    throw new Error('Second argument is not a function');\n  }\n\n  return function () {\n    funcA(...arguments);\n    funcB(...arguments);\n  };\n}\n\n/**\n * Takes an object and names of properties to extract into new object.\n * Results in the extracted object and an object with the remaining properties.\n *\n * @param {Object} obj The target object.\n * @param {...String} args Names of properties to detach.\n * @returns {[Object,Object]} Resulting objects in array\n */\nfunction detach(obj, ...args) {\n  const a = {};\n  const b = {};\n  const keys = Object.keys(obj);\n\n  args.filter(arg => keys.indexOf(arg) >= 0).map((k) => (a[k] = obj[k]));\n  keys.filter(k => !a[k]).map((k) => (b[k] = obj[k]));\n\n  return [a, b];\n}\n\nexport {\n  isElementOfComponentType,\n  combineFunctions,\n  detach\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Criteria from './criteria';\nimport { isElementOfComponentType, combineFunctions } from './util';\n\n/**\n * Names of FormElement events to wire up.\n *\n * @type {string[]}\n * @private\n */\nconst EVENT_PROPS = ['onChange', 'onFocus', 'onBlur', 'onValidation'];\n\n/**\n * Component used to wire up Criteria to components which inherit from FormElement.\n *\n * @displayName Connect\n *\n * @class Connect\n * @public\n */\nexport default class Connect extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.state = {\n      ...this.sate,\n      value: '',\n      visible: false,\n      isValid: false,\n      hadInput: false\n    };\n\n    this._setupInput = this._setupInput.bind(this);\n    this._setupCriteria = this._setupCriteria.bind(this);\n    this._onValidChangeHandler = this._onValidChangeHandler.bind(this);\n    this._onChangeHandler = this._onChangeHandler.bind(this);\n    this._onValidationHandler = this._onValidationHandler.bind(this);\n    this._onFocusHandler = this._onFocusHandler.bind(this);\n    this._onBlurHandler = this._onBlurHandler.bind(this);\n  }\n\n  /**\n   * React lifecycle hook invoked when component is about to mount.\n   *\n   * @private\n   */\n  componentDidMount() {\n    if ('value' in this.props.children[0].props) {\n      this.setState({\n        value: this.props.children[0].props.value\n      });\n    }\n\n    if (this.props.forceValidation) {\n      this.setState({\n        hadInput: this.props.forceValidation\n      });\n    }\n  }\n\n  /**\n   * Callback used when FormElement input value is updated.\n   *\n   * @param {any} value Value to validate against.\n   * @private\n   */\n  _onValidationHandler(value) {\n    this.setState({\n      value: value,\n      hadInput: true\n    });\n  }\n\n  /**\n   * Callback used when FormElement input value changes.\n   *\n   * @param {Object} evt Change event.\n   * @private\n   */\n  _onChangeHandler(evt) {\n    this.setState({\n      value: evt.target.value,\n      hadInput: true\n    });\n  }\n\n  /**\n   * Callback used when FormElement gains focus.\n   *\n   * @private\n   */\n  _onFocusHandler() {\n    this.setState({\n      visible: true\n    });\n  }\n\n  /**\n   * Callback used when FormElement loses focus.\n   *\n   * @private\n   */\n  _onBlurHandler() {\n    setTimeout(() => {\n      this.setState({\n        visible: false\n      });\n    }, 250);\n  }\n\n  /**\n   * Callback used when Criteria changes valid state.\n   *\n   * @param {Boolean} name Name of the Criteria.\n   * @param {Boolean} isValid Valid state of Criteria.\n   * @private\n   */\n  _onValidChangeHandler(name, isValid) {\n    this.setState({\n      isValid\n    });\n  }\n\n  /**\n   * Wires up callbacks to the FormElement.\n   *\n   * @param {ReactElement} element FormElement.\n   * @returns {ReactElement} wired up FormElement.\n   * @private\n   */\n  _setupInput(element) {\n    const self = this;\n    const state = self.state;\n    const { validate } = element.props;\n    const props = { };\n\n    //\n    // If this component has ever had focus then validation\n    // should be run. Otherwise, if it has never had user interaction\n    // it should be displayed as valid even if it is invalid.\n    //\n    if (state.hadInput) {\n      let valid = state.isValid;\n\n      if (typeof validate === 'function') {\n        valid = valid && validate(state.value);\n      }\n\n      props.validates = valid;\n    }\n\n    //\n    // If we are visible then pass alone the `open` class to the form\n    // element associated with this instance.\n    //\n\n    if (state.visible && (!self.props.enableModern || !state.isValid)) {\n      props.className = 'open';\n    }\n\n    EVENT_PROPS.forEach(method => {\n      if (typeof element.props[method] === 'function') {\n        props[method] = combineFunctions(element.props[method], self[`_${method}Handler`]);\n      } else {\n        props[method] = self[`_${method}Handler`];\n      }\n    });\n\n    return React.cloneElement(element, props);\n  }\n\n  /**\n   * Wires up callbacks to the Criteria component.\n   *\n   * @param {ReactElement} element Criteria element.\n   * @returns {ReactElement} wired up Criteria.\n   * @private\n   */\n  _setupCriteria(element) {\n    const props = this.props;\n    const state = this.state;\n\n    return React.cloneElement(element, {\n      standalone: false,\n      value: state.value,\n      visible: state.visible,\n      enableModern: props.enableModern,\n      onValidChange: typeof element.props.onValidChange === 'function' ?\n        combineFunctions(element.props.onValidChange, this._onValidChangeHandler) : this._onValidChangeHandler\n    });\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {React.DOM} Rendered form element.\n   * @private\n   */\n  render() {\n    return (\n      <div className='ux-criteria-connect'>\n        { this._setupInput(this.props.children[0]) }\n        { this._setupCriteria(this.props.children[1]) }\n      </div>\n    );\n  }\n\n  /**\n   * PropType check that make sure child components are correct type and order.\n   *\n   * @param {Array} props Props\n   * @param {String} propName Name of prop\n   * @param {String} componentName Name of component\n   * @returns {*} null or Error if invalid children\n   * @private\n   */\n  static childrenPropTypes(props, propName, componentName) {\n    const _children = React.Children.toArray(props[propName]);\n    if (_children.length !== 2) {\n      return new Error(\n        `${componentName} may only have 2 child components`\n      );\n    }\n\n    const input = _children[0];\n    const criteria = _children[1];\n    if (!input.props.label && !input.props.placeholder) {\n      return new Error(\n        `${componentName} must have a FormElement component as the first child`\n      );\n    }\n\n    if (!isElementOfComponentType(criteria, Criteria)) {\n      return new Error(\n        `${componentName} must have a Criteria component as second child`\n      );\n    }\n\n    return null;\n  }\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nConnect.propTypes = {\n  /** The child elements */\n  children: Connect.childrenPropTypes,\n  /** Whether validation should be performed on initial mount */\n  forceValidation: PropTypes.bool,\n  /** Enable control animations and absolute positioning.\n   * This should be avoided unless your app/site is experiencing\n   * major issues as this will be removed shortly.  */\n  enableModern: PropTypes.bool\n};\n\nConnect.defaultProps = {\n  enableModern: true\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport Refresh from '@ux/icon/refresh';\nimport Checkmark from '@ux/icon/checkmark';\nimport { Validates } from 'react-validation-context';\n\n/**\n * Component used to define a criteria rule.\n *\n * @displayName Rule\n *\n * @class Rule\n * @public\n */\nexport default class Rule extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.state = {\n      ...this.state,\n      isValid: false,\n      promisePending: false\n    };\n\n    this._queuedValue = null;\n  }\n\n  /**\n   * React lifecycle hook invoked when component is mounted.\n   *\n   * @private\n   */\n  componentDidMount() {\n    this._performValidate(this.props.value);\n  }\n\n  /**\n   * React lifecycle hook invoked when new props are being received.\n   *\n   * @param {Object} prevProps previous props\n   * @private\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props.value !== prevProps.value) {\n      this._performValidate(this.props.value);\n    }\n  }\n\n  /**\n   * Executes validate function. If a validate promise is pending, value is queued.\n   *\n   * @param {*} value The valid to validate.\n   * @private\n   */\n  _performValidate(value) {\n    if (this.state.promisePending) {\n      this._queuedValue = value;\n      return;\n    }\n\n    const isValid = this.props.validate(value);\n\n    if (typeof Promise !== 'undefined' && isValid instanceof Promise) {\n      const newState = {\n        promisePending: true\n      };\n\n      if (this.state.isValid) {\n        newState.isValid = false;\n      }\n\n      isValid.then(\n        () => {\n          this._setValidateResults(true);\n        },\n        () => {\n          this._setValidateResults(false);\n        }\n      );\n\n      this.setState(newState);\n    } else {\n      this._setValidateResults(isValid);\n    }\n  }\n\n  /**\n   * Updates component state and performs validate if there is a queued value.\n   *\n   * @param {Boolean} isValid Did the rule validate or not.\n   * @private\n   */\n  _setValidateResults(isValid) {\n    const newState = {};\n\n    if (this.state.promisePending) {\n      newState.promisePending = false;\n    }\n\n    if (this.state.isValid !== isValid) {\n      newState.isValid = isValid;\n    }\n\n    if (Object.keys(newState).length) {\n      this.setState(newState);\n    }\n\n    if (this._queuedValue !== null) {\n      this._performValidate(this._queuedValue);\n      this._queuedValue = null;\n    }\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {React.DOM} Rendered form element.\n   * @private\n   */\n  render() {\n    const { name, onValidChange } = this.props;\n    const { isValid } = this.state;\n\n    const iconStateClass = isValid ? 'success' : '';\n    let renderIcon = (\n      <span className={ 'icon ' + iconStateClass }>\n        <Checkmark width={ 17 } height={ 17 } />\n      </span>\n    );\n\n    const ariaCriteriaItem = isValid ? 'true' : 'false';\n    if (this.state.promisePending) {\n      renderIcon = (\n        <span className='icon'>\n          <Refresh />\n        </span>\n      );\n    }\n\n    return (\n      <div\n        className={ classNames('ux-criteria-rule', { 'ux-criteria-rule-checked': isValid }) }\n        aria-hidden={ ariaCriteriaItem }>\n        <Validates name={ name || '' } validates={ isValid } onValidChange={ onValidChange } />\n        { renderIcon }\n        <span className={ `ux-criteria-rule-text` }>\n          { this.props.children }\n        </span>\n      </div>\n    );\n  }\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nRule.propTypes = {\n  /** How to validate the data, returns true if data is valid */\n  validate: PropTypes.func.isRequired,\n  /** The data being validated */\n  value: PropTypes.any,\n  /** Function called when validation state changes */\n  onValidChange: PropTypes.func,\n  /** The name of the criteria */\n  name: PropTypes.string,\n  /** Child elements */\n  children: PropTypes.node\n};\n\n/**\n * Flag the component as a rule for criteria component to look for.\n *\n * @type {boolean}\n * @private\n */\nRule.isRule = true;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\nimport { detach } from '../util';\n\n/**\n * Rule component requiring a minimum length of characters.\n *\n * @displayName MinCharactersRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function MinCharactersRule(props) {\n  var [a, b] = detach(props, 'min');\n  return (\n    <Rule validate={ (v) => v.length >= a.min } { ...b }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nMinCharactersRule.propTypes = {\n  /** The minimum number of characters (inclusive) */\n  min: PropTypes.number.isRequired,\n  /** Child elements */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\nimport { detach } from '../util';\n\n/**\n * Rule component requiring a maximum length of characters.\n *\n * @displayName MaxCharactersRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function MaxCharactersRule(props) {\n  var [a, b] = detach(props, 'max');\n  return (\n    <Rule validate={ (v) => v.length <= a.max } { ...b }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nMaxCharactersRule.propTypes = {\n  /** The maximum number of characters (inclusive) */\n  max: PropTypes.number.isRequired,\n  /** Child elements */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\nimport { detach } from '../util';\n\n/**\n * Rule component requiring a minimum and maximum length of characters.\n *\n * @displayName MinMaxCharactersRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function MinMaxCharactersRule(props) {\n  var [a, b] = detach(props, 'min', 'max');\n  return (\n    <Rule validate={ (v) => v.length >= a.min && v.length <= a.max } { ...b }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nMinMaxCharactersRule.propTypes = {\n  /** The minimum number of characters (inclusive) */\n  min: PropTypes.number.isRequired,\n  /** The maximum number of characters (inclusive) */\n  max: PropTypes.number.isRequired,\n  /** Child elements */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\n\n/**\n * Rule component requiring a numeral character.\n *\n * @displayName IncludeNumberRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function IncludeNumberRule(props) {\n  return (\n    <Rule validate={ (v) => /\\d/.test(v) } { ...props }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nIncludeNumberRule.propTypes = {\n  /** Child elements */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\n\n/**\n * Rule component requiring an uppercase character.\n *\n * @displayName IncludeUppercaseRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function IncludeUppercaseRule(props) {\n  return (\n    <Rule validate={ (v) => /[A-Z]/.test(v) } { ...props }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nIncludeUppercaseRule.propTypes = {\n  /** Child elements */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\n\n/**\n * Rule component requiring a lowercase character.\n *\n * @displayName IncludeLowercaseRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function IncludeLowercaseRule(props) {\n  return (\n    <Rule validate={ (v) => /[a-z]/.test(v) } { ...props }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nIncludeLowercaseRule.propTypes = {\n  /** Child elements */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Rule from '../criteria-rule';\n\n/**\n * Rule component requiring no spaces at start or end of input.\n *\n * @displayName NoOuterWhitespaceRule\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function NoOuterWhitespaceRule(props) {\n  return (\n    <Rule validate={ (v) => v.trim() === v } { ...props }>\n      { props.children }\n    </Rule>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nNoOuterWhitespaceRule.propTypes = {\n  /** Child elements */\n  children: PropTypes.node\n};\n","import MinCharactersRule from './min-characters';\nimport MaxCharactersRule from './max-characters';\nimport MinMaxCharactersRule from './min-max-characters';\nimport IncludeNumberRule from './include-number';\nimport IncludeUppercaseRule from './include-uppercase';\nimport IncludeLowercaseRule from './include-lowercase';\nimport NoOuterWhitespaceRule from './no-outer-whitespace';\n\n[\n  MinCharactersRule,\n  MaxCharactersRule,\n  MinMaxCharactersRule,\n  IncludeNumberRule,\n  IncludeUppercaseRule,\n  IncludeLowercaseRule,\n  NoOuterWhitespaceRule\n].forEach(r => {\n  r.isRule = true;\n});\n\nexport {\n  MinCharactersRule,\n  MaxCharactersRule,\n  MinMaxCharactersRule,\n  IncludeNumberRule,\n  IncludeUppercaseRule,\n  IncludeLowercaseRule,\n  NoOuterWhitespaceRule\n};\n","import Criteria from './criteria';\nimport Connect from './criteria-connect';\nimport Header from './criteria-header';\nimport Rule from './criteria-rule';\nimport * as Rules from './rules';\n\n//\n// Attach children to the main Component for availability without ES6 imports.\n//\nCriteria.Connect = Connect;\nCriteria.Header = Header;\nCriteria.Rules = Rules;\nCriteria.Rule = Rule;\n\n//\n// Export the Class and related children.\n//\nexport {\n  Criteria,\n  Rule,\n  Header,\n  Connect,\n  Rules\n};\n\nexport default Criteria;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n/**\n * Header used as the first child of a Criteria component.\n *\n * @displayName Header\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nexport default function Header(props) {\n  return (\n    <div className='ux-criteria-header title extra-small'>{ props.children }</div>\n  );\n}\n\n/**\n * PropType validation.\n *\n * @type {Object}\n * @private\n */\nHeader.propTypes = {\n  /** The child elements */\n  children: PropTypes.node\n};\n","/* eslint no-unused-vars: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toggle } from 'toggler';\nimport Button from '@ux/button';\n\n//\n// Allowed dropdown types.\n//\nconst types = Object.values(Button.designs).concat('button', 'select', 'multiselect', 'tripledot', 'custom');\n\n/**\n * Display a Dropdown that works standalone button, as select or multiselect.\n *\n * @class Dropdown\n * @public\n */\nclass Base extends Component {\n  constructor(props = {}, ...args) {\n    super(props, ...args);\n    this.toggle = toggle(this, 'open', () => {\n      const isOpen = this.state.open;\n      if (typeof this.props.onToggle === 'function') {\n        this.props.onToggle(isOpen);\n      }\n      if (typeof this.toggleBackground === 'function') {\n        this.toggleBackground(isOpen);\n      }\n    });\n\n    const selectedItems = props.selected || props.defaultSelected;\n\n    this.state = {\n      ...this.state,\n      error: false,\n      open: this.props.open || false,\n      selected: [].concat(selectedItems),\n      keyboardSelectionIndex: -1\n    };\n  }\n\n  /**\n   * Returns all children that are not of a specific type. This will be\n   * overridden by the separate web and native specitic implementations of\n   * the dropdown.\n   *\n   * @param {React.Element[]} children - React elements.\n   * @throws {Error} error if this method is not overridden\n   * @private\n   */\n  items(children) {\n    throw new Error('Must be implemented by derived class.');\n  }\n\n  /**\n   * Returns true if the current dropdown is a multiselect dropdown\n   *\n   * @returns {Boolean} true if dropdown is multiselect\n   * @public\n   */\n  isMultiSelect() {\n    return this.props.type === 'multiselect';\n  }\n\n  /**\n   * Sets the document location if the given item has a valid href\n   *\n   * @param {Object} itemProps Fully formed props from the selected item\n   * @private\n   */\n  redirectToHrefIfAvailable(itemProps) {\n    const { href } = itemProps;\n    if (href && typeof href === 'string' && href !== '#') {\n      document.location = href;\n    }\n  }\n\n  /**\n   * Select the item for a given index and trigger onChange from props if provided.\n   * In the case of multiselect, it will also unselect.\n   *\n   * @param {Number} itemIndex Zero-based index of the item (among DropdownItems only).\n   * @param {Event} event Event passed in from the source of the select\n   * @param {function} callback Callback to fire after state has been updated\n   * @public\n   */\n  selectIndex(itemIndex, event) {\n    const items = this.items(React.Children.toArray(this.props.children));\n    const item = items[itemIndex];\n    if (!item) {\n      return;\n    }\n\n    const listener = item.props.type === 'multiselect' ? 'onChange' : 'onClick';\n    this.selectItem({ ...item.props, itemIndex }, event, item.props[listener]);\n  }\n\n  /**\n   * Select the item with the given `itemProps.itemIndex` and trigger onChange\n   * from props if provided. Finally also trigger the **item's** onChange or\n   * onClick handler (represented by `callback`). In the case of multiselect,\n   * it will also unselect.\n   *\n   * @param {Object} itemProps Fully formed props from the selected item\n   * @param {Event} event Event passed in from the source of the select\n   * @param {function} callback Callback to fire after state has been updated\n   * @public\n   */\n  selectItem(itemProps, event, callback) {\n    this.redirectToHrefIfAvailable(itemProps);\n\n    let { selected } = this.state;\n    const { itemIndex } = itemProps;\n\n    if (this.isMultiSelect()) {\n      const index = selected.indexOf(itemIndex);\n      if (index > -1) {\n        selected.splice(index, 1);\n      } else {\n        selected.push(itemIndex);\n      }\n    } else {\n      selected = [itemIndex];\n    }\n\n    const nextState = { selected, keyboardSelectionIndex: itemIndex };\n    let nextSelected = selected;\n    if (!this.isMultiSelect()) {\n      this.hide();\n      nextSelected = nextSelected[0];\n    }\n\n    this.setState(nextState, () => {\n      this.broadcast({\n        ...itemProps,\n        selected: nextSelected\n      }, event, callback);\n    });\n  }\n\n  /**\n   * broadcast item selection to the dropdown onChange prop as well as\n   * either the onClick or onChange callback of dropdown items if defined\n   *\n   * @param {Object} options selected item properties\n   * @param {event} event the react proxy event that originates at the doprdown item\n   * @param {function} callback callback function to invoke in addition to dropdown onChange\n   * @private\n   */\n  broadcast(options, event, callback) {\n    if (!event) {\n      return;\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(options, event);\n    }\n\n    callback && callback(options, event);\n  }\n\n  /**\n   * On change of incoming `open` prop update internal state using `toggler`\n   *\n   * @param {Object} prevProps - Object of Previous Props\n   * @private\n   */\n  componentDidUpdate(prevProps) {\n    if (typeof this.props.open !== 'undefined' && prevProps.open !== this.props.open) {\n      this.toggle();\n    }\n\n    if (this.props.selected !== prevProps.selected) {\n      this.setState({\n        selected: [].concat(this.props.selected)\n      });\n    }\n  }\n\n  /**\n   * Event handler to show and hide the dropdown.\n   *\n   * @returns {Function} Event handler\n   * @public\n   */\n  get show() {\n    return this.props.show || (event => {\n      this.toggle(event);\n    });\n  }\n\n  /**\n   * Event handler to hide the dropdown after clicking on another dropdown,\n   * the state check is done to prevent state\n   * changes when the dropdown is already hidden. This method is used by the\n   * document click listeners.\n   *\n   * @returns {Function} Event handler\n   * @public\n   */\n  get hide() {\n    return this.props.hide || (event => {\n      if (!this.state.open) {\n        return;\n      }\n      this.toggle(event);\n    });\n  }\n\n  /**\n   * Return selected indexes of dropdown items.\n   *\n   * @returns {Array} Selected item indexes.\n   * @private\n   */\n  get selected() {\n    return this.state.selected;\n  }\n\n  /**\n   * When space or enter is pressed select the DropdownItem. Incase of multiselect select the Dropdown item on space.\n   * When escape is pressed close the dropdown.\n   * When a Arrowup or Arrowdown is pressed move the pointer accordingly.\n   * Incase of Button, on enter or space it opens the link.\n   * @param {object} e Event object sent from the browser\n   * @private\n   */\n  keyDown(e) {\n    const key = e.key;\n    switch (key) {\n      case 'Escape':\n        this.hide();\n        break;\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.onArrowUpDown(e);\n        break;\n      case 'Space':  // Space bar\n      case 'Enter': {  // Enter\n        if (this.state.open) {\n          const { keyboardSelectionIndex } = this.state;\n          this.selectIndex(keyboardSelectionIndex, e);\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  /**\n   * On ArrowUp or ArrowDown sets the index of the dropdown item.\n   * @param {KeyboardEvent} e Event object sent from the browser\n   * @private\n   */\n  onArrowUpDown(e) {\n    if (e.key === 'ArrowDown' && !this.state.open) {\n      this.show();\n    }\n\n    let { keyboardSelectionIndex } = this.state;\n    const delta = e.key === 'ArrowDown' ? 1 : -1;\n\n    if (keyboardSelectionIndex === -1 && e.key === 'ArrowUp') {\n      keyboardSelectionIndex = 0;\n    }\n\n    const items = this.items(React.Children.toArray(this.props.children));\n    const dataLength = items.length;\n    if (items.filter(item => !item.props.disabled).length > 0) {\n      // Using bounds just outside the acceptable range. This is for logic safety only.\n      for (let i = keyboardSelectionIndex + delta; i < dataLength + 1 && i > -2; i += delta) {\n        // Reset the index if it's beyond the bounds of the list, allowing looping.\n        i = (i + dataLength) % dataLength;\n        if (!items[i].props.disabled) {\n          this.setState({ keyboardSelectionIndex: i });\n          break;\n        }\n      }\n    }\n    e.preventDefault();\n  }\n\n  /**\n   * Extract the children (text) of the selected DropdownItem.\n   *\n   * @param {Array} childs Current children of this instance.\n   * @returns {Array} Join of selected items.\n   * @private\n   */\n  getSelectedItem(childs) {\n    let items = this.items(childs) || [];\n    items = items.filter((item, i) => ~this.selected.indexOf(i));\n\n    if (!items.length) {\n      return null;\n    }\n\n    return items.reduce((memo, item, i) => {\n      if (i) memo.push(', ');\n      memo.push(item.props.children);\n      return memo;\n    }, []);\n  }\n}\n\n/**\n * Default to button dropdown.\n *\n * @enum {Object} defaultProps\n * @public\n */\nBase.defaultProps = {\n  defaultSelected: [],\n  disabled: false,\n  onChange: () => {},\n  onToggle: () => {}\n};\n\n/**\n * Define properties and validate the type of children that are passed\n * to the Dropdown.\n *\n * @enum {Object} propTypes\n * @public\n */\nBase.propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.node,\n  open: PropTypes.bool,\n  show: PropTypes.func,\n  hide: PropTypes.func,\n  required: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  onChange: PropTypes.func,\n  onToggle: PropTypes.func,\n  type: PropTypes.oneOf(types),\n  content: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.node,\n  label: PropTypes.node,\n  toggleIcon: PropTypes.oneOf(['clock', 'dropdown']),\n  selected: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  defaultSelected: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.array\n  ])\n};\n\nexport {\n  Base as default,\n  types\n};\n","import Chev from '@ux/icon/chevron-down';\nimport Ellipses from '@ux/icon/ellipses';\nimport React, { Component } from 'react';\nimport { classNames } from '@ux/component-utilities';\nimport PropTypes from 'prop-types';\nimport Clock from '@ux/icon/clock';\nimport Button from '@ux/button';\nimport rip from 'rip-out';\n\n/**\n * Create a triple dot icon.\n *\n * @function TripleDot\n * @returns {React.ReactElement} tripledot element\n * @private\n */\nfunction TripleDot() {\n  return (\n    <div className='tripledot'>\n      <Ellipses width={ 20 } height={ 20 } />\n    </div>\n  );\n}\n\n/**\n * Create two buttons rendered as split dropdown.\n *\n * @function DropdownSplit\n * @returns {React.ReactElement} split button element\n * @private\n */\nfunction DropdownSplit({ type, toggle, ...other }) {\n  return (<div className='btn-group'>\n    <Button\n      { ...other }\n      design={ Button.designs.includes(type) ? type : null }\n      className='dropdown-split'\n    />\n    <Button\n      id='menubutton'\n      aria-haspopup={ true }\n      design={ Button.designs.includes(type) ? type : null }\n      onClick={ toggle }\n      className='dropdown-toggle dropdown-toggle-split btn-dropdown'\n      as='select'>\n    </Button>\n  </div>\n  );\n}\n\n/**\n * Type property of split dropdown.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownSplit.propTypes = {\n  toggle: PropTypes.func,\n  type: PropTypes.string\n};\n\n/**\n * Create button control that optionally renders split buttons.\n *\n * @class DropdownButton\n * @private\n */\nclass DropdownButton extends Component {\n  render() {\n    const props = rip(this.props, 'toggleIcon', 'hasPlaceholder');\n    const { type, className, toggle, split, ...other } = props;\n\n    if (split) {\n      return <DropdownSplit type={ type } toggle={ toggle } { ...other } />;\n    }\n\n    return (\n      <Button\n        id='menubutton'\n        aria-haspopup={ true }\n        active={ props.open }\n        { ...other }\n        design={ Button.designs.includes(type) ? type : null }\n        onClick={ toggle }\n        as='select'\n        className={ classNames(className, 'dropdown-toggle btn-dropdown') }>\n        {props.children}\n      </Button>\n    );\n  }\n}\n\n/**\n * Toggle and split properties of the button.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownButton.propTypes = {\n  toggle: PropTypes.func,\n  split: PropTypes.bool,\n  disabled: PropTypes.bool,\n  hasPlaceholder: PropTypes.bool\n};\n\n/**\n * Create select control.\n *\n * @class DropdownSelect\n * @private\n */\nclass DropdownSelect extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.keycodes = {\n      Space: function (type) {\n        return type !== 'multiselect';\n      },\n\n      Enter: 'toggle',\n      Escape: 'keydown',\n      ArrowUp: 'keydown',\n      ArrowDown: 'keydown'\n    };\n  }\n\n  /**\n   * Triggers toggle on keypress of enter or spacebar\n   *\n   * @param {SyntheticEvent} e React Keyboard event.\n   * @private\n   */\n  onKeyDown(e) {\n    //\n    // IE11 does not include \"code\" and provides a different value for \"key\"\n    // than other browsers. e.g.:\n    //\n    //   - IE11:    { \"key\": \"Spacebar\", \"keyCode\": 32, \"which\": 32 }\n    //   - Chrome:  { \"code\": \"Space\", \"key\": \" \", \"keyCode\": 32, \"which\": 32 }\n    //   - Firefox: { \"code\": \"Space\", \"key\": \" \", \"keyCode\": 32, \"which\": 32 }\n    //   - Safari:  { \"keyCode\": 32, \"which\": 32 }\n    //\n    // Thankfully React normalizes these into `e.key` in their SyntheticEvent\n    // See: https://facebook.github.io/react/docs/events.html#keyboard-events\n    //\n    const key = e.key;\n    const accepts = this.keycodes[key];\n    if (accepts) {\n      e.preventDefault();\n      this.props.onKeyDown(e);\n\n      if (\n        accepts === 'toggle' ||\n        (typeof accepts === 'function' && accepts(this.props.type))\n      ) {\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  render() {\n    const props = this.props;\n    let eventHandlers = {};\n    if (!props.disabled) {\n      eventHandlers = {\n        onClick: props.toggle,\n        onKeyDown: this.onKeyDown\n      };\n    }\n\n    return (\n      <div\n        aria-expanded={ this.props.open }\n        aria-disabled={ props.disabled }\n        aria-labelledby={ props['aria-labelledby'] }\n        { ...eventHandlers }\n        tabIndex={ props.tabIndex }\n        className={ classNames(\n          'form-control',\n          {\n            'form-control-lg': props.size === 'large',\n            'form-control-sm': props.size === 'small',\n            'form-control-merch': props.merch,\n            'placeholder': props.hasPlaceholder\n          }\n        ) }>\n        {props.type !== 'tripledot' &&\n          props.type !== 'custom' &&\n          props.toggleIcon !== 'clock' && (\n          <div className={ 'dropdown-toggle' }>\n            <Chev />\n          </div>\n        )}\n        {props.type === 'select' && props.toggleIcon === 'clock' && (\n          <div className='timepicker'>\n            <Clock />\n          </div>\n        )}\n        <div className='dropdown-text'>{props.children}</div>\n      </div>\n    );\n  }\n}\n\nDropdownSelect.defaultProps = {\n  tabIndex: 0\n};\n\n/**\n * Toggle property of the control.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownSelect.propTypes = {\n  'tabIndex': PropTypes.oneOf([-1, 0]),\n  'toggle': PropTypes.func,\n  'disabled': PropTypes.bool,\n  'onKeyDown': PropTypes.func,\n  'toggleIcon': PropTypes.oneOf(['clock', 'dropdown']),\n  'hasPlaceholder': PropTypes.bool,\n  'size': PropTypes.oneOf(['large', 'small', 'default']),\n  'children': PropTypes.node,\n  'type': PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  'merch': PropTypes.bool,\n  'open': PropTypes.bool\n};\n\n/**\n * DropdownControl creates a select or button dropdown. Each control gets different\n * properties.\n *\n * @class DropdownControl\n * @displayName DropdownControl (Web)\n * @public\n */\nclass DropdownControl extends Component {\n  render() {\n    const props = this.props;\n    switch (props.type) {\n      case 'select':\n      case 'multiselect':\n        return <DropdownSelect { ...props } />;\n      case 'tripledot':\n        return (\n          <DropdownSelect { ...props }>\n            <TripleDot />\n          </DropdownSelect>\n        );\n      case 'custom':\n        return <DropdownSelect { ...props }>{props.content}</DropdownSelect>;\n      case 'button':\n      default:\n        return <DropdownButton { ...props } />;\n    }\n  }\n}\n\n/**\n * Do not split the button by default.\n *\n * @enum {Object} defaultProps\n * @public\n */\nDropdownControl.defaultProps = {\n  type: 'button',\n  split: false\n};\n\n/**\n * Type and split properties of the control.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownControl.propTypes = {\n  /** Type of dropdown control */\n  'type': PropTypes.string,\n  /** Boolean whether the dropdown button is split */\n  'split': PropTypes.bool,\n  /** Boolean whether the dropdown button is disabled */\n  'disabled': PropTypes.bool,\n  /** Icon shown for toggling */\n  'toggleIcon': PropTypes.oneOf(['clock', 'dropdown']),\n  /** Boolean whether the placeholder text is provided */\n  'hasPlaceholder': PropTypes.bool,\n  /** Boolean whether merchandising styles should apply */\n  'merch': PropTypes.bool,\n  /** String the element that labels this control */\n  'aria-labelledby': PropTypes.string,\n  /** Content to be displayed */\n  'content': PropTypes.node,\n  /** Editable tabIndex of DropdownSelect, defaults to 0. */\n  'tabIndex': PropTypes.oneOf([-1, 0])\n};\n\nexport default DropdownControl;\n","import React from 'react';\n\n/**\n * Create divider which visually seperates DropdownItems.\n *\n * @function DropdownDivider\n * @returns {React.ReactComponent} DropdownDivider\n * @displayName DropdownDivider (Web)\n * @public\n */\nexport default function DropdownDivider() {\n  return <hr role='presentation' className='dropdown-divider' />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Create a header which can highlight a set of DropdownItems.\n *\n * @class DropdownHeader\n * @displayName DropdownHeader (Web)\n * @public\n */\nexport default function DropdownHeader({ children }) {\n  return (\n    <div\n      role='heading'\n      aria-level='1'\n      className='dropdown-header title small'>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Children should be provided.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownHeader.propTypes = {\n  /** Contents of a dropdown header */\n  children: PropTypes.node.isRequired\n};\n","import React, { PureComponent, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rip from 'rip-out';\nimport { classNames } from '@ux/component-utilities';\n\n/**\n * Create input checkbox element, which is used for the multiselect.\n *\n * @class CheckboxItem\n * @displayName CheckboxItem (Web)\n * @public\n */\nclass CheckboxItem extends PureComponent {\n\n  /**\n * Handles when the spacebar is pressed to change the selection\n *\n * @param {React.KeyboardEvent} event - Event object from handler\n */\n  onKeyDown(event) {\n    if (~this.tabIndex && event.key === ' ') {\n      event.preventDefault();\n      typeof this.props.onChange === 'function' && this.props.onChange();\n    }\n  }\n\n  render() {\n    const props = this.props;\n\n    return (\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n      <label\n        role='listitem'\n        className={ props.className }\n        onChange={ props.onChange }\n        tabIndex={ props.tabIndex }\n        onKeyDown={ this.onKeyDown }\n        ref={ r => {\n          this.componentRef = r;\n        } }>\n        <input\n          onChange={ function () {} }\n          role='menuitemcheckbox'\n          type='checkbox'\n          tabIndex='-1'\n          name={ props.name }\n          value={ props.value }\n          checked={ props.isSelected }\n          aria-checked={ props.isSelected }\n        />{' '}\n        {props.children}\n      </label>\n    );\n  }\n}\n\n/**\n * PropType validation for CheckboxItem.\n *\n * @enum {Object} propTypes\n * @public\n */\nCheckboxItem.propTypes = {\n  /** String className for the checkbox label */\n  className: PropTypes.string,\n  /** Contents of checkbox item */\n  children: PropTypes.node,\n  /** Boolean for whether dropdown item is selected */\n  isSelected: PropTypes.bool,\n  /** Name of the checkbox control */\n  name: PropTypes.string,\n  /** Value of the checkbox control */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** onChange event handler */\n  onChange: PropTypes.func,\n  /** Index for the dropdown item */\n  itemIndex: PropTypes.number,\n  /** Developer indicates tabIndex */\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n\n/**\n * Create an item, which receive a checkbox element if the type is multiselect.\n *\n * @class DropdownItem\n * @displayName DropdownItem (Web)\n * @public\n */\nclass DropdownItem extends Component {\n  /**\n   * Get reference to the dropdown item (either DropdownItem or CheckboxItem)\n   * @returns {Object} Dropdown Item reference\n   */\n  getRef() {\n    if (this.componentRef instanceof CheckboxItem) {\n      return this.componentRef.componentRef;\n    }\n    return this.componentRef;\n  }\n\n  render() {\n    const props = this.props;\n    const { isSelected, type, disabled, tabIndex, ...other } = props;\n    const className = classNames(\n      other.className,\n      'dropdown-item', {\n        active: props.active,\n        disabled\n      }\n    );\n\n    if (type === 'multiselect') {\n      return (\n        <CheckboxItem\n          { ...props }\n          isSelected={ isSelected }\n          ref={ r => {\n            this.componentRef = r;\n          } }\n          className={ className }\n        />\n      );\n    }\n\n    const itemProps = rip(other, 'active', 'isSelected');\n\n    return React.createElement(itemProps.href ? 'a' : 'span', {\n      ...itemProps,\n      disabled,\n      className,\n\n      'ref': r => {\n        this.componentRef = r;\n      },\n\n      /* eslint-disable-line quote-props */\n      'role': 'option',\n      'aria-selected': isSelected,\n      'tabIndex': tabIndex,\n      'aria-disabled': disabled\n    });\n  }\n}\n\nDropdownItem.defaultProps = {\n  tabIndex: 0\n};\n\n/**\n * PropType validation for DropdownItem.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownItem.propTypes = {\n  /** Boolean for whether dropdown item is disabled */\n  disabled: PropTypes.bool,\n  /** Boolean for whether dropdown item is active */\n  active: PropTypes.bool,\n  /** Type of dropdown item */\n  type: PropTypes.string,\n  /** Url for dropdown item when clicked */\n  href: PropTypes.string,\n  /** Boolean for whether dropdown item is selected */\n  isSelected: PropTypes.bool,\n  /** Developer indicates tabIndex, default is 0 */\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n\nexport default DropdownItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport DropdownDivider from './dropdown-divider';\nimport DropdownHeader from './dropdown-header';\nimport selectableItem from './selectable-item';\nimport Button from '@ux/button';\nimport Close from '@ux/icon/x';\n\nconst alignLeft = 'dropdown-menu-left';\nconst alignRight = 'dropdown-menu-right';\nexport const alignmentTypes = {\n  left: 'left',\n  right: 'right',\n  preferLeft: 'preferLeft',\n  preferRight: 'preferRight'\n};\n\nexport const autoAlignments = {\n  [alignmentTypes.preferLeft]: true,\n  [alignmentTypes.preferRight]: true\n};\nconst defaultAlignmentClassName = {\n  [alignmentTypes.left]: alignLeft,\n  [alignmentTypes.right]: alignRight,\n  [alignmentTypes.preferLeft]: alignLeft,\n  [alignmentTypes.preferRight]: alignRight\n};\n\nconst alignmentValues = Object.keys(alignmentTypes).map(\n  key => alignmentTypes[key]\n);\nexport const menuAlignmentPropType = PropTypes.oneOf(alignmentValues);\n\n/**\n * DropdownMenu renders a wrapping div to handle menu alignment (left or right)\n * and wires up all children by cloning them with additional properties.\n *\n * @class DropdownMenu\n * @displayName DropdownMenu (Web)\n * @private\n */\nclass DropdownMenu extends Component {\n  constructor() {\n    super(...arguments);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  /**\n   * Return DropdownItems of the menu. Dividers and Headers will be ignored. If the\n   * dropdown is of type (multi)selected the DropdownItem will be enhanced with\n   * additional properties and event handlers.\n   *\n   * @returns {Array} React elements.\n   * @private\n   */\n  children() {\n    const props = this.props;\n    let items = 0;\n    return React.Children.map(props.children, item => {\n      return item.type !== DropdownDivider && item.type !== DropdownHeader\n        ? selectableItem(this, item, items++)\n        : item;\n    });\n  }\n\n  onKeyDown(e) {\n    if (\n      e.key &&\n      (e.key === 'Escape' ||\n        e.key === 'Esc' ||\n        e.key === 'Enter' ||\n        e.key === 'Return')\n    ) {\n      this.props.toggle();\n    }\n  }\n\n  /**\n   * Render Dropdown menu.\n   *\n   * @returns {ReactElement} div element with DropdownItems.\n   * @private\n   */\n  render() {\n    const {\n      menuAlignment = alignmentTypes.left,\n      alignmentOverride,\n      enableFullscreen,\n      ariaLabels,\n      ...props\n    } = this.props;\n    const alignMenuClass =\n      defaultAlignmentClassName[alignmentOverride] ||\n      defaultAlignmentClassName[menuAlignment] ||\n      alignLeft;\n    const autoAlign = autoAlignments[menuAlignment]\n      ? 'dropdown-menu-autoalign'\n      : null;\n    const mobileFullscreen = enableFullscreen ? 'full-screen' : null;\n\n    return (\n      <div\n        className={ classNames(\n          'dropdown-menu',\n          alignMenuClass,\n          autoAlign,\n          mobileFullscreen\n        ) }\n        ref={ r => (this.wrapper = r) }\n        role='listbox'>\n        <div\n          className='dropdown-overlay'\n          onClick={ props.toggle }\n          onKeyDown={ props.toggle }\n          role='button'\n          tabIndex={ -1 }\n        />\n        <div className='dropdown-menu-background'>\n          <Button\n            className='dropdown-close'\n            design={ 'inline' }\n            onClick={ props.toggle }\n            aria-label={ ariaLabels.close }\n            icon={ <Close /> }\n          />\n          <div className='dropdown-list'>{this.children()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @public\n */\nDropdownMenu.propTypes = {\n  /** Force alignment of dropdown menu */\n  alignmentOverride: PropTypes.oneOf([\n    alignmentTypes.left,\n    alignmentTypes.right\n  ]),\n  /** Specify alignment of dropdown menu (when possible) */\n  menuAlignment: menuAlignmentPropType,\n  /** Boolean whether the dropdown menu is full screen for mobile devices */\n  enableFullscreen: PropTypes.bool,\n  /** onChange event handler */\n  onChange: PropTypes.func,\n  /** onKeyDown event handler */\n  onKeyDown: PropTypes.func,\n  /** Array of selected dropdown item indexes */\n  selected: PropTypes.array,\n  /** Function that toggles the menu open and closed */\n  toggle: PropTypes.func,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Label for mobile-view menu close button */\n    close: PropTypes.string\n  }),\n  /** Type of dropdown items in the menu */\n  type: PropTypes.string,\n  /** children to be rendered */\n  children: PropTypes.node\n};\n\n/**\n * Default props for DropdownMenu.\n *\n * @enum {Object} defaultProps\n * @public\n */\nDropdownMenu.defaultProps = {\n  menuAlignment: alignmentTypes.left,\n  toggle: () => {},\n  ariaLabels: {\n    close: 'Close'\n  },\n  selected: [],\n  type: 'button'\n};\n\nexport default DropdownMenu;\n","import React from 'react';\nimport DropdownItem from './dropdown-item';\n\n/**\n * Utility method to extract props from Dropdown Menu object\n *\n * @param {React.ReactElement} wrapper Dropdown Menu component\n * @returns {Object} props from Dropdown Menu component\n * @private\n */\nfunction extractWrapperProps(wrapper) {\n  const listener = wrapper.props.type === 'multiselect' ? 'onChange' : 'onClick';\n  const selected = wrapper.props.selected || [];\n\n  return { listener, selected };\n}\n\n/**\n * Utility method to extract item state information.\n *\n * @param {React.ReactElement} wrapper Dropdown Menu component\n * @param {React.ReactElement} item Dropdown Item component\n * @param {Array} selected Array of selected items\n * @param {int} index Index of Dropdown Item\n * @returns {Object} active and isSelected states\n * @private\n */\nfunction getItemState(wrapper, item, selected, index) {\n  let active;\n  let isSelected;\n  if (wrapper.props.type === 'multiselect' || wrapper.props.keyboardSelectionIndex !== -1) {\n    isSelected = !!~selected.indexOf(index);\n    if (index === wrapper.props.keyboardSelectionIndex && !item.props.disabled) {\n      active = true;\n    }\n  } else {\n    active = !!~selected.indexOf(index);\n  }\n\n  active = item.props.active || active;\n\n  return { active, isSelected };\n}\n\n/**\n * Returns a React clone of the specified `item` attaching selection behavior\n * using closure scope of onChange or onClick handler(s) passed through to the item.\n *\n * @param  {Object} wrapper Full references to parent DropdownMenu.\n * @param  {React.Element} item React element representing the {Dropdown,Checkbox}Item child.\n * @param  {Number} index Zero-based index in the normalized set of {Dropdown,Checkbox}Items.\n * @returns {React.Element} Cloned item with selection behavior\n * @public\n */\nexport default function cloneItem(wrapper, item, index) {\n  if (!React.isValidElement(item)) { return item; }\n\n  //\n  // Enhance the DropdownItem to work as a selectable item. Active will\n  // change the item's appearance to selected. The href is required to display\n  // correct mouse pointers when each item is hovered. Multiselect requires onChange\n  // which will be triggered from a click on the label. Thus both clicks on the label\n  // and checkbox result in an onChange. Thus properly toggling the input checkbox.\n  //\n  const itemProps = item.props;\n  const { listener, selected } = extractWrapperProps(wrapper);\n\n  //\n  // This is our opportunity to determine selected and active state\n  // before we clone the element. It is easiest to track this state at the\n  // menu instead of the individual DropdownItem instances.\n  //\n  const { active, isSelected } = getItemState(wrapper, item, selected, index);\n\n  // If wrapper is dropdown column, get the menu reference to set the dropdownItem reference\n  const menuRef = (wrapper.props.menuRef) || wrapper;\n\n  //\n  // For type='base', type='primary', etc. Pass-thru \"active\" set on the individual\n  // item props, if it exists. Otherwise default to the internal selection logic.\n  //\n  if ((!~wrapper.props.type.indexOf('select') && wrapper.props.type !== 'tripledot') && wrapper.props.type !== 'custom' || item.type !== DropdownItem) {\n    return React.cloneElement(item, { active, ref: (r) => { menuRef.dropdownItem = r; } });\n  }\n\n  return React.cloneElement(item, {\n    isSelected,\n    active,\n    name: wrapper.props.name,\n    ref: (r) => { menuRef.dropdownItem = r; },\n    type: wrapper.props.type,\n    href: itemProps.href || '#',\n    [listener]: (event) => {\n      if (itemProps.disabled || listener === 'onClick') event.preventDefault();\n      if (itemProps.disabled) return;\n\n      wrapper.props.onChange(\n        { itemIndex: index, active: !active, ...itemProps },\n        event,\n        itemProps[listener]\n      );\n    }\n  });\n}\n","import validateComponents from 'react-component-validator';\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Base, { types } from './dropdown';\nimport { classNames, ClickOutside, scrollIntoViewIfNeeded } from '@ux/component-utilities';\n\n//\n// Import all child components.\n//\nimport DropdownControl from './dropdown-control';\nimport DropdownDivider from './dropdown-divider';\nimport DropdownHeader from './dropdown-header';\nimport DropdownMenu, {\n  alignmentTypes,\n  autoAlignments,\n  menuAlignmentPropType\n} from './dropdown-menu';\nimport DropdownItem from './dropdown-item';\n\n/**\n * Track of the current selected value with a hidden input element. Allowing\n * simple POST requests of forms.\n *\n * @class DropdownValue\n * @private\n */\nclass DropdownValue extends Component {\n  render() {\n    const allowedTypes = ['select', 'tripledot', 'custom'];\n    if (!allowedTypes.includes(this.props.type)) {\n      return null;\n    }\n\n    return <input { ...this.props } type='hidden' readOnly />;\n  }\n}\n\n/**\n * PropType validation\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownValue.propTypes = {\n  /** Type of dropdown */\n  type: PropTypes.oneOf(types)\n};\n\n/**\n * Display a Dropdown that works standalone button, as select or multiselect.\n *\n * @displayName Dropdown (Web)\n * @class Dropdown\n * @extends React.Component\n * @public\n */\nclass DropdownComponent extends Base {\n  constructor() {\n    super(...arguments);\n    this.hideHandle = null;\n    this.selectItem = this.selectItem.bind(this);\n    this.toggleBackground = this.toggleBackground.bind(this);\n    this.element = React.createRef();\n  }\n\n  /**\n   * Remove the attached click event listener.\n   *\n   * @private\n   */\n  componentWillUnmount() {\n    document.removeEventListener('click', this.hideHandle || this.hide);\n    this.hideHandle = null;\n  }\n\n  /**\n   * Scroll to the active item.\n   *\n   * @param {object} prevProps - Previous props before update\n   * @param {object} prevState - Previous state before update\n   * @private\n   */\n  componentDidUpdate(prevProps, prevState) {\n    super.componentDidUpdate(prevProps);\n    const activeItem = this.element.current && this.element.current.querySelector('.active');\n    const { open } = this.state;\n\n    if (open && open !== prevState.open) {\n      const { ...bounds } = this.getElementBounds();\n      let newState = this.getHorizontalRender(bounds);\n      newState = {\n        ...newState,\n        ...this.getVerticalRender(bounds)\n      };\n\n      if (Object.keys(newState).length > 0) {\n        this.setState(newState);\n      }\n    }\n\n    if (open && activeItem) {\n      scrollIntoViewIfNeeded(activeItem);\n    }\n  }\n\n  /**\n   * Fetches all element bounds to necessary calculations of display\n   * @private\n   * @returns {object} element bounds\n   */\n  getElementBounds() {\n    // Viewport Bounds\n    const viewportBounds = {\n      x: window.pageXOffset,\n      y: window.pageYOffset,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    // Main Dropdown Element\n    const elementBounds = this.element.current && this.element.current.getBoundingClientRect();\n\n    // Dropdown Menu Element\n    const menuBounds =\n      this.menuElement &&\n      this.menuElement.wrapper &&\n      this.menuElement.wrapper.getBoundingClientRect();\n\n    // Label Element (if one exists)\n    const labelBounds =\n      this.componentLabel && this.componentLabel.getBoundingClientRect();\n\n    // Menu Item Element\n    const menuItemRef =\n      this.menuElement &&\n      this.menuElement.dropdownItem &&\n      this.menuElement.dropdownItem.getRef &&\n      this.menuElement.dropdownItem.getRef();\n\n    const menuItemBounds = menuItemRef && menuItemRef.getBoundingClientRect();\n\n    // Get Dropdown Item height\n    const itemHeight = (menuItemBounds && menuItemBounds.height) || 45;\n\n    return {\n      viewportBounds,\n      elementBounds,\n      menuBounds,\n      labelBounds,\n      itemHeight\n    };\n  }\n\n  /**\n   * Compute vertical spacing for menu and determine whether to show above or below the dropdown control.\n   *\n   * @param {object} bounds - Object containing element bounds calculated in getElementBounds()\n   * @returns {obbject} Temporary updated state object\n   * @private\n   */\n  getVerticalRender(bounds) {\n    // Temporary object to prevent multiple state updates\n    const newState = {};\n    const {\n      viewportBounds,\n      elementBounds,\n      menuBounds,\n      labelBounds,\n      itemHeight\n    } = bounds;\n\n    const hasLabel = labelBounds && labelBounds.height > 0;\n    if (this.state.hasLabel !== hasLabel) {\n      newState.hasLabel = hasLabel;\n    }\n\n    if (elementBounds) {\n      // Determine to show the menu above or below\n      const menuBottomBound =\n        elementBounds.top +\n        elementBounds.height +\n        menuBounds.height -\n        itemHeight / 2;\n      const overflowBelow = viewportBounds.height < menuBottomBound;\n      const spaceAbove = elementBounds.top - menuBounds.height > 0;\n      const showUp = overflowBelow && spaceAbove;\n\n      if (this.state.showUp !== showUp) {\n        newState.showUp = showUp;\n      }\n    }\n\n    return newState;\n  }\n\n  /**\n   * Compute horizontal spacing for menu and determine whether to show aligned left or right to the dropdown control.\n   *\n   * @param {object} bounds - Object containing menu bounds calculated in getElementBounds()\n   * @returns {object} Temporary updated state object\n   * @private\n   */\n  getHorizontalRender(bounds) {\n    const newState = {};\n    if (autoAlignments[this.props.menuAlignment] || !this.props.menuAlignment) {\n      const { elementBounds, menuBounds, viewportBounds } = bounds;\n      if (elementBounds && menuBounds) {\n        const left =\n          elementBounds.right +\n          viewportBounds.x -\n          window.document.documentElement.clientLeft -\n          menuBounds.width;\n        const right =\n          elementBounds.left +\n          viewportBounds.x -\n          window.document.documentElement.clientLeft +\n          menuBounds.width;\n\n        let alignmentOverride;\n        // The element needs to be right aligned if it's too close or outside the bounds of the viewport\n        // and it it small enough to fit inside a viewport, if it's too big we'll leave the default\n        if (\n          viewportBounds.width - right < 10 &&\n          menuBounds.width < viewportBounds.width\n        ) {\n          alignmentOverride = alignmentTypes.right;\n        } else if (left < 10) {\n          // Only force different than the default if the leftmost bounds is outside or too close to the left side of the viewport\n          alignmentOverride = alignmentTypes.left;\n        }\n\n        // Compare with current state\n        if (this.state.alignmentOverride !== alignmentOverride) {\n          newState.alignmentOverride = alignmentOverride;\n        }\n      }\n    }\n    return newState;\n  }\n\n  toggleBackground(isOpen) {\n    if (this.props.enableFullscreen) {\n      if (isOpen) {\n        document.body.classList.add('dropdown-open');\n      } else {\n        document.body.classList.remove('dropdown-open');\n      }\n    }\n\n    const { open, selected } = this.state;\n    const { required } = this.props;\n    if (!open && selected.length === 0 && required) {\n      this.setState({\n        error: true\n      });\n    } else if (selected.length > 0 && required) {\n      this.setState({\n        error: false\n      });\n    }\n  }\n\n  /**\n   * Extract DropdownControl from all children.\n   *\n   * @param {React.Element[]} children - React elements.\n   * @returns {React.Element} DropdownControl with children.\n   * @private\n   */\n  control(children) {\n    const {\n      placeholder,\n      type,\n      disabled,\n      toggleIcon,\n      content,\n      size,\n      merch,\n      id,\n      tabIndex\n    } = this.props;\n    const dropdownControl = children.filter(\n      child => child.type === DropdownControl\n    )[0] || <DropdownControl />;\n    return React.cloneElement(dropdownControl, {\n      ['aria-labelledby']: `${id}-label`,\n      children:\n        dropdownControl.props.children ||\n        this.getSelectedItem(children) ||\n        placeholder,\n      hasPlaceholder: !!(\n        !dropdownControl.props.children &&\n        !this.getSelectedItem(children) &&\n        placeholder\n      ),\n      key: 'control',\n      toggle: this.show,\n      open: this.state.open,\n      type,\n      onKeyDown: this.keyDown.bind(this),\n      disabled,\n      toggleIcon,\n      content,\n      size,\n      merch,\n      tabIndex\n    });\n  }\n\n  /**\n   * Returns all children that are not of type DropdownControl.\n   *\n   * @param {React.Element[]} children - React elements.\n   * @returns {React.Element[]} React elements.\n   * @private\n   */\n  items(children) {\n    return children.filter(child => {\n      return (\n        child.type !== DropdownControl &&\n        child.type !== DropdownHeader &&\n        child.type !== DropdownDivider\n      );\n    });\n  }\n\n  /**\n   * Render Dropdown component.\n   *\n   * @returns {React.Element} div element with Dropdown.\n   * @private\n   */\n  render() {\n    const {\n      keyboardSelectionIndex,\n      open,\n      showUp,\n      hasLabel,\n      error\n    } = this.state;\n    const props = {\n      ...this.props,\n      keyboardSelectionIndex,\n      onChange: this.selectItem,\n      onToggle: this.toggle\n    };\n    const select = ~props.type.indexOf('select');\n    const tripledot = props.type === 'tripledot';\n    // Use the alignment if set, otherwise tripledot prefersRight by default,\n    // Everything else should left align\n    props.menuAlignment =\n      props.menuAlignment ||\n      (tripledot ? alignmentTypes.preferRight : alignmentTypes.left);\n    const children = React.Children.toArray(props.children);\n    const disabled = props.disabled;\n    const title = (props.label || props.required) && (\n      <Fragment>\n        {props.label && (\n          <label\n            id={ `${props.id}-label` }\n            key='label'\n            ref={ r => {\n              this.componentLabel = r;\n            } }>\n            {props.label}\n          </label>\n        )}\n        {props.required && <span className='text-danger'>*</span>}\n      </Fragment>\n    );\n    const className = classNames(\n      props.className,\n      {\n        'ux-select-dropdown': select\n      },\n      'dropdown', {\n        'triple-dot-dropdown btn btn-link': tripledot,\n        'dropdown-disabled disabled': disabled,\n        open,\n        'menu-up': showUp,\n        'has-label': hasLabel,\n        'full-screen': this.props.enableFullscreen,\n        error\n      }\n    );\n\n    const ElementType = props.elementType;\n\n    return (\n      <ClickOutside targetRef={ this.element } onClick={ this.hide } >\n        <ElementType\n          ref={ this.element }\n          id={ props.id }\n          className={ className }\n          role='menubar'>\n          {title}\n          {this.control(children)}\n          <DropdownValue\n            key='value'\n            type={ props.type }\n            value={ props.value }\n            name={ props.name }\n          />\n          <DropdownMenu\n            key='menu'\n            { ...props }\n            ref={ r => {\n              this.menuElement = r;\n            } }\n            toggle={ this.toggle }\n            ariaLabels={{\n              close: props.ariaLabels.close\n            }}\n            selected={ this.selected }\n            alignmentOverride={ this.state.alignmentOverride }\n            keyboardSelectionIndex={ this.state.keyboardSelectionIndex }>\n            {children.filter(child => child.type !== DropdownControl)}\n          </DropdownMenu>\n          {error && props.required && (\n            <span className='form-error' role='alert'>\n              {props.required}\n            </span>\n          )}\n        </ElementType>\n      </ClickOutside>\n    );\n  }\n}\n\n/**\n * Default to button dropdown.\n *\n * @enum {Object} defaultProps\n * @public\n */\nDropdownComponent.defaultProps = {\n  ...Base.defaultProps,\n  type: 'button',\n  elementType: 'div',\n  enableFullscreen: true,\n  ariaLabels: {\n    close: 'Close'\n  }\n};\n\n/**\n * Define properties and validate the type of children that are passed\n * to the Dropdown.\n *\n * @enum {Object} propTypes\n * @public\n */\nDropdownComponent.propTypes = {\n  /** Common dropdown props */\n  ...Base.propTypes,\n  /** Developer indicates tabIndex */\n  tabIndex: PropTypes.oneOf([-1, 0]),\n  /** ID attribute for the dropdown container */\n  id: PropTypes.string,\n  /** Type of the dropdown */\n  type: PropTypes.oneOf(types),\n  /** Wrapper element type for the dropdown */\n  elementType: PropTypes.string,\n  /** Alignment of the dropdown menu */\n  alignment: menuAlignmentPropType,\n  /** Boolean whether the dropdown menu is fullscreen (mobile only) */\n  enableFullscreen: PropTypes.bool,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Label for mobile-view menu close button */\n    close: PropTypes.string\n  }),\n  /** Children components of a dropdown. Can be a DropdownControl,\n   *  DropdownDivider, DropdownHeader, or DropdownItem */\n  children: validateComponents([\n    DropdownControl,\n    DropdownItem,\n    DropdownDivider,\n    DropdownHeader\n  ]),\n  /** Error message to show if the dropdown is required */\n  required: PropTypes.oneOfType([PropTypes.node, PropTypes.bool])\n};\n\n//\n// Attach childs to the main Component for availability without ES6 imports.\n//\nDropdownComponent.DropdownControl = DropdownControl;\nDropdownComponent.DropdownDivider = DropdownDivider;\nDropdownComponent.DropdownHeader = DropdownHeader;\nDropdownComponent.DropdownItem = DropdownItem;\n\n//\n// Export the Class and related children.\n//\nconst Dropdown = DropdownComponent;\n\nexport {\n  Dropdown as default,\n  DropdownControl,\n  DropdownDivider,\n  DropdownHeader,\n  DropdownItem\n};\n","import { Validate } from 'react-validation-context';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\n/**\n * Base functions each platforms' Form component uses.\n *\n * @displayName Base\n * @class Base\n * @public\n */\nexport default class Base extends Component {\n  constructor() {\n    super(...arguments);\n\n    //\n    // Form is initially valid\n    //\n    this.state = {\n      valid: true\n    };\n    this.onValidChange = this.onValidChange.bind(this);\n  }\n\n  /**\n   * The form is valid if there are no invalid items in its context\n   *\n   * @param {Object} valids Collection of entities to check.\n   * @returns {boolean} Sum of elements validity.\n   * @private\n   */\n  validate(valids) {\n    return Object.keys(valids).every(k => valids[k] !== false);\n  }\n\n  /**\n   * Wrap onValidChange to set this.state.isValid\n   *\n   * @param {string} name Name of the validator.\n   * @param {boolean} valid Validity.\n   * @private\n   */\n  onValidChange(name, valid) {\n    const props = this.props;\n\n    if (props.onValidChange) {\n      props.onValidChange(...arguments);\n    }\n\n    this.setState({ valid });\n  }\n\n  /**\n   * Render validated form.\n   *\n   * @returns {ReactElement} The rendered template.\n   * @public\n   */\n  render({ children }) {\n    return (\n      <Validate name={ this.props.id } validate={ this.validate } onValidChange={ this.onValidChange }>\n        { children }\n      </Validate>\n    );\n  }\n}\n\n/**\n * Default properties.\n *\n * @type {Object}\n * @private\n */\nBase.defaultProps = {\n  id: ''\n};\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nBase.propTypes = {\n  /** Contents of the Form */\n  children: PropTypes.node,\n  /** Form id */\n  id: PropTypes.string,\n  /** Display child elements inline */\n  inline: PropTypes.bool,\n  /** Change handler triggered on valid changes */\n  onValidChange: PropTypes.func,\n  /** Submit handler called when the form is submitted */\n  onSubmit: PropTypes.func\n};\n","import PropTypes from 'prop-types';\nimport rip from 'rip-out';\nimport React from 'react';\nimport { classNames } from '@ux/component-utilities';\nimport Base from './form';\n\n/**\n * Form component for rendering UXCore smart forms.\n *\n * @displayName Form (Web)\n * @class Form\n * @public\n */\nexport default class Form extends Base {\n  /**\n   * Figure out if the form contains children elements.\n   *\n   * @param {array} children React children.\n   * @returns {boolean} Indication if the children contain a upload field.\n   * @private\n   */\n  uploader(children) {\n    return React.Children.toArray(children).some(child => {\n      if (!child.type || !child.props) return false;\n\n      if (child.type === 'input' && child.props.type === 'file') {\n        return true;\n      }\n\n      return this.uploader(child.props.children);\n    });\n  }\n\n  /**\n   * Return the encType of the form based on method and children.\n   *\n   * @param {string} method Uppercased RESTful method.\n   * @returns {string} Encoding.\n   * @private\n   */\n  encType(method) {\n    return method === 'POST' && this.uploader(this.props.children)\n      ? 'multipart/form-data'\n      : 'application/x-www-form-urlencoded';\n  }\n\n  /**\n   * Render the form element.\n   *\n   * @returns {ReactElement} The rendered template.\n   * @public\n   */\n  render() {\n    const { onSubmit, inline, className, encType, ...props } = this.props;\n    const formprops = rip(props, 'onValidChange');\n    const method = props.method.toUpperCase();\n    const attributes = {\n      method,\n      encType: encType || this.encType(method),\n      className: classNames(className, {\n        'form-inline': inline\n      }),\n      onSubmit: event => {\n        //\n        // Prevent form submission if the form does not validate\n        //\n        if (this.state.valid === false) {\n          event.preventDefault();\n        } else if (onSubmit) {\n          onSubmit(event);\n        }\n      }\n    };\n\n    return super.render({ children: <form { ...formprops } { ...attributes }/> });\n  }\n}\n\n/**\n * Default properties.\n *\n * @type {Object}\n * @private\n */\nForm.defaultProps = {\n  ...Base.defaultProps,\n  method: 'POST'\n};\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nForm.propTypes = {\n  ...Base.propTypes,\n  /** HTTP method to use, defaults to POST */\n  method: PropTypes.string,\n  /** Encoding used for form-data */\n  encType: PropTypes.string,\n  /** Classes applied to the form */\n  className: PropTypes.string\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\n\nconst DEFAULT_ARIA_LABELS = {\n  spinnerName: 'Your content is loading'\n};\n\n/**\n * Display a spinner.\n *\n * @displayName Spinner (Web)\n * @class Spinner\n * @public\n */\nexport default class Spinner extends Component {\n  /**\n   * Render the actual component.\n   *\n   * @returns {Component} The actual spinner component.\n   * @private\n   */\n  render() {\n    const { size, ariaLabels } = this.props;\n    const className = classNames('ux-spinner', {\n      [`ux-spinner-${size}`]: size\n    });\n\n    return (\n      <svg className={ className } aria-label={ ariaLabels.spinnerName } xmlns='http://www.w3.org/2000/svg' viewBox='0 0 72 72'>\n        <circle className='bg-spinner' cx='36' cy='36' r='31' fill='none' startOffset='0' />\n        <circle className='fg-spinner'  cx='36' cy='36' r='31' fill='none'  />\n      </svg>\n    );\n  }\n}\n\nSpinner.propTypes = {\n  /** Classes to be applied to the spinner */\n  className: PropTypes.string,\n  /** Defines the size of the spinner */\n  size: PropTypes.PropTypes.oneOf(['sm', 'md', 'lg']).isRequired,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for spinner */\n    spinnerName: PropTypes.string\n  })\n};\n\n/**\n * Default properties.\n *\n * @type {Object}\n * @private\n */\nSpinner.defaultProps = {\n  size: 'md',            // Default size.\n  ariaLabels: DEFAULT_ARIA_LABELS,\n  ...{ className: 'spin-center' }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '@ux/spinner';\n\n/**\n * MessageOverlay Component.\n *\n * @displayName Message Overlay (Web)\n * @class MessageOverlay\n * @public\n */\nexport default class MessageOverlay extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.state = {\n      minHeight: 0\n    };\n  }\n\n  /**\n   * The component did mount in the parent container. Store the initial\n   * minHeight styling of the parent.\n   *\n   * @private\n   */\n  componentDidMount() {\n    this.parentMinHeight = getComputedStyle(this.overlay).getPropertyValue('min-height');\n    typeof document !== 'undefined' && document.addEventListener('resize', this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  /**\n   * Remove event listeners and restore the initial minHeight of the parent.\n   *\n   * @private\n   */\n  componentWillUnmount() {\n    this.overlay.style.minHeight = this.parentMinHeight;\n    document.removeEventListener('resize', this.updateDimensions);\n  }\n\n  /**\n   * When the window resizes we need to make sure we can still see everything\n   * Note: 12 pixels margin around the message container minimum\n   *\n   * @private\n   */\n  updateDimensions() {\n    if (!this.props.show) return;\n\n    this.setState({ minHeight: this.message.getBoundingClientRect().height });\n  }\n\n  /**\n   * When the overlay is interacted with, do not let the event bubble\n   *\n   * @param {SyntheticEvent} event - React event wrapper for the user event\n   * @private\n   */\n  catchBubbledEvents(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  /**\n   * Render the message overlay.\n   *\n   * @returns {ReactElement} the entire message overlay if props.show\n   * @public\n   */\n  renderMessage() {\n    const props = this.props;\n\n    if (!props.show) return;\n\n    return (\n      <div className='ux-overlay' role='presentation' onClick={ this.catchBubbledEvents } onKeyDown={ this.catchBubbledEvents }>\n        <div ref={ message => { this.message = message; } } className='ux-message'>\n          { props.progress && <Spinner className='ux-message-spinner' size='sm' /> }\n          { props.message }\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render the react element for the message overlay\n   *\n   * @returns {ReactElement} the entire component\n   * @public\n   */\n  render() {\n    const { children, show, wrapperStyle } = this.props;\n    const style = {\n      minHeight: show ? this.state.minHeight : this.parentMinHeight,\n      ...wrapperStyle\n    };\n\n    return (\n      <div style={ style } className='ux-overlay-wrapper' ref={ el => { this.overlay = el; } }>\n        { children }\n        { this.renderMessage() }\n      </div>\n    );\n  }\n}\n\n/**\n * Initial properties.\n *\n * @type {Object} default properties.\n * @public\n */\nMessageOverlay.defaultProps = {\n  message: '',\n  progress: false,\n  show: true\n};\n\n/**\n * Allowed properties.\n *\n * @type {Object} properties.\n * @public\n */\nMessageOverlay.propTypes = {\n  /** Contents of an overlay */\n  children: PropTypes.node,\n  /** The text, HTML or React component to render in the message overlay. Default is empty, meaning no content. */\n  message: PropTypes.node,\n  /** Boolean of whether the message overlay should be shown or hidden. Defaults to true. */\n  show: PropTypes.bool,\n  /** Whether or not to show the progress spinner with the text (appears before the text). Defaults to true */\n  progress: PropTypes.bool,\n  /** Styles to apply to the overlay wrapper */\n  wrapperStyle: PropTypes.object\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nconst undef = void 0;\n\nconst DEFAULT_ARIA_LABELS = {\n  close: 'Close modal'\n};\n\n/**\n * Platform independent base class for platform specific implementations to inherit from.\n *\n * @displayName Base\n * @extends React.Component\n * @class Base\n * @public\n */\nexport default class Base extends Component {\n  constructor(props = {}) {\n    super(...arguments);\n\n    this.state = {\n      open: props.open\n    };\n\n    this.close = this.close.bind(this);\n    this.open = this.open.bind(this);\n    this.onBackgroundClick = this.onBackgroundClick.bind(this);\n  }\n\n  /**\n   * Remove all added information.\n   *\n   * @private\n   */\n  componentWillUnmount() {\n    this.close();\n  }\n\n  /**\n   * On change of `open` prop, update internal state\n   *\n   * @param {Object} prevProps - Object of Previous Props\n   * @private\n   */\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.open !== 'undefined' &&\n      prevProps.open !== this.props.open\n    ) {\n      const action = this.props.open ? this.open : this.close;\n      action();\n    }\n  }\n\n  /**\n   * Open the modal dialog again.\n   *\n   * @public\n   */\n  open() {\n    this.setState({\n      open: true\n    }, () => {\n      if (this.componentDidMount) {\n        this.componentDidMount();\n      }\n    });\n  }\n\n  /**\n   * Close the dialog\n   *\n   * @public\n   */\n  close() {\n    const { state, props } = this;\n\n    //\n    // Return early if the dialog is not open. This prevents the onClose handler\n    // from being called twice if the modal is closed normally.\n    //\n    if (state.open === false) {\n      return;\n    }\n\n    this.setState({\n      open: false\n    });\n\n    //\n    // Optionally call the close callback that has been provided to the modal\n    // dialog.\n    //\n    if (typeof props.onClose === 'function') {\n      props.onClose(this);\n    }\n  }\n\n  /**\n   * Closes this instance unless disableAutoClose it truthy\n   *\n   * @public\n   */\n  onBackgroundClick() {\n    if (!this.props.disableAutoClose) {\n      this.close();\n    }\n  }\n\n  baseRender(Header, Nav, Body, Footer) {\n    const { props } = this;\n\n    const header = props.header || (\n      <Header\n        key='header'\n        onClick={ props.closeButton && this.close }\n        disableAutoClose={ props.disableAutoClose }\n        ariaLabels={ props.ariaLabels }>\n        { props.title }\n      </Header>\n    );\n\n    const nav = props.nav ? <Nav key='nav'>{props.nav}</Nav> : undef;\n    const body = props.body || <Body key='body'>{props.children}</Body>;\n    const footer = props.footer ? (\n      <Footer key='footer'>{props.footer}</Footer>\n    ) : (\n      undef\n    );\n\n    return [header, nav, body, footer].filter(Boolean);\n  }\n}\n\n/**\n * Enforce properties.\n *\n * @type {Object}\n * @api private\n */\nBase.propTypes = {\n  /** Enables or disables animations */\n  animate: PropTypes.bool,\n  /** Include or exclude the backdrop*/\n  backdrop: PropTypes.bool,\n  /** Include or exclude a close button in the default header */\n  closeButton: PropTypes.bool,\n  /** Will disable automatic closing via the ESC key or clicking on the backdrop */\n  disableAutoClose: PropTypes.bool,\n  /** The location where the backdrop needs to be added */\n  target: PropTypes.object,\n  /** The root document to attach the tooltip, defaults to document.documentElement. Used to support Shadow DOM */\n  root: PropTypes.node,\n  /** Callback to be fired when the modal is closed */\n  onClose: PropTypes.func,\n  /** Dictates if the modal is open */\n  open: PropTypes.bool,\n  /** Classes to be applied to the modal */\n  className: PropTypes.string,\n  /** A custom header to be rendered */\n  header: PropTypes.node,\n  /** Text to be displayed in the modal's header */\n  title: PropTypes.string,\n  /** Content of the modal footer */\n  footer: PropTypes.node,\n  /** The content of the modal */\n  body: PropTypes.node,\n  /** Custom navigation to be rendered */\n  nav: PropTypes.node,\n  /** Custom modal style to be rendered */\n  style: PropTypes.object,\n  /** Child elements */\n  children: PropTypes.node,\n  /** Screenreader labels */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for close button */\n    close: PropTypes.string\n  })\n};\n\nBase.defaultProps = {\n  animate: true,\n  backdrop: true,\n  closeButton: true,\n  disableAutoClose: false,\n  open: true,\n  style: {},\n  ariaLabels: DEFAULT_ARIA_LABELS\n};\n","import Close from '@ux/icon/x';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@ux/button';\n\n\nconst DEFAULT_ARIA_LABELS = {\n  close: 'Close modal'\n};\n\n/**\n * Representation of a Header in the Dialog.\n */\n\nexport default function ModalHeader({ children, onClick, ariaLabels = DEFAULT_ARIA_LABELS }) {\n  const close = typeof onClick === 'function' && (\n    <Button\n      aria-label={ ariaLabels.close }\n      className='modal-close'\n      data-action='close'\n      data-dismiss='modal'\n      design='inline'\n      onClick={ onClick }\n      icon={ <Close /> }\n    />\n  );\n\n  return (\n    <div className='modal-header'>\n      {close}\n      <h2 className='modal-title'>{children}</h2>\n    </div>\n  );\n}\n\nModalHeader.propTypes = {\n  /** Header function to close the modal or boolean to hide it */\n  onClick: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.bool\n  ]),\n  /** aria labels */\n  ariaLabels: PropTypes.object,\n  /** Child elements */\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Representation of a footer in the Dialog.\n * @param {object} props props\n * @param {React.ReactChildren} children react children elements\n * @returns {React.ReactElement} ModalNav\n */\nexport default function ModalNav({ children }) {\n  return <div className='modal-nav'>{children}</div>;\n}\n\nModalNav.propTypes = {\n  /** Child elements */\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n","/* eslint react/prop-types: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Representation of a body in the Dialog.\n * @returns {React.ReactElement} ModalBody\n */\nexport default function ModalBody({ children }) {\n  return <div className={ 'modal-body' }>{children}</div>;\n}\n\nModalBody.propTypes = {\n  /** Child elements */\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Representation of a footer in the Dialog.\n * @returns {React.ReactElement} ModalFooter\n */\nexport default function ModalFooter({ children }) {\n  return <div className='modal-footer'>{children}</div>;\n}\n\nModalFooter.propTypes = {\n  /** Child elements */\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n","import React, { createRef } from 'react';\nimport Base from './modal';\nimport Header from './modal-header';\nimport Nav from './modal-nav';\nimport Body from './modal-body';\nimport Footer from './modal-footer';\nimport { classNames, ClickOutside } from '@ux/component-utilities';\n\n/**\n * Placeholder component to handle the rendering of the modal dialog.\n *\n * @constructor\n * @public\n */\nclass ModalComponent extends Base {\n  constructor(props = {}) {\n    super(...arguments);\n\n    this.backdrop = null;\n    this.startTarget = null;\n    this.target = props.target;\n    this.keydown = this.keydown.bind(this);\n    this.onBackgroundClick = this.onBackgroundClick.bind(this);\n    this.modalDialog = createRef();\n  }\n\n  /**\n   * The component is mounted in the DOM.\n   *\n   * @private\n   */\n  // eslint-disable-next-line max-statements, complexity\n  componentDidMount() {\n    if (this.state.open === false) {\n      return;\n    }\n\n    const { root } = this.props;\n    const rootElement = (this.root = root || this.modalOuter.getRootNode());\n    const target = (this.target =\n      this.target || rootElement.querySelector('body') || rootElement);\n\n    //\n    // Store the previous element so we can return focus after modal dialog closes.\n    //\n    this.previousElement = document.activeElement;\n    while (\n      this.previousElement &&\n      typeof this.previousElement.focus !== 'function'\n    ) {\n      this.previousElement = this.previousElement.parentElement;\n    }\n\n    if (this.modalDialog.current) {\n      this.dialogButton = this.modalDialog.current.querySelector(\n        '.modal button[data-action=\"close\"]'\n      );\n    }\n\n    document.addEventListener('keydown', this.keydown);\n\n    if (this.modalDialog.current) {\n      const focusableEls = this.modalDialog.current.querySelectorAll(\n        'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n      );\n      this.focusableEls = Array.prototype.slice.call(focusableEls);\n      this.firstFocusableEl = this.focusableEls[0];\n      this.lastFocusableEl = this.focusableEls[this.focusableEls.length - 1];\n    }\n\n    if (this.dialogButton) {\n      this.dialogButton.focus();\n    }\n\n    //\n    // Check if we need to render the backdrop correctly.\n    //\n    if (this.backdrop || this.props.backdrop === false) return;\n\n    //\n    // Generate the placeholder element which is appended to the DOM so we can\n    // generate the modal dialog content somewhere else than in our rendered\n    // context.\n    //\n    const backdrop = this.backdrop = document.createElement('div');\n    backdrop.classList.add(\n      'modal-backdrop',\n      this.props.animate !== false && 'fade'\n    );\n\n    //\n    // Add Linaria style wrapper to HTML to target to ensure the 'global'\n    // backdrop element is styled. Also add `modal-open` to the target.\n    //\n    document.documentElement.classList.add('modal-open');\n\n    target.appendChild(backdrop);\n    backdrop.addEventListener('click', this.onBackgroundClick, false);\n\n    //\n    // Now that the element is appended to the body we can fade the backdrop in\n    // IF there is reason to animate.\n    //\n    if (this.props.animate !== false) {\n      backdrop.classList.add('show');\n    }\n\n    this.insideMouseDown = document.addEventListener('mousedown', e => {\n      this.startTarget = e.target;\n    });\n\n    //\n    // We dont want to suppress clicks inside the modal body\n    // otherwise things that use @ux/component.outside() will never get the event\n    // but we do want to close the modal if the event is outside the modal body\n    //\n    this.hideHandle = (event, fn) => {\n      if (event.target !== this.modalOuter) return;\n      if (event.target !== this.startTarget) return;\n\n      if (this.props.disableAutoClose) return;\n      document.removeEventListener('click', fn);\n      this.close();\n    };\n  }\n\n  /**\n   * Remove the dialog from the DOM.\n   *\n   * @public\n   */\n  // eslint-disable-next-line max-statements\n  close() {\n    if (this.state.open === false) {\n      return;\n    }\n\n    document.removeEventListener('keydown', this.keydown);\n\n    if (this.hideHandle) {\n      document.removeEventListener('click', this.hideHandle);\n      this.hideHandle = null;\n    }\n\n    document.documentElement.classList.remove('modal-open');\n\n\n    if (this.backdrop) {\n      this.backdrop.removeEventListener('click', this.onBackgroundClick, false);\n      this.backdrop.remove();\n      this.backdrop = null;\n    }\n\n    if (this.previousElement) {\n      this.previousElement.focus();\n    }\n\n    this.setState(\n      {\n        open: false\n      },\n      () => {\n        if (typeof this.props.onClose === 'function') {\n          this.props.onClose(this);\n        }\n      }\n    );\n  }\n\n  /**\n   * Handle the Tab keydown. Do not allow tabbing in background and set focus.\n   *\n   * @private\n   */\n  handleForwardTab() {\n    if (document.activeElement === this.lastFocusableEl) {\n      event.preventDefault();\n      this.firstFocusableEl.focus();\n    }\n  }\n\n  /**\n   * Handle the shift + Tab keydown. Do not allow tabbing in background and set focus.\n   *\n   * @private\n   */\n  handleBackwardTab() {\n    if (document.activeElement === this.firstFocusableEl) {\n      event.preventDefault();\n      this.lastFocusableEl.focus();\n    }\n  }\n\n  /**\n   * Handle the closing of the dialog when the ESC key is pressed. Do not allow tabbing in background when modal is open.\n   *\n   * @param {Event} event DOM Event for the keydown handling.\n   * @private\n   */\n  keydown(event) {\n    if (\n      event.key === 'Escape' &&\n      this.state.open &&\n      !this.props.disableAutoClose\n    ) {\n      this.close();\n    }\n\n    if (event.key === 'Tab' && this.state.open) {\n      if (this.focusableEls.length <= 1) {\n        event.preventDefault();\n      }\n\n      if (event.shiftKey) {\n        this.handleBackwardTab();\n      } else {\n        this.handleForwardTab();\n      }\n\n      if (\n        this.lastFocusableEl &&\n        (this.lastFocusableEl.disabled || this.lastFocusableEl.tabIndex === -1)\n      ) {\n        event.preventDefault();\n        this.firstFocusableEl.focus();\n      }\n    }\n  }\n\n  /**\n   * Render the modal dialog.\n   *\n   * @returns {React.DOM} Valid DOM.\n   * @public\n   */\n  render() {\n    const { state, props } = this;\n    const titleForId =\n      typeof props.title === 'string'\n        ? props.title.replace(/[^a-z0-9_-]/gi, '')\n        : Date.now().toString();\n    const id = `${titleForId}-modal-dialog`;\n\n    //\n    // The user has closed the dialog, so we shouldn't render anything here. But\n    // the render method of React expects something to be returned. The `null`\n    // value is the only thing that works here.\n    //\n    if (state.open === false) {\n      return null;\n    }\n\n    return (\n      <ClickOutside targetRef={ this.modalDialog } onClick={ (event, fn) => {\n        if (event.target !== this.modalOuter) return;\n        if (event.target !== this.startTarget) return;\n\n        if (this.props.disableAutoClose) return;\n        document.removeEventListener('click', fn);\n        this.close();\n      }\n      } >\n        <div\n          className='modal fade show'\n          style={{ display: 'flex' }}\n          ref={ r => {\n            this.modalOuter = r;\n          } }>\n          <div\n            role='dialog'\n            aria-modal='true'\n            id={ id }\n            className={ classNames('modal-dialog', props.className) }>\n            <div\n              className={ 'modal-content' }\n              ref={ this.modalDialog }\n              style={ props.style }>\n              {this.baseRender(Header, Nav, Body, Footer)}\n            </div>\n          </div>\n        </div>\n      </ClickOutside>\n    );\n  }\n}\n\nModalComponent.propTypes = {\n  /** Common modal props */\n  ...Base.propTypes\n};\n\n//\n// Make importing easier by exposing the individual components to the Modal\n// class.\n//\nconst Modal = ModalComponent;\nexport default Modal;\nModal.Header = Header;\nModal.Nav = Nav;\nModal.Body = Body;\nModal.Footer = Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Component from '@ux/component';\nimport addhoc from 'addhoc';\n\n// Default Namespace functionality\nconst defaultNamespace = (...c) => c.filter(Boolean).join(' ');\n\n/**\n * React context to store namespace functionality\n *\n * @const {React.Context} NamespaceContext\n * @public\n */\nexport const NamespaceContext = React.createContext({\n  namespace: defaultNamespace\n});\n\nconst withNamespaceContext = addhoc(getWrappedComponent =>\n  <NamespaceContext.Consumer>\n    { namespaceContext => getWrappedComponent({ namespace: namespaceContext.namespace }) }\n  </NamespaceContext.Consumer>, 'WithNamespace');\n\n/**\n * Higher-Order Component function to provide namespace functionality.\n * This replaces the prior NamespaceConsumer abstract class.\n *\n * @param {React.Component} WrappedComponent The component to be augmented with namespace functionality\n * @param {string} [includeOriginal='OriginalComponent'] The optional property name\n * that the original component can be included on.\n * @returns {React.Component} A wrapped component class that provides a `namespace` function as a prop\n * @public\n * @example\n * import { withNamespace, NamespaceShape, NamespaceConsumer } from '@ux/namespace-component';\n * class MyComponent extends NamespaceConsumer {\n *   render() {\n *     return (\n *       <span className={ this.namespace('some-class-name') }>foo</span>\n *     );\n *   }\n * }\n * MyComponent.propTypes = {\n *   ...NamespaceShape\n * };\n *\n * export default withNamespace(MyComponent);\n */\nexport const withNamespace = function withNamespace(WrappedComponent, includeOriginal = 'OriginalComponent') {\n  const hocComponent = withNamespaceContext(WrappedComponent);\n\n  // Optionally attach the original component to the hoc\n  if (includeOriginal) {\n    hocComponent[includeOriginal] = WrappedComponent;\n  }\n\n  return hocComponent;\n};\n\n/**\n * Shape of props added to components wrapped with {@link withNamespace}.\n *\n * @const {Object} NamespaceShape\n * @public\n */\nexport const NamespaceShape = {\n  namespace: PropTypes.func.isRequired\n};\n\n/**\n * Simple class to provide inheriting component with a utility `this.namespace` method that simply calls through to\n * this.props.namespace\n *\n * @public\n */\nexport class NamespaceConsumer extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.namespace = this.namespace.bind(this);\n  }\n\n  namespace(/* args */) {\n    if (!this.props.namespace) {\n      this.debug('`namespace` prop is undefined. Did you wrap this component using withNamespace()?');\n      return defaultNamespace(...arguments);\n    }\n\n    return this.props.namespace(...arguments);\n  }\n}\n\nNamespaceConsumer.propTypes = {\n  ...NamespaceShape\n};\n\n/**\n * Provide additional namespacing logic on top of @ux/component. Useful for\n * custom styling. Used by headers for example.\n *\n * @public\n */\nexport class NamespaceProvider extends Component {\n  constructor(props = {}) {\n    super(...arguments);\n\n    if (props.namespace) {\n      this._namespace = props.namespace;\n    }\n\n    this.state = {\n      contextValue: {\n        namespace: this.namespace\n      }\n    };\n  }\n\n  /**\n   * Return namespaced value. Prefer context over the regular function,\n   * context will be properly scoped and has access to `_namespace`.\n   *\n   * @returns {String} namespace.\n   * @public\n   */\n  get namespace() {\n    return (...str) => {\n      str = str.filter(Boolean);\n\n      if (!this._namespace) {\n        return str.join(' ');\n      }\n\n      if (!str.length) {\n        return;\n      }\n\n      //\n      // Handle the case where a single string is provided with multiple entries.\n      //\n      if (str.length === 1 && ~str[0].indexOf(' ')) {\n        str = str[0].split(' ');\n      }\n\n      return str\n        .map(s => `${this._namespace}-${s}`)\n        .join(' ');\n    };\n  }\n\n  /**\n   * Set namespace for local.\n   *\n   * @param {String} name Namespace.\n   * @public\n   */\n  set namespace(name) {\n    this.debug('Setting namespace to %s', name);\n\n    this._namespace = name;\n  }\n\n  /**\n   * Wrap a single component to provide the namespace through context.\n   *\n   * @returns {ReactElement} Single React element.\n   * @private\n   */\n  render() {\n    return (\n      <NamespaceContext.Provider value={ this.state.contextValue }>\n        { this.props.children }\n      </NamespaceContext.Provider>\n    );\n  }\n}\n\n/**\n * Define properties.\n *\n * @type {Object}\n * @public\n */\nNamespaceProvider.propTypes = {\n  /** The namespace to use */\n  namespace: PropTypes.string,\n  /** Child components */\n  children: PropTypes.node\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@ux/button';\nimport Dropdown, { DropdownItem } from '@ux/dropdown';\nimport Ellipses from '@ux/icon/ellipses';\nimport ChevronDoubleLeft from '@ux/icon/chevron-dbl-left';\nimport ChevronDoubleRight from '@ux/icon/chevron-dbl-right';\nimport ChevronLeft from '@ux/icon/chevron-left';\nimport ChevronRight from '@ux/icon/chevron-right';\n\n/**\n * Generates and returns and array of numbers starting from start and up to end (not including), going in step increments\n *\n * @param {number} start=0 start for the range of numbers\n * @param {number} end=start end (not including) for the range\n * @param {number} step=1 increment to use while generating numbers\n * @returns {array} Array representing the range of numbers\n * @public\n */\nfunction range(start = 0, end = start, step = 1) {\n  return [...Array((end - start) / step)].map((v, i) => start + (i * step));\n}\n\n/**\n * Ponyfill (not a Polyfill) for Number.isInteger. Returns a value indicating\n * if `num` is an integer.\n *\n * \"While polyfills are naughty, ponyfills are pure, just like ponies.\"\n * - https://github.com/sindresorhus/ponyfill#pony-pureness-really\n *\n * @param   {Number}  num Value to check integer(ness) of.\n * @returns {Boolean} Returns a value indicating if `num` is an integer.\n * @public\n */\nfunction isInteger(num) {\n  return typeof num === 'number'\n    && isFinite(num)\n    && Math.floor(num) === num;\n}\n\n/**\n * The default page number that will be used as the starting page number.\n *\n * @type {number}\n * @public\n */\nconst FIRST_PAGE_NUMBER = 1;\n\n/**\n * The default number of page links to be shown.\n *\n * @type {number}\n * @public\n */\nconst DEFAULT_NUM_PAGES_SHOWN = 4;\n\n/**\n* Default aria-labels\n*/\nconst DEFAULT_ARIA_LABELS = {\n  firstPage: 'Go to first page',\n  lastPage: 'Go to last page',\n  nextPage: 'Go to next page',\n  prevPage: 'Go to previous page',\n  morePages: 'More pages'\n};\n\n/**\n * The Pagination react component that is used to switch between content panes or pages.\n * Behavior of the pagination component is controlled by use of props.\n * The component displays links for pages in the current viewable range,\n * it displays forward and back navigation links and also a dropdown to choose\n * the number of items being displayed per page.\n\n * @displayName Pagination (web)\n * @class Pagination\n * @public\n */\nexport default class Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageItems: props.pageItems,\n      pageSelected: props.defaultSelected\n    };\n  }\n\n  /**\n   * Normalize provided values to prevent out of range errors when pages\n   * are generated.\n   *\n   * @param {Object} props Current props.\n   * @param {Object} state Current state.\n   * @returns {Object} The normalized state.\n   * @private\n   */\n  static getDerivedStateFromProps(props, state) {\n    const total = Math.ceil(props.totalItems / state.pageItems);\n    if (state.pageSelected >= total) state.pageSelected = total;\n\n    return state;\n  }\n\n  /**\n   * Get the total number of pages in the paginated result set\n   *\n   * @param {number} pageItems Number of items per page\n   * @returns {number} The total number of pages in the paginated result set\n   * @private\n   */\n  _totalPages(pageItems) {\n    return Math.ceil(this.props.totalItems / pageItems);\n  }\n\n  /**\n   * Returns a value indicating if the the pageItems Dropdown should be displayed?\n   *\n   * @returns {boolean} should the pageItems drop down be displayed\n   * @private\n   */\n  _allowItemsPerPageSelection() {\n    return this.props.pageItemsChoices.length > 0;\n  }\n\n  /**\n   * Should the back links be enabled or disabled?\n   *\n   * @returns {boolean} should the back links be enabled or disabled?\n   * @private\n   */\n  _enableBackLinks() {\n    return this.state.pageSelected > FIRST_PAGE_NUMBER;\n  }\n\n  /**\n   * Should the forward links be enabled or disabled?\n   *\n   * @returns {boolean} should the forward links be enabled or disabled?\n   * @private\n   */\n  _enableForwardLinks() {\n    return this.state.pageSelected < this._totalPages(this.state.pageItems);\n  }\n\n  /**\n   * The page range (start and end) that is to be displayed\n   *\n   * @returns {Object} page range to display\n   * @private\n   */\n  _pageRangeToShow() {\n    //\n    // The page range is chosen such that the current selected page is centered,\n    // except in the case of the first and the last page.\n    //\n    const pageSelected = this.state.pageSelected;\n    const totalPages = this._totalPages(this.state.pageItems, this.props.totalItems);\n    const maxPageLinks = this.props.maxPageLinks;\n    const pageRangeStart = Math.max(FIRST_PAGE_NUMBER, pageSelected - Math.floor(maxPageLinks / 2));\n    const pageRangeEnd = Math.min(totalPages, pageRangeStart + maxPageLinks - 1);\n\n    return { pageRangeStart, pageRangeEnd };\n  }\n\n  /**\n   * JSX for the page link section\n   *\n   * @returns {ReactElement} page link section\n   * @private\n   */\n  _pageLinksSection() {\n    const { pageRangeStart, pageRangeEnd } = this._pageRangeToShow();\n\n    return range(pageRangeStart, pageRangeEnd + 1).map(val => {\n      const isSelected = this.state.pageSelected === val;\n      const key = `page-links-${val}`;\n      let design;\n      if (!isSelected) {\n        design = 'inline';\n      }\n\n      return (\n        <li className='page-item page-number' key={ key }>\n          <Button\n            design={ design }\n            active={ isSelected }\n            text={ val }\n            onClick={ (evt) => this.onPageClick(evt, val) }/>\n        </li>\n      );\n    });\n  }\n\n  /**\n   * JSX for the more section\n   *\n   * @returns {ReactElement} more link section\n   * @private\n   */\n  _moreLinksSection() {\n    return (\n      <li className='page-item more'>\n        <span aria-label={ this.props.ariaLabels.morePages } className='page-ellipsis'>\n          <Ellipses />\n        </span>\n      </li>\n    );\n  }\n\n  /**\n   * JSX for the first link\n   *\n   * @returns {ReactElement} first link JSX\n   * @private\n   */\n  _firstLinkSection() {\n    const statusClass = this._enableBackLinks() ? '' : 'disabled';\n    const hidden = this.props.showBookends ? '' : 'hidden-xs-up';\n    const classes = `page-item bookend bookend-first ${statusClass} ${hidden}`;\n\n    const onClick = (evt) => {\n      if (statusClass === 'disabled') {\n        evt.preventDefault();\n        return;\n      }\n      this.onNavigationClick(evt, 'first');\n    };\n\n    return (\n      <li className={ classes }>\n        <Button\n          design='inline'\n          disabled={ statusClass === 'disabled' }\n          icon={ <ChevronDoubleLeft /> }\n          onClick={ onClick }\n          aria-label={ this.props.ariaLabels.firstPage }\n          aria-disabled={ statusClass === 'disabled' }/>\n      </li>\n    );\n  }\n\n  /**\n   * JSX for the last link\n   *\n   * @returns {ReactElement} last link JSX\n   * @private\n   */\n  _lastLinkSection() {\n    const statusClass = this._enableForwardLinks() ? '' : 'disabled';\n    const hidden = this.props.showBookends ? '' : 'hidden-xs-up';\n    const classes = `page-item bookend bookend-last ${statusClass} ${hidden}`;\n\n    const onClick = (evt) => {\n      if (statusClass === 'disabled') {\n        evt.preventDefault();\n        return;\n      }\n      this.onNavigationClick(evt, 'last');\n    };\n\n    return (\n      <li className={ classes }>\n        <Button\n          design='inline'\n          disabled={ statusClass === 'disabled' }\n          icon={ <ChevronDoubleRight /> }\n          onClick={ onClick }\n          aria-label={ this.props.ariaLabels.lastPage }\n          aria-disabled={ statusClass === 'disabled' }/>\n      </li>\n    );\n  }\n\n  /**\n   * JSX for the previous link\n   *\n   * @returns {ReactElement} previous link JSX\n   * @private\n   */\n  _prevLinkSection() {\n    const statusClass = this._enableBackLinks() ? '' : 'disabled';\n    const classes = `page-item previous ${statusClass}`;\n\n    const onClick = (evt) => {\n      if (statusClass === 'disabled') {\n        evt.preventDefault();\n        return;\n      }\n      this.onNavigationClick(evt, 'prev');\n    };\n\n    return (\n      <li className={ classes }>\n        <Button\n          design='inline'\n          disabled={ statusClass === 'disabled' }\n          icon={ <ChevronLeft /> }\n          onClick={ onClick }\n          aria-label={ this.props.ariaLabels.prevPage }\n          aria-disabled={ statusClass === 'disabled' }/>\n      </li>\n    );\n  }\n\n  /**\n   * JSX for the next link\n   *\n   * @returns {ReactElement} next link JSX\n   * @private\n   */\n  _nextLinkSection() {\n    const statusClass = this._enableForwardLinks() ? '' : 'disabled';\n    const classes = `page-item next ${statusClass}`;\n\n    const onClick = (evt) => {\n      if (statusClass === 'disabled') {\n        evt.preventDefault();\n        return;\n      }\n      this.onNavigationClick(evt, 'next');\n    };\n\n    return (\n      <li className={ classes }>\n        <Button\n          design='inline'\n          disabled={ statusClass === 'disabled' }\n          icon={ <ChevronRight /> }\n          onClick={ onClick }\n          aria-label={ this.props.ariaLabels.nextPage }\n          aria-disabled={ statusClass === 'disabled' }/>\n      </li>\n    );\n  }\n\n  /**\n   * JSX for the number items per page dropdown\n   *\n   * @returns {ReactElement} number items per page dropdown JSX\n   * @private\n   */\n  _numberItemsSection() {\n    const pageItemsChoices = this.props.pageItemsChoices;\n    const defaultSelected = pageItemsChoices.indexOf(this.props.pageItems);\n\n    return (\n      <div className='pagination-dropdown'>\n        <Dropdown\n          type='select'\n          defaultSelected={ [defaultSelected] }\n          onChange={ this.onPageItemsChanged.bind(this) }>\n          {\n            pageItemsChoices.map(a => {\n              return (\n                <DropdownItem key={ a } value={ a }>\n                  <div className='d-inline-flex'>{ a }</div>\n                </DropdownItem>\n              );\n            })\n          }\n        </Dropdown>\n      </div>\n    );\n  }\n\n  /**\n   * JSX for the pagination links section\n   *\n   * @returns {ReactElement|Null} pagination links section JSX\n   * @private\n   */\n  _paginationSection() {\n    const { pageRangeStart, pageRangeEnd } = this._pageRangeToShow();\n    const paginationSizeClass = `pagination-${this.props.size}`;\n    const totalPages = this._totalPages(this.state.pageItems, this.props.totalItems);\n    const classes = `pagination ${paginationSizeClass}`;\n\n    if (isNaN(pageRangeEnd)) return null;\n\n    return (\n      <ul className={ classes }>\n        { this._firstLinkSection() }\n        { this._prevLinkSection() }\n        { pageRangeStart > FIRST_PAGE_NUMBER && this._moreLinksSection() }\n        { this._pageLinksSection() }\n        { pageRangeEnd < totalPages && this._moreLinksSection() }\n        { this._nextLinkSection() }\n        { this._lastLinkSection() }\n      </ul>\n    );\n  }\n\n  /**\n   * The event handler that gets invoked when the number of items per page changes\n   *\n   * @param {object} props The event props.\n   * @returns {void}\n   * @public\n   */\n  onPageItemsChanged(props) {\n    const pageSelected = FIRST_PAGE_NUMBER;\n    const pageItems = props.value;\n\n    this.setState({ pageItems, pageSelected });\n    this.props.onChange(pageSelected, pageItems);\n  }\n\n  /**\n   * The event handler that gets invoked when a page link is clicked\n   *\n   * @param {object} evt The event object\n   * @param {number} pageSelected The value of the page selected\n   * @returns {void}\n   * @public\n   */\n  onPageClick(evt, pageSelected) {\n    evt.preventDefault();\n    this.setState({ pageSelected });\n    this.props.onChange(pageSelected, this.state.pageItems);\n  }\n\n  /**\n   * The event handler that gets invoked when a navigation link is clicked\n   *\n   * @param {object} evt the event object\n   * @param {string} navigationType The type of navigation link that was clicked\n   * @returns {void}\n   * @public\n   */\n  onNavigationClick(evt, navigationType) {\n    evt.preventDefault();\n    let pageSelected;\n    const totalPages = this._totalPages(this.state.pageItems, this.props.totalItems);\n\n    switch (navigationType) {\n      case 'first':\n        pageSelected = FIRST_PAGE_NUMBER;\n        break;\n      case 'last':\n        pageSelected = totalPages;\n        break;\n      case 'prev':\n        pageSelected = Math.max(FIRST_PAGE_NUMBER, this.state.pageSelected - 1);\n        break;\n      case 'next':\n        pageSelected = Math.min(totalPages, this.state.pageSelected + 1);\n        break;\n      default:\n        pageSelected = FIRST_PAGE_NUMBER;\n        break;\n    }\n\n    this.setState({ pageSelected });\n    this.props.onChange(pageSelected, this.state.pageItems, navigationType);\n  }\n\n  /**\n   * React life cycle method which is invoked before a mounted component receives new props\n   *\n   * @param {object} prevProps The previous properties\n   * @private\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props.defaultSelected !== prevProps.defaultSelected) {\n      // set the pageSelected if defaultSelected prop is changed\n      this.setState({ pageSelected: this.props.defaultSelected });\n    }\n\n    if (this.props.totalItems !== prevProps.totalItems) {\n      // set the selected page to the defaultSelected page everytime the total number of pages change\n      this.setState({ pageSelected: this.props.defaultSelected });\n    }\n\n    if (this.props.pageItems !== prevProps.pageItems) {\n      this.setState({ pageItems: this.props.pageItems, pageSelected: this.props.defaultSelected  });\n    }\n  }\n\n  /**\n   * React life cycle hook for rendering the component\n   *\n   * @returns {ReactElement} JSX for the entire Pagination component\n   * @public\n   */\n  render() {\n    const selection = this._paginationSection();\n    if (!selection) return this.props.children || null;\n    const wrapClass = `pagination-wrap pagination-size-${this.props.size}`;\n\n    return (\n      <div className={ wrapClass }>\n        { selection }\n        { this._allowItemsPerPageSelection() && this._numberItemsSection() }\n      </div>\n    );\n  }\n}\n\n/**\n * Pagination components display name (typically used by a react Dev tool plug-in)\n *\n * @type {string}\n */\nPagination.displayName = 'Pagination';\n\n/**\n * Page item validation\n *\n * @param {object} props properties passed in\n * @param {string} propName name of prop to be validated\n * @returns {Error | void} Error if invalid\n * @public\n */\nPagination.pageItemValidation = function (props, propName) {\n  const pageItems = props[propName];\n  const pageItemsChoices = props.pageItemsChoices;\n\n  if (!isInteger(pageItems) && !(pageItems > 0)) {\n    return new Error(`pageItems should be positive integer`);\n  }\n\n  if (!!pageItemsChoices.length && pageItemsChoices.indexOf(pageItems) === -1) {\n    return new Error(`Invalid value for prop pageItems`);\n  }\n};\n\n/**\n * Pagination component propTypes\n * typically used for type checking\n *\n * @type {object}\n */\nPagination.propTypes = {\n  children: PropTypes.node,\n  /** The Default selected page */\n  defaultSelected: PropTypes.number,\n  /** The maximum number of page links that should be displayed. */\n  maxPageLinks: PropTypes.number,\n  /** The callback handler when a pagination selection changes i.e. either a page selection or the number\n  of items per page selection. The callback gets passed three parameters the page\n  currently selected, the current number of items per page value, and the navigation type selected (i.e. next, prev, first, last) */\n  onChange: PropTypes.func.isRequired,\n  /** The number of items that are being displayed per page. */\n  pageItems: Pagination.pageItemValidation,\n  /** The allowed choices for number of items that will be displayed per page. */\n  pageItemsChoices: PropTypes.arrayOf(PropTypes.number),\n  /** Set the size (sm | md | lg) */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /** Flag to show or hide the 'first' and 'last' page links. */\n  showBookends: PropTypes.bool,\n  /** The total number of items in the result set that is being paginated. */\n  totalItems: PropTypes.number.isRequired,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for \"Go to first page\" double left chevron button */\n    firstPage: PropTypes.string,\n    /** Screen reader label for \"Go to last page\" double right chevron button */\n    lastPage: PropTypes.string,\n    /** Screen reader label for \"Go to next page\" single right chevron button */\n    nextPage: PropTypes.string,\n    /** Screen reader label for \"Go to previous page\" single left chevron button */\n    prevPage: PropTypes.string,\n    /** Screen reader label for \"More pages\" ellipses icon */\n    morePages: PropTypes.string\n  })\n};\n\n/**\n * Pagination component default prop values\n *\n * @type {object}\n */\nPagination.defaultProps = {\n  defaultSelected: FIRST_PAGE_NUMBER,\n  maxPageLinks: DEFAULT_NUM_PAGES_SHOWN,\n  pageItemsChoices: [],\n  size: 'md',\n  showBookends: true,\n  ariaLabels: DEFAULT_ARIA_LABELS\n};\n","import { FormElement } from '@ux/form-element';\nimport Button from '@ux/button';\nimport PropTypes from 'prop-types';\nimport React from 'react'; // eslint-disable-line no-unused-vars\n\n/**\n * Component for rending a password element which can switch the password on and\n * off.\n *\n * @displayName Password\n * @class Password\n * @public\n */\nexport class Password extends FormElement {\n  constructor(...args) {\n    super(...args);\n\n    const component = this;\n\n    //\n    // Conditionally ignore properties,\n    //\n    if (component.ignoreProps) {\n      component.ignoreProps.push('show', 'hide');\n    }\n\n    component.type = 'password';                  // Default input type.\n    component._show = this.props.show || 'show';  // Label for when we're in password mode.\n    component._hide = this.props.hide || 'hide';  // Label for when password is visible.\n\n    //\n    // By the time the component is processed, we already received and processed\n    // the props so we can just correctly set the button so it's rendered as\n    // intended.\n    //\n    component.button = component.props.button || <Button text={ component.select('_show') } design='inline' onClick={ toggleHidden }/>;\n\n    /**\n     * Switches the button state.\n     *\n     * @param {Event} ev DOM Event\n     * @private\n     */\n\n    function toggleHidden(ev) {\n      ev.preventDefault();\n\n      const hidden = component.select('type') === 'password';\n      const button = <Button text={ hidden ? component.select('_hide') : component.select('_show') } design='inline' onClick={ toggleHidden }/>;\n\n      component.setState({\n        button,\n        type: hidden ? 'text' : 'password'\n      });\n    }\n\n    component.action = toggleHidden;\n  }\n\n  render() { return super.render(); }\n}\n\n/**\n * Allowed properties, show and hide are used as action.\n *\n * @type {Object}\n * @public\n */\nPassword.propTypes = {\n  /** props from Element in FormElement */\n  ...FormElement.propTypes,\n  /** Label that is displayed when the user can show his typed password. */\n  show: PropTypes.node,\n  /** Label that is shown when user can hide his showed password. */\n  hide: PropTypes.node\n};\n\nexport default Password;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBreakpoints, classNames } from '@ux/component-utilities';\nimport ChevronRight from '@ux/icon/chevron-right';\nimport Arrow from '@ux/icon/link-arrow';\n\n/**\n * Render a chevron icon.\n *\n * @returns {React.Element} The icon.\n * @private\n */\nfunction Chevron() {\n  return (\n    <ChevronRight width={ 26 } height={ 26 } />\n  );\n}\n\n// Define grid names (should be in ux-component)\nconst breakpointSizes = {\n  mobile: 'xs',\n  phablet: 'sm',\n  tablet: 'md',\n  desktop: 'lg',\n  large: 'xl',\n  xlarge: 'xxl'\n};\n\n/**\n * Default class for the pivot component\n *\n * @displayName Pivot\n * @class Pivot\n * @param {Object} props - react props\n * @public\n */\nexport default function Pivot(props) {\n\n  const { breakpoint } = useBreakpoints('mobile', 'phablet', 'tablet', 'desktop', 'large', 'xlarge');\n\n  /**\n   * @function handleClick\n   * @param {Event} e Dom event for handling click\n   * @public\n   */\n  function handleClick(e) {\n    const { disabled, href, onClick, onSelected } = props;\n    if (disabled) {\n      e.preventDefault();\n    } else if (onClick) {\n      onClick(e);\n      if (!href) onSelected();\n    }\n  }\n\n  /**\n   * Determine if its necessary to apply a clear class\n   * @function determineClearing\n   * @returns {boolean} whether or not we need to add clear class\n   * @public\n   */\n  function determineClearing() {\n    const { design, grid: columns, index } = props;\n    if (design === 'slats') { return false; }\n\n    // Assign custom grid classes\n    const currentSize = breakpointSizes[breakpoint];\n\n    // Create an array of sizes\n    const sizes = Object.keys(breakpointSizes).map(function (key) {\n      return breakpointSizes[key];\n    });\n\n    // Find current base size\n    for (let i = sizes.indexOf(currentSize); i >= 0; i--) {\n      if (sizes[i] in columns) {\n        // If there are custom grid classes, appropriately clear pivots\n        const gridClearNum = 12 / columns[sizes[i]];\n        return (index % gridClearNum) === 0;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @function render\n   * @returns {ReactElement} The pivot\n   * @public\n   */\n  const {\n    title, subtitle, xsSubtitles,\n    design, grid, graphic,\n    href, onClick,\n    disabled, selected, id, arrow\n  } = props;\n\n  // Creates optional subtitle\n  const subtitleRender = subtitle && (\n    <span className={ 'ux-pivot-subtitle' + (xsSubtitles ? `` : ` hidden-xs-down`) }>\n      { subtitle }\n    </span>\n  );\n\n  // Assign custom grid classes if not slats\n  const columns = (design !== 'slats') ? grid : { };\n\n  // Use a button instead of an anchor if no href, but onClick\n  const useButton = !href && onClick;\n  const Tag = useButton ? 'button' : 'a';\n  const linkButton = useButton ? 'button' : 'link';\n\n  // Grid option only supports these sizes (xs and sm are set values)\n  const gridClasses = classNames({\n    [`col-md-${columns.md}`]: columns.md,\n    [`col-lg-${columns.lg}`]: columns.lg,\n    [`col-xl-${columns.xl}`]: columns.xl,\n    [`col-xxl-${columns.xxl}`]: columns.xxl\n  }, 'col-xs-12');\n\n  // Apply clear if necessary for IE9\n  const gridStyle = determineClearing() ? { clear: 'left' } : { };\n  const aStyle = classNames('ux-pivot', {\n    'ux-pivot-disabled': disabled,\n    'ux-pivot-selected': useButton && selected,\n    'ux-pivot-arrow': arrow\n  });\n\n  return (\n    <div className={ gridClasses } style={ gridStyle } role='navigation'>\n      <Tag\n        className={ aStyle }\n        href={ href }\n        onClick={ handleClick }\n        role={ linkButton }\n        aria-labelledby={ title }\n        aria-selected={ selected }\n        id={ id }>\n        <span className='ux-pivot-graphic' aria-hidden='true'>\n          { arrow ? <Arrow /> : graphic }\n        </span>\n        <span className='ux-pivot-title'>\n          { title }\n        </span>\n        { subtitleRender }\n        <span className='ux-pivot-chevron'>\n          { design === 'slats' && <Chevron /> }\n        </span>\n      </Tag>\n    </div>\n  );\n}\n\n/**\n * Define Properties\n * @public\n */\nPivot.propTypes = {\n  /**\n   * link to be assigned to this pivot\n   * @function hrefValidate\n   * @param {Object} props React props\n   * @param {String} propName Name of this href prop\n   * @returns {Error|null} validation\n   * */\n  href: function hrefValidate(props, propName) {\n    const value = props[propName];\n    if (value && typeof value !== 'string') { return new Error('href must be a string'); }\n    if (!value && !props.onClick) { return new Error('Either href or onClick required for Pivot'); }\n    return null;\n  },\n  /**\n   * Validate label and require ID if label is a ReactElement\n   *\n   * @param {Object} props the props passed in\n   * @param {string} propName the name of the current prop\n   * @param {string} componentName the name of the component\n   * @returns {Error|null} validation\n   */\n  graphic: function validatePropTypeGraphic(props, propName, componentName) {\n    if (!props.arrow) {\n      PropTypes.checkPropTypes({ graphic: PropTypes.element.isRequired }, props, propName, componentName);\n    }\n    return null;\n  },\n  /** title for the tile/slat */\n  title: PropTypes.node.isRequired,\n  /** optional subtitle for tile/slat */\n  subtitle: PropTypes.node,\n  /** the specified design, `slats` is special cased */\n  design: PropTypes.string,\n  /** index of this specific pivot relative to total set */\n  index: PropTypes.number,\n  /** bootstrap grid specification */\n  grid: PropTypes.object,\n  /** if subtitles should render on mobile  */\n  xsSubtitles: PropTypes.bool,\n  /** click handler */\n  onClick: PropTypes.func,\n  /** onSelected handler */\n  onSelected: PropTypes.func,\n  /** whether this tile/slat is currently selected */\n  selected: PropTypes.bool,\n  /** whether this tile/slat is rendered in disabled state */\n  disabled: PropTypes.bool,\n  /** An optional unique id attribute for the element */\n  id: PropTypes.string,\n  /** adds a specific class to change the way a pivot looks */\n  arrow: PropTypes.bool\n};\n\n/**\n *\n * Default Properties\n * @public\n */\nPivot.defaultProps = {\n  grid: {},\n  disabled: false,\n  selected: false,\n  arrow: false\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\n\n// Import child components\nimport Pivot from './pivot';\n\n/**\n * Pivots class to render multiple pivot components\n *\n * @displayName Pivots\n * @function Pivots\n * @param {ReactProps} props - component props\n * @returns {ReactElement} - React Element\n * @public\n */\nexport default function Pivots(props) {\n  const [selectedIndex, setIndex] = useState(props.selectedIndex);\n\n  /**\n   * Sets index based on update\n   */\n  useEffect(() => {\n    setIndex(props.selectedIndex);\n  }, [props.selectedIndex]);\n\n  /**\n   * @function handlePivotSelected\n   * @param {String} index The index of the pivot selected\n   * @public\n   */\n  function handlePivotSelected(index = -1) {\n    setIndex(index);\n  }\n\n  // Assign so they can be passed to Pivots\n  const { grid, design, xsSubtitles, xsGraphics, pivotList } = props;\n  // Create pivots from custom data\n  const pivotListRender = pivotList.map(\n    (data, i) => <Pivot\n      { ...data }\n      grid={ grid }\n      design={ design }\n      xsSubtitles={ xsSubtitles }\n      key={ `pivot-list-${i}` }\n      index={ i }\n      onSelected={ () => handlePivotSelected(i) }\n      selected={ i === selectedIndex }\n    />\n  );\n\n  // Create class names\n  const classes = classNames(\n    'ux-pivot-group',\n    'row',\n    {\n      'ux-pivot-slats': design === 'slats',\n      'ux-pivot-xs-graphics': xsGraphics\n    }\n  );\n\n  return (\n    <div role='navigation' className={ classes }>\n      { pivotListRender }\n    </div>\n  );\n}\n\n/**\n * Property Definitions\n * @public\n */\nPivots.propTypes = {\n  /** default is tile buttons meant for tablet/desktop.\n   * `slats` which is the default mobile rendering can be forced for tablet/desktop by passing `slats` as design */\n  design: PropTypes.string,\n  /** the bootstrap grid specification */\n  grid: PropTypes.object,\n  /** Array of pivot data structures to generate pivot components */\n  pivotList: PropTypes.array,\n  /** force graphics to render on mobile */\n  xsGraphics: PropTypes.bool,\n  /** force subtitles to render on mobile */\n  xsSubtitles: PropTypes.bool,\n  /**\n   * Default selected tile/slat when initially rendered\n   * @param {Object} props React props\n   * @returns {Error|null} validation\n   */\n  selectedIndex: (props) => {\n    const { selectedIndex, pivotList } = props;\n    if (!(selectedIndex && pivotList)) return null;\n    const error = (\n      typeof selectedIndex !== 'number'\n      && 'selectedIndex must be a number'\n    ) || (\n      (selectedIndex > (pivotList.length - 1) || selectedIndex < -1)\n      && 'selectedIndex is invalid'\n    );\n    return error ? new Error(error) : null;\n  }\n};\n\n/**\n * Default Properties\n * @public\n */\nPivots.defaultProps = {\n  grid: {\n    md: 6,\n    xl: 4\n  },\n  selectedIndex: -1\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Breakpoints, id as _id } from '@ux/component-utilities';\n\n/**\n * Possible status types\n *\n * @type {object}\n */\nconst STATUS = {\n  Error: 'error',\n  Warning: 'warning',\n  Success: 'success',\n  Info: 'info',\n  Primary: 'primary'\n};\n\n/**\n * Circle size configurations needed for svg calculation.\n *\n * @type {object}\n */\nconst CIRCLE_SIZES = {\n  XS: {\n    size: 50,\n    strokeWidth: 4\n  },\n  SM: {\n    size: 100,\n    strokeWidth: 6\n  },\n  MD: {\n    size: 150,\n    strokeWidth: 14\n  },\n  LG: {\n    size: 250,\n    strokeWidth: 22\n  }\n};\n\n/**\n * Array of ordered breakpoints to check against\n *\n * @type {object}\n */\nconst BREAKPOINTS = ['mobile', 'phablet', 'tablet', 'desktop', 'large', 'xlarge'];\n\n/**\n* Display a progress bar\n*\n* @displayName ProgressBar\n* @class ProgressBar\n* @public\n*/\nclass ProgressBar extends Component {\n  /**\n   * Get the integer part of the current percentage completed (0-100)\n   *\n   * @returns {number} percent\n   * @private\n   */\n  get _percent() {\n    return Math.floor(this._exactPercent);\n  }\n\n  /**\n   * Get the current percentage completed (0-100)\n   *\n   * @returns {number} percent\n   * @private\n   */\n  get _exactPercent() {\n    return this.props.value / this.props.max * 100;\n  }\n\n  /**\n   * Get the label element if `label` prop is set.\n   *\n   * @returns {ReactElement} label element\n   * @private\n   */\n  get _labelElement() {\n    const id = _id('label', { props: this.props }).toLowerCase();\n\n    if (!this.props.label) {\n      return null;\n    }\n\n    return <div id={ id } className='ux-progress-label'>{ this.props.label }</div>;\n  }\n\n  /**\n   * Get the notice element if `notice` prop is set.\n   *\n   * @returns {ReactElement} notice element\n   * @private\n   */\n  get _noticeElement() {\n    if (!this.props.notice) {\n      return null;\n    }\n\n    return <small className='ux-progress-bar-notice'>{ this.props.notice }</small>;\n  }\n\n  /**\n   * Get the display element if `children` or `showPercent` prop is set.\n   * Will not render if small bar.\n   * @param {string} breakpoint current viewpoints\n   * @returns {ReactElement} percentage text element\n   * @private\n   */\n  _displayElement(breakpoint) {\n    const { showPercent, children, shape, startShiftPercent } = this.props;\n    const { value, unit } = this._size(breakpoint);\n    let size = this._size(breakpoint);\n    let style;\n\n    if (value && unit) {\n      size = value + unit;\n      style = { lineHeight: size };\n    }\n\n    if (!(!!showPercent || !!children) || (shape === 'bar' && ~size.lastIndexOf('xs'))) {\n      return null;\n    }\n\n    const percent = this._percent;\n    const classNames = ['ux-progress-text'];\n    if (percent < startShiftPercent && !(shape === 'bar' && ~size.lastIndexOf('sm'))) {\n      classNames.push('ux-progress-text-start');\n    }\n\n    const displayElement = children || `${percent}%`;\n    return <span aria-hidden='true' className={ classNames.join(' ') } style={ style }>{ displayElement }</span>;\n  }\n\n  /**\n   * Get the size to render the progress element at\n   * @param {string} breakpoint current view point\n   * @returns {string} size\n   * @private\n   */\n  _size(breakpoint) {\n    const { size } = this.props;\n\n    if (typeof size === 'string' || size.value && size.unit) {\n      return size;\n    } else if (size[breakpoint]) {\n      return size[breakpoint];\n    }\n\n    // find the next smallest breakdown size\n    let breakdown;\n    const targetIdx = BREAKPOINTS.indexOf(breakpoint);\n    for (let idx = BREAKPOINTS.length - 1; idx >= 0; idx--) {\n      if (size[BREAKPOINTS[idx]]) {\n        breakdown = BREAKPOINTS[idx];\n        if (idx < targetIdx) {\n          break;\n        }\n      }\n    }\n\n    return !breakdown ? 'md' : size[breakdown];\n  }\n\n  /**\n   * Get the classes to apply to the progress component.\n   * @param {string} breakpoint current view point\n   * @returns {string} classes\n   * @private\n   */\n  // eslint-disable-next-line complexity\n  _progressClasses(breakpoint) {\n    const classNames = ['ux-progress'];\n\n    classNames.push(`ux-progress-${this.props.shape}`);\n\n    switch (this._size(breakpoint)) {\n      case 'xsmall':\n      case 'xs':\n        classNames.push('ux-progress-xs');\n        break;\n      case 'small':\n      case 'sm':\n        classNames.push('ux-progress-sm');\n        break;\n      case 'large':\n      case 'lg':\n        classNames.push('ux-progress-lg');\n        break;\n      default:\n        classNames.push('ux-progress-md');\n    }\n\n    switch (this.props.status) {\n      case STATUS.Error:\n        classNames.push('ux-progress-danger');\n        break;\n      case STATUS.Warning:\n        classNames.push('ux-progress-warning');\n        break;\n      case STATUS.Info:\n        classNames.push('ux-progress-info');\n        break;\n      case STATUS.Success:\n        classNames.push('ux-progress-success');\n        break;\n      default:\n        classNames.push('ux-progress-primary');\n    }\n\n    if (this.props.shape !== 'circle') {\n      if (this.props.striped) {\n        classNames.push('ux-progress-striped');\n      }\n      if (this._tickCount) {\n        classNames.push('ux-progress-tick-marks');\n      }\n    }\n\n    return classNames.join(' ');\n  }\n\n  isSmall(breakpoint) {\n    const size = this._size(breakpoint);\n    const { value, unit } = size;\n\n    return size === 'sm' || size === 'small' || value < 1.5 && ~unit.indexOf('em') || value < 24;\n  }\n\n  /**\n   * Get the number of tick marks to display\n   *\n   * @returns {number} count\n   * @private\n   */\n  get _tickCount() {\n    return this.props.tickCount || this.props.ticks.length;\n  }\n\n  /**\n   * Get a single tick mark label\n   *\n   * @param {number} index index of label in row, starting at zero\n   * @param {object} style additional style (if any) to apply to label\n   * @returns {ReactElement} element\n   * @private\n   */\n  tickLabel(index, style) {\n    const { min, max, ticks, tickCount } = this.props;\n    const offset = (max - min) / (this._tickCount - 1) + min;\n    const value = (tickCount) ? index * offset : ticks[index];\n    return (\n      <span key={ value } className='ux-progress-tick-label'>\n        <span style={ style }>{ value }</span>\n      </span>\n    );\n  }\n\n  /**\n   * Get the row of tick mark labels\n   *\n   * @returns {ReactElement} element\n   * @private\n   */\n  get _tickLabels() {\n    const labels = [];\n    let i = 0;\n    if (i < this._tickCount) {\n      labels.push(this.tickLabel(i, { transform: 'translateX(0)' }));\n    }\n    for (i = 1; i < this._tickCount - 1; i++) {\n      labels.push(this.tickLabel(i));\n    }\n    if (i < this._tickCount) {\n      labels.push(this.tickLabel(i, { transform: 'translateX(-100%)' }));\n    }\n    return (\n      <div className='ux-progress-tick-labels'>\n        { labels }\n      </div>\n    );\n  }\n\n  /**\n   * Get the row of tick mark lines\n   *\n   * @returns {ReactElement} element\n   * @private\n   */\n  get _tickLines() {\n    const ticks = [];\n    for (let i = 0; i < this._tickCount - 2; i++) {\n      ticks.push(\n        <span\n          key={ i }\n          className='ux-progress-tick-line'\n          style={{ width: this.props.tickWidth }}\n        ></span>\n      );\n    }\n    return (\n      <div className='ux-progress-tick-lines'>\n        { ticks }\n      </div>\n    );\n  }\n\n  /**\n   * Get the progress element as a bar\n   * @param {string} breakpoint current view point\n   * @returns {ReactElement} element\n   * @private\n   */\n  _bar(breakpoint) {\n    const { value, unit } = this._size(breakpoint);\n    const id = _id('label', { props: this.props }).toLowerCase();\n    const isSmall = this.isSmall(breakpoint);\n    let style;\n\n    if (value && unit) {\n      style = { height: value + unit };\n    }\n\n    return (\n      <div className={ this._progressClasses(breakpoint) }>\n        { this._labelElement }\n        { !!this._tickCount && !this.props.hideTickLabels && this._tickLabels }\n        <div\n          role='progressbar'\n          aria-valuenow={ this._percent }\n          aria-valuemax={ this.props.max }\n          aria-valuemin={ this.props.min }\n          aria-labelledby={ id }\n          style={ style }\n          className='ux-progress-area'>\n          <span\n            className='ux-progress-fill'\n            style={{ width: `${ this._exactPercent }%` }}>\n            { !isSmall && this._displayElement(breakpoint) }\n          </span>\n          { !!this._tickCount && this._tickLines }\n        </div>\n        { !style && isSmall && this._displayElement(breakpoint) }\n        { this._noticeElement }\n      </div>\n    );\n  }\n\n  /**\n   * Get the progress element as a circle\n   * @param {string} breakpoint current view point\n   * @returns {ReactElement} element\n   * @private\n   */\n  _circle(breakpoint) {\n    let circleSize;\n\n    switch (this._size(breakpoint)) {\n      case 'xsmall':\n      case 'xs':\n        circleSize = CIRCLE_SIZES.XS;\n        break;\n      case 'small':\n      case 'sm':\n        circleSize = CIRCLE_SIZES.SM;\n        break;\n      case 'large':\n      case 'lg':\n        circleSize = CIRCLE_SIZES.LG;\n        break;\n      default:\n        circleSize = CIRCLE_SIZES.MD;\n    }\n\n    const { size, strokeWidth } = circleSize;\n    const percent = this._percent;\n    const center = size / 2;\n    const radius = center - strokeWidth;\n    const c = Math.PI * (radius * 2);\n    const offset = ((100 - percent) / 100) * c;\n\n    const fillStyle = {\n      strokeDashoffset: offset,\n      strokeDasharray: c\n    };\n    const id = _id('label', { props: this.props }).toLowerCase();\n\n    return (\n      <div\n        aria-valuenow={ this._percent }\n        role='progressbar'\n        aria-valuemax={ this.props.max }\n        aria-valuemin={ this.props.min }\n        className={ this._progressClasses(breakpoint) }\n        aria-labelledby={ id }>\n        <svg width={ size } height={ size } viewBox={ `0 0 ${size} ${size}` }>\n          <circle fill='none'\n            strokeWidth={ strokeWidth }\n            className='ux-progress-area'\n            r={ radius } cx={ center } cy={ center }/>\n          <circle fill='none'\n            strokeWidth={ strokeWidth }\n            className='ux-progress-fill'\n            r={ radius } cx={ center } cy={ center }\n            style={ fillStyle }\n            strokeLinecap='butt'\n            transform={ `rotate(-90 ${center} ${center})` }/>\n        </svg>\n        { this._displayElement(breakpoint) }\n        { this._labelElement }\n        { this._noticeElement }\n      </div>\n    );\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {ReactElement} Rendered ProgressBar element.\n   * @private\n   */\n  render() {\n    return (\n      <Breakpoints breakpoints={ BREAKPOINTS }>\n        {({ breakpoint }) => {\n          return this.props.shape === 'circle' ? this._circle(breakpoint) : this._bar(breakpoint);\n        }}\n      </Breakpoints>\n      // this.props.shape === 'circle' ? this._circle() : this._bar()\n    );\n  }\n}\n\nProgressBar.Status = STATUS;\n\nProgressBar.propTypes = {\n  /** The title text above the bar */\n  label: PropTypes.node,\n  /** The number that the progress bar starts at, this is mainly for aria-valuemin accessibility */\n  min: PropTypes.number,\n  /** The maximum number of increments */\n  max: PropTypes.number,\n  /** The current increment */\n  value: PropTypes.number,\n  /** Sets the status color/style (active | complete | warning | error) */\n  status: PropTypes.string,\n  /** Sets the small text label below the bar */\n  notice: PropTypes.node,\n  /** Whether or not to show the percentage text */\n  showPercent: PropTypes.bool,\n  /** The start percent value to shift text to right on bar */\n  startShiftPercent: PropTypes.number,\n  /**\n   * Set the size (xs | xsmall | sm | small | md | medium | lg | large).\n   * Object can be used to specify sizes at different breakpoints.\n   * Object can also be used to specify a custom height.\n   */\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['xsmall', 'xs', 'sm', 'small', 'md', 'medium', 'lg', 'large', 'xl', 'xlarge']),\n    PropTypes.object\n  ]),\n  /** Set the shape (bar | circle)  */\n  shape: PropTypes.oneOf(['bar', 'circle']),\n  /** Can be used to customize the value to display; overrides showPercent */\n  children: PropTypes.node,\n  /**  Whether or not to have a striped progress bar. Won't work with the circle version */\n  striped: PropTypes.bool,\n  /** An array of custom tick labels to be used only when tickCount is too generic */\n  ticks: PropTypes.array,\n  /** Number of ticks (if any) to show. Won't work with the circle version */\n  tickCount: PropTypes.number,\n  /** Width of ticks (in px) */\n  tickWidth: PropTypes.number,\n  /** Whether or not to hide the tick mark labels */\n  hideTickLabels: PropTypes.bool\n};\n\nProgressBar.defaultProps = {\n  min: 0,\n  value: 0,\n  max: 100,\n  size: 'md',\n  shape: 'bar',\n  startShiftPercent: 10,\n  label: '',\n  ticks: [],\n  tickCount: 0,\n  tickWidth: 2\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkmark from '@ux/icon/checkmark';\n\n/**\n * Possible status types\n *\n * @type {object}\n */\nconst STATUS = {\n  Incomplete: 'incomplete',\n  Current: 'current',\n  Complete: 'complete'\n};\n\n/**\n * ProgressStep component, representing each individual step.\n *\n * @param {Object} props Props\n * @returns {ReactElement} ReactElement\n */\nfunction ProgressStep(props) {\n\n  return (\n    <li role='status' aria-live='polite' aria-label={ `step ${props.status}` } className={ `ux-tabs-wiz-step-${props.status}` }>\n      <a href={ props.href } onClick={ props.onClick } className={ 'ux-tabs-wiz-link' } tabIndex={ props.href ? null : props.tabIndex }>\n        { props.status === 'complete' && <Checkmark fill='white'/> }\n        <span className='ux-tabs-wiz-txt'>{ props.children }</span>\n      </a>\n    </li>\n  );\n}\n\nProgressStep.propTypes = {\n  status: PropTypes.string.isRequired,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n\nProgressStep.defaultProps = {\n  status: STATUS.Incomplete,\n  tabIndex: 0\n};\n\nProgressStep.Status = STATUS;\n\nexport {\n  ProgressStep as default\n};\n","import validateComponents from 'react-component-validator';\nimport ProgressStep from './progress-step';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst STATUS = ProgressStep.Status;\n\n/**\n* Displays progress in steps.\n*\n* @displayName Progress Steps\n* @class ProgressSteps\n* @public\n*/\nclass ProgressSteps extends Component {\n  /**\n   * Get a step's status name based on current progress value.\n   *\n   * @param {number} idx Step index\n   * @returns {string} status\n   * @private\n   */\n  _getStepStatus(idx) {\n    let status = STATUS.Incomplete;\n\n    if (idx < this.props.value) {\n      status = STATUS.Complete;\n    } else if (idx === this.props.value) {\n      status = STATUS.Current;\n    }\n    return status;\n  }\n\n  /**\n   * Setup the child step elements.\n   *\n   * @returns {Array} Step children\n   * @private\n   */\n  get _stepElements() {\n    const results = [];\n\n    if (this.props.steps) {\n      results.push(...this.props.steps.map((name, i) => {\n        const idx = i + 1;\n        return <ProgressStep key={ idx } tabIndex={ this.props.tabIndex } status={ this._getStepStatus(idx) }>\n          { name }\n        </ProgressStep>;\n      }));\n    }\n\n    if (this.props.children) {\n      const offset = results.length + 1;\n      results.push(...this.props.children.map((step, i) => {\n        const idx = i + offset;\n        return React.cloneElement(step, {\n          key: idx,\n          tabIndex: this.props.tabIndex,\n          status: this._getStepStatus(idx)\n        });\n      }));\n    }\n\n    return results;\n  }\n\n  /**\n   * Renders the component.\n   *\n   * @returns {React.DOM} Rendered ProgressSteps element.\n   * @private\n   */\n  render() {\n    return (\n      <div>\n        <ul className='ux-tabs-wiz-list'>\n          { this._stepElements }\n        </ul>\n      </div>\n    );\n  }\n}\n\nProgressSteps.Step = ProgressStep;\nProgressSteps.propTypes = {\n  /** Names of each step */\n  steps: PropTypes.array,\n  /** Current value of each step */\n  value: PropTypes.number,\n  /** Child React.Components to be displayed underneath */\n  children: validateComponents([ProgressStep]),\n  /** Developer indicates tabIndex */\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n\nProgressSteps.defaultProps = {\n  value: 1\n};\n\nexport {\n  ProgressSteps as default,\n  ProgressStep\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { id as _id } from '@ux/component-utilities';\nimport Button from '@ux/button';\nimport Plus from '@ux/icon/plus';\nimport Minus from '@ux/icon/minus';\n\n//\n// Reusable regular expression for numeric validation.\n//\nconst isNumber = /^(0|[1-9][0-9]*)$/;\n\n/**\n* Default aria-labels\n*/\nconst DEFAULT_ARIA_LABELS = {\n  increment: 'Add',\n  decrement: 'Subtract'\n};\n\n/**\n * React component that renders the QuantitySelector. Expect a\n * minimum value, a maximum value and a default value.\n *\n * @displayName Quantity Selector\n * @class QuantitySelector\n *\n * @public\n */\nexport default class QuantitySelector extends Component {\n  constructor(props, ...args) {\n    super(props, ...args);\n\n    this._onChange = this._onChange.bind(this);\n    this._onKeydown = this._onKeydown.bind(this);\n\n    this.getId = this.getId.bind(this);\n    this.decrease = this.step.bind(this, -1);\n    this.increase = this.step.bind(this, 1);\n\n    this.state = {\n      id: this.getId(),\n      value: this._safeDefaultValue(props.defaultValue, props)\n    };\n  }\n\n  /**\n   * Sources the component id, first from the id prop, and then from the supplied label\n   * component. If neither of those exist, an empty string is returned.\n   *\n   * @returns {string} computed id for the component\n   *\n   * @public\n   */\n  getId() {\n    const { id, label } = this.props;\n    if (id) return id;\n    else if (label) {\n      return React.isValidElement(label)  // If the label is a React element with an `id` prop...\n        ? label.props.id                  // use its `id` prop; otherwise...\n        : _id('label', { props: this.props });               // generate an `id` from it\n    }\n    return '';\n  }\n\n  /**\n   * Attempts to increase the quanity `by` the specified value. If\n   * the current value is invalid or the empty string set the value to\n   * min if attempting to decrease and max if attempting to increase.\n   *\n   * @param {number} by Amount to increase by\n   * @returns {void}\n   *\n   * @public\n   */\n  step(by) {\n    const { max, min } = this.props;\n    const { isError, value } = this.state;\n    const invalid = value > max || value < min || isError === true;\n    let nextValue;\n\n    if (value === '' || invalid) {\n      nextValue = by === -1 ? min : max;\n      return this._setValue(nextValue, true);\n    }\n\n    nextValue = value + by;\n    if (nextValue < min) nextValue = min;\n    if (nextValue > max) nextValue = max;\n\n    this._setValue(nextValue, nextValue <= max && nextValue >= min && isError !== true);\n  }\n\n  /**\n   * Handles the DOM change event from the text input on this instance.\n   * we perform our own pattern matching here because we want the numeric\n   * keypad when on mobile, but need the actual value change.\n   *\n   * @param {Event} evt DOM 'change' event.\n   * @returns {void}\n   *\n   * @private\n   */\n  _onChange(evt) {\n    if (evt && evt.target) {\n      const value = evt.target.value;\n\n      if (value === '') {\n        return this._setValue(value, true);\n      }\n\n      if (isNumber.test(value)) {\n        return this._checkRange(parseInt(value, 10));\n      }\n\n      this._setValue(value);\n    }\n  }\n\n  /**\n   * Handles the keyboard events to increment or decrement this instance.\n   * @param {Event} e Keyboard input event from the browser.\n   *\n   * @private\n   */\n  _onKeydown(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n      e.preventDefault();\n      e.stopPropagation();\n      this.step(e.key === 'ArrowUp' ? 1 : -1);\n    }\n  }\n\n  /**\n   * Attempts to determine if the value if valid or invalid\n   *\n   * @param {number} value Desired next value for this component.\n   * @returns {void}\n   *\n   * @private\n   */\n  _checkRange(value) {\n    const { max, min } = this.props;\n    return this._setValue(value, value <= max && value >= min);\n  }\n\n  /**\n   * Returns the value to update the internal state for this instance based on\n   * the given `defaultValue`.\n   *\n   * @param {number} defaultValue Next default value to set.\n   * @param {Object} props Current props to set on this instance.\n   * @returns {number} Range-safe defaultValue to be used in initial state or `setState`.\n   *\n   * @private\n   */\n  _safeDefaultValue(defaultValue, props) {\n    const { max, min, onChange } = props;\n    const noDefault = typeof defaultValue === 'undefined';\n    let value = noDefault\n      ? (this.state && this.state.value) || min\n      : defaultValue;\n\n    //\n    // Remark (indexzero): should we police for negative min and/or max values?\n    //\n    if (typeof value === 'number') {\n      if (value > max) value = max;\n      if (value < min) value = min;\n    }\n\n    if (onChange && !noDefault) {\n      onChange(value, true);\n    }\n\n    return value;\n  }\n\n  /**\n   * Explicitly sets the value and removes any error state that might\n   * exist. This method performs no validation and assumes the value\n   * to be validated already.\n   *\n   * @param {number} value Next value for this component.\n   * @param {boolean} isValid Value indicating if the value provided is valid.\n   *\n   * @private\n   */\n  _setValue(value, isValid) {\n    const { onChange } = this.props;\n    const nextState = { value, isError: true };\n    if (isValid) {\n      nextState.isError = null;\n    }\n\n    if (onChange) {\n      onChange(value, isValid || false);\n    }\n\n    this.setState(nextState);\n  }\n\n  /**\n   * Ensure that if a new `defaultValue` is provided update all state accordingly\n   * @param  {Object} prevProps Previous set of properties set on this instance.\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props.defaultValue !== prevProps.defaultValue) {\n      this.setState({\n        value: this._safeDefaultValue(this.props.defaultValue, this.props)\n      });\n    }\n  }\n\n  /**\n   * Render the QuantitySelector. Depending on the value the \"-\" and \"+\" buttons will\n   * be disabled.\n   *\n   * @returns {ReactElement} QuantitySelector with appropriate value.\n   *\n   * @private\n   */\n  render() { // eslint-disable-line complexity\n    const { max, min, errorMessage, disabled, label, ariaLabels } = this.props;\n    const { id, value, isError } = this.state;\n    const invalid = isError || value > max || value < min;\n    return <div className='ux-quantity-selector'>\n      { label &&\n        <label htmlFor={ id } id={ `label-${id}` }>\n          { label }\n        </label>\n      }\n      <div className='input-group form-control'\n        role='spinbutton'\n        tabIndex='-1'\n        onKeyDown={ this._onKeydown }\n        aria-valuemin={ min }\n        aria-valuemax={ max }\n        aria-valuenow={ value }>\n        <Button\n          design='control'\n          icon={ <Minus/> }\n          onClick={ this.decrease }\n          disabled={ disabled || value !== '' && !invalid && value <= min }\n          aria-label={ ariaLabels.decrement }/>\n        <input\n          id={ id }\n          type='tel'\n          disabled={ disabled }\n          value={ value }\n          onChange={ this._onChange }\n          className='ux-quantity-selector-text form-control'\n        />\n        <Button\n          design='control'\n          icon={ <Plus/> }\n          onClick={ this.increase }\n          disabled={ disabled || value !== '' && !invalid && value >= max }\n          aria-label={  ariaLabels.increment }/>\n      </div>\n      { isError && <div className='form-error' role='alert'>{ errorMessage }</div> }\n    </div>;\n  }\n}\n\n/**\n * Default property values.\n *\n * @type {Object}\n *\n * @public\n */\nQuantitySelector.defaultProps = {\n  disabled: false,\n  min: 0,\n  ariaLabels: DEFAULT_ARIA_LABELS\n};\n\n/**\n * Property validation.\n *\n * @type {Object}\n *\n * @public\n */\nQuantitySelector.propTypes = {\n  /** Id for input control to associate a label with */\n  id: PropTypes.string,\n  /** Label component associated with the quantity selector */\n  label: PropTypes.node,\n  /** Change the value of the input field */\n  onChange: PropTypes.func,\n  /** Message when error happens */\n  errorMessage: PropTypes.string.isRequired,\n  /** Maximum number the quantity can be selected up to */\n  max: PropTypes.number.isRequired,\n  /** Minimum number the quantity can be selected down to */\n  min: PropTypes.number,\n  /** Default value of the input field */\n  defaultValue: PropTypes.number,\n  /** Sets the disabled state of the button */\n  disabled: PropTypes.bool,\n  /** Screenreader labels for sub-elements */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for \"increment\" double left chevron button */\n    increment: PropTypes.string,\n    /** Screen reader label for \"decrement\" double left chevron button */\n    decrement: PropTypes.string\n  })\n};\n","import { FormElement } from '@ux/form-element';\n\n/**\n * Interface for creating radio elements. Note: this code is also used by React Native to set the type\n * of the Form Element component.\n *\n * @displayName Radio\n * @class Radio\n * @public\n */\nexport class Radio extends FormElement {\n  constructor(...args) {\n    super(...args);\n\n    this.type = 'radio';\n    this.isFlip = true;\n  }\n\n  render() {\n    return super.render();\n  }\n}\n\nexport default Radio;\n","import Fieldset from '@ux/fieldset';\nimport Group from '@ux/form-group';\nimport React from 'react';\n\n/**\n * Render a field set with multiple grouped radio elements.\n *\n * @displayName RadioGroup (Web)\n * @class RadioGroup\n * @public\n */\nexport default class RadioGroup extends Group {\n  /**\n   * Return type of input element.\n   *\n   * @returns {string} input type.\n   * @private\n   */\n  get type() {\n    return 'radio';\n  }\n\n  /**\n   * Render the group.\n   *\n   * @returns {ReactElement} Fieldset element.\n   * @private\n   */\n  render() {\n    const props = this.props;\n\n    //\n    // If a non-default design is desired for the component inputs\n    // we need to add some attributes to the div we wrap them in.\n    //\n    const optional = props.design === 'base' ? {} : {\n      'className': 'btn-group',\n      'data-toggle': 'buttons'\n    };\n\n    return (\n      <Fieldset proxy={ !!props.proxy }>\n        <div role='group' { ...optional }>\n          { props.children }\n          { this.inputs() }\n        </div>\n      </Fieldset>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A small component that follows the same API of the React-Intl\n * <FormattedMessage /> component so we can use this as fallback for when people\n * don't supply their own <FormattedMessages /> component for translations.\n *\n * @class FallbackMessage\n * @displayName Fallback Message\n */\nexport default class FallbackMessage extends Component {\n  /**\n   * Render of the react component\n   * @returns {React.DOM} Rendered component\n   */\n  render() {\n    const values = this.props.values;\n    let message = this.props.message || '{remaining}';\n\n    for (const prop in values) {\n      if (Object.prototype.hasOwnProperty.call(values, prop)) {\n        message = message.replace(new RegExp('{' + prop + '}', 'g'), values[prop]);\n      }\n    }\n\n    return <span>{message}</span>;\n  }\n}\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nFallbackMessage.propTypes = {\n  /** Message to display */\n  message: PropTypes.node,\n  /** Properties to display */\n  values: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormElement } from '@ux/form-element';\nimport FallbackMessage from './fallback';\n\n/**\n * Render an input with `n` characters remaining feedback.\n *\n * @class Remaining\n * @displayName Remaining\n */\nexport class Remaining extends FormElement {\n  /**\n   * Getter that returns data for message.\n   *\n   * @returns {Object} Returns component properties\n   * @private\n   */\n  get data() {\n    const props = this.props;\n    const length = this.select('value', '').length;\n\n    return {\n      message: props.notice,\n      values: {\n        remaining: props.maxLength - length,\n        length: length\n      }\n    };\n  }\n\n  /**\n   * Override `select` to always return the remaining message property. This will render the\n   * remaining message or fallback component as the `notice` message. This works because\n   * `notice` is rendered in the same location below the input as the remaining message.\n   *\n   * @param {string} name Property name\n   * @returns {React.DOM} Rendered element\n   * @private\n   */\n  select(name) {\n    if (name === 'notice') {\n      const { notice } = this.props;\n\n      return typeof notice === 'object'\n        ? React.cloneElement(notice, this.data)\n        : <FallbackMessage { ...this.data } />;\n    }\n\n    return super.select(...arguments);\n  }\n\n  /**\n   * Stubbed render function that calls the super render\n   * @returns {React.DOM} Rendered component\n   */\n  render() { return super.render(); }\n}\n\n/**\n * Default properties.\n *\n * @type {Object}\n * @private\n */\nRemaining.defaultProps = {\n  ...FormElement.defaultProps,\n  maxLength: 32\n};\n\n/**\n * PropType validation\n *\n * @type {Object}\n * @private\n */\nRemaining.propTypes = {\n  /** Max length for the input field */\n  maxLength: PropTypes.number,\n  ...FormElement.propTypes\n};\n\nexport default Remaining;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropdownItem } from '@ux/dropdown';\n\nconst DefaultItem = ({ item, onSelect, selected }) => {\n  return (\n    <DropdownItem onClick={ () => { onSelect(item); return true; } } active={ selected } >\n      { item }\n    </DropdownItem>\n  );\n};\n\nDefaultItem.defaultProps = {\n  onSelect: () => {}\n};\n\nDefaultItem.propTypes = {\n  item: PropTypes.string.isRequired,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool\n};\n\nexport default DefaultItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rip from 'rip-out';\nimport escapeRegExp from 'lodash.escaperegexp';\nimport debounce from 'debounce';\nimport Button from '@ux/button';\nimport FormElement from '@ux/form-element';\nimport SearchIcon from '@ux/icon/search';\nimport { classNames, scrollIntoViewIfNeeded } from '@ux/component-utilities';\nimport DefaultItem from './default-item';\n\nconst has = Object.prototype.hasOwnProperty;\n\n/**\n* Default aria-labels\n*/\nconst DEFAULT_ARIA_LABELS = {\n  searchLabel: 'Search box',\n  searchButton: 'Search button'\n};\n\n/**\n * Define propTypes to prevent removal for PROD builds.\n *\n * @type {Object}\n * @private\n */\nconst propTypes = {\n  /** AutoComplete setting for the form element, only applicable if no data is present */\n  autoComplete: PropTypes.string,\n  /** Button will be included */\n  button: PropTypes.bool,\n  /** Text to include on button */\n  buttonText: PropTypes.node,\n  /** Sets button type, defaults to submit. */\n  buttonType: PropTypes.oneOf(['submit', 'button']),\n  /** Classes applied */\n  className: PropTypes.string,\n  /** When true, a clear button will be shown when there's content in the searchbox, when Func, the higher order component wrapping searchBox should manage state.value to clear content. */\n  clearable: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  /** The current filtered subset of props.data being displayed for any filter */\n  data: PropTypes.array,\n  /** Debounce your inputs for fast react */\n  debounce: PropTypes.number,\n  /** This flag determines if the results should be shown when the list has been truncated using the maxResults property. When true the flyout will remain hidden until the number of filtered results is less than equal to maxResults */\n  hideTruncatedResults: PropTypes.bool,\n  /** The active filter of the instance. This will only change after any potential debouncing has occurred.*/\n  filter: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  /** This indicates that a button has to be rendered on the right side of the searchbox and indicates the icon name that should be displayed */\n  icon: PropTypes.oneOfType([PropTypes.bool, PropTypes.elementType]),\n  /** Unique id to pass to the FormElement Component */\n  id: PropTypes.string,\n  /** A max number of results to return. */\n  maxResults: PropTypes.number,\n  /** A change handler triggered whenever the input value changes. */\n  onChange: PropTypes.func,\n  /** Handles onchange event for the searchbox. Sets up states and decides filtered data. */\n  onFilter: PropTypes.func,\n  /** Callback function that is sent to each rendered item. It is triggered on-select of the item or if `onSearch` is not provided and search is triggered. */\n  onSelect: PropTypes.func,\n  /** An event handler triggered when the search is triggered. If not provided, `onSelect` is called. */\n  onSearch: PropTypes.func,\n  /** Placeholder text to be displayed in the searchbox */\n  placeholder: PropTypes.string,\n  /** If set, will be invoked to render each item in props.data. */\n  renderItem: PropTypes.func,\n  /** Allow the search to be cleared externally */\n  reset: PropTypes.bool,\n  /** Provide some results when query returns empty */\n  resultsOnEmpty: PropTypes.bool,\n  /** Size of the component */\n  size: PropTypes.string,\n  /** If data is an object, the value of this property determines the name of the property that holds the string to filter through */\n  text: PropTypes.string,\n  /** Function called on each piece of data to transform it into a string. */\n  transform: PropTypes.func,\n  /** The value for input. */\n  value: PropTypes.string,\n  /** Screenreader labels for search */\n  ariaLabels: PropTypes.shape({\n    /** Screen reader label for search input bar.  */\n    searchLabel: PropTypes.string,\n    /** Screen reader label for search button when it doesn't have text in it. Used when only icon is used */\n    searchButton: PropTypes.string\n  })\n};\n\n/**\n * Search control creates an input control that filters a provided list of objects.\n *\n * @displayName Search\n * @class Search\n * @public\n */\nclass Search extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onElementValueChange = this.onElementValueChange.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSelected = this.onSelected.bind(this);\n    this.builtInFilter = this.builtInFilter.bind(this);\n    this.builtInTransform = this.builtInTransform.bind(this);\n    this.clear = this.clear.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.setStateAndClose = this.setStateAndClose.bind(this);\n    this.preventBlur = this.preventBlur.bind(this);\n\n    if (this.props.debounce) {\n      this.onFilterChange = debounce(this.onFilterChange, this.props.debounce);\n    }\n\n    // initial state\n    this.state = this.state || {};\n    this.state = {\n      ...this.state,\n      data: [],\n      filter: '',\n      keyboardSelectionIndex: -1,\n      open: false,\n      preventBlur: false,\n      suggestion: '',\n      suggestionEnabled: this.shouldEnableSuggestion(this.props),\n      value: this.props.value\n    };\n  }\n\n  /**\n   * @returns {function} Transformation function that can be used to transform a datum to a string.\n   */\n  get transform() {\n    return typeof this.props.transform === 'function'\n      ? this.props.transform\n      : this.builtInTransform;\n  }\n\n  /**\n   * Apply filtering to data.\n   *\n   * @param {string} dataArray the data array to filter. It can be an array of string or an array of objects.\n   * @param {string} value the string to filter data by. Uses state.filter by default\n   * @returns {array} an array containing data that was not filtered out\n   * @private\n   */\n  applyFilter(dataArray, value) {\n    if (!value && !this.props.resultsOnEmpty) { return []; }\n\n    const { transform } = this;\n\n    const customFilter = typeof this.props.filter === 'function';\n    const { maxResults, hideTruncatedResults } = this.props;\n    const results = [];\n    let numResults = 0;\n\n    dataArray.every(data => {\n      const includeItem = customFilter\n        ? this.props.filter(data, value)\n        : this.builtInFilter(transform(data), value);\n\n      if (includeItem) {\n        results.push(data);\n        numResults++;\n      }\n      return hideTruncatedResults\n        ? numResults <= maxResults // allow overrun by one to detect exceeding maxResults\n        : numResults < maxResults;\n    });\n\n    return (hideTruncatedResults && numResults > maxResults)\n      ? []\n      : results;\n  }\n\n  /**\n   * Transform a datum into a string that can be used for rendering and filtering.\n   *\n   * @param {string|Object} datum The datum to transform.\n   * @returns {string} A string representation of the datum, or undefined.\n   * @private\n   */\n  builtInTransform(datum) {\n    if (typeof datum === 'string') return datum;\n    const key = this.props.text || null;\n\n    if (has.call(datum, key)) {\n      return datum[key].toString();\n    }\n  }\n\n  /**\n   * Performs the filter operation on `props.filter` taking into account the default\n   * states (startsWith, endsWith, and includes).\n   *\n   * @param   {string} datum Item within `props.data` to potentially include in results\n   * @param   {string} value Current search value\n   * @returns {boolean} Value indicating if `datum` should be included in results.\n   */\n  builtInFilter(datum, value) {\n    if (!datum) return false;\n\n    const lowerDatum = datum.toLowerCase();\n    const lowerValue = (value || '').toLowerCase();\n    let { startsWith, endsWith, includes } = this.props.filter || {};\n    if (!startsWith && !endsWith && !includes) {\n      startsWith = true;\n      endsWith = true;\n    }\n\n    const firstIndex = lowerDatum.indexOf(lowerValue);\n    if ((startsWith && firstIndex === 0)\n      || (includes && ~firstIndex)) {\n      return true;\n    }\n\n    const lastIndex = lowerDatum.lastIndexOf(lowerValue);\n    if (endsWith && lastIndex !== -1 && lastIndex === lowerDatum.length - lowerValue.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * clears the control.\n   *\n   * @private\n   */\n  clear() {\n    this.onFilterChange('');\n  }\n\n  /**\n   * Returns suggestion based on passed in data and filter.\n   *\n   * @param {string} data the data array to suggest from\n   * @param {string} value the string to filter data by. Uses state.filter by default\n   * @returns {string} suggested text\n   * @private\n   */\n  getSuggestion(data, value) {\n    value = value || this.state.filter;\n    if (this.state.keyboardSelectionIndex >= 0) {\n      const item = data[this.state.keyboardSelectionIndex];\n      return item ? this.transform(item) : '';\n    }\n\n    const transformedData = data.map(this.transform);\n    const escapedValue = escapeRegExp(value);\n    const reg = new RegExp('\\\\b' + escapedValue + '\\\\w*\\\\b', 'gi');\n    const lowerValue = value.toLowerCase();\n\n    for (let i = 0; i < transformedData.length; i++) {\n      if (!transformedData[i] || transformedData[i].toLowerCase() === lowerValue) continue;\n      const matches = transformedData[i].match(reg);\n\n      if (matches) return transformedData[i];\n    }\n    return '';\n  }\n\n  /**\n   * Sets up states and decides filtered data.\n   *\n   * @param {string} value the string to filter data by. Defaults to state.filter\n   * @returns {Array} filtered data\n   * @private\n   */\n  filterBy(value) {\n    let filteredData = [];\n    value = (value || value === '') ? value : this.state.filter;\n    if (value || this.props.resultsOnEmpty) {\n      filteredData = this.applyFilter(this.props.data, value.toLowerCase());\n    }\n\n    const suggestion = this.state.suggestionEnabled\n      ? this.getSuggestion(filteredData, value)\n      : '';\n\n    this.setState({\n      suggestion: suggestion,\n      open: filteredData.length > 0,\n      data: filteredData,\n      filter: value,\n      value\n    });\n\n    this.props.onFilter(value, filteredData);\n    return filteredData;\n  }\n\n  /**\n   * Prevents the component from triggering onBlur, ie: when you click on a list\n   * item.\n   *\n   * @private\n   */\n  preventBlur() {\n    this.setState({ preventBlur: true });\n  }\n\n  /**\n   * Invokes `setState` with the `extraState` provided along with the\n   * necessary state to close this instance. Reduces duplication of these\n   * properties throughout the code.\n   *\n   * @param {Object} extraState Additional state information to set with close.\n   */\n  setStateAndClose(extraState) {\n    this.setState({\n      ...extraState,\n      open: false,\n      preventBlur: false,\n      suggestion: this.state.suggestion\n    });\n  }\n\n  /**\n   * Checks if suggestions should be enabled.\n   *\n   * @param {Object} props Properties (this.props or nextProps) to determine if suggestion should be enabled.\n   * @returns {bool} Returns true only if the filter is startsWith exclusively, otherwise false\n   */\n  shouldEnableSuggestion(props) {\n    const { filter } = props;\n    return filter\n      && typeof filter === 'object'\n      && filter.startsWith\n      && !filter.includes\n      && !filter.endsWith;\n  }\n\n  /**\n   * Handles the arrows keyboard action.\n   *\n   * @param {object} e Event object sent from the browser\n   * @private\n   */\n  onArrowUpDown(e) {\n    if (!this.state.open) { return; }\n\n    let { keyboardSelectionIndex } = this.state;\n    const delta = e.key === 'ArrowDown' ? 1 : -1;\n\n    if (keyboardSelectionIndex === -1 && e.key === 'ArrowUp') {\n      keyboardSelectionIndex = 0;\n    }\n\n    keyboardSelectionIndex += delta;\n\n    // Wraparound of keyboardSelectionIndex to be within [0..data.length-1] range\n    const dataLength =  this.state.data.length;\n    keyboardSelectionIndex = (keyboardSelectionIndex + dataLength) % dataLength;\n\n    this.setState({\n      keyboardSelectionIndex,\n      suggestion: keyboardSelectionIndex >= 0\n        ? this.transform(this.state.data[keyboardSelectionIndex])\n        : this.state.suggestion\n    });\n\n    if (this.listContainer && this.listContainer.childNodes[keyboardSelectionIndex]) {\n      scrollIntoViewIfNeeded(this.listContainer.childNodes[keyboardSelectionIndex]);\n    }\n\n    e.preventDefault();\n  }\n\n  /**\n   * A change handler triggered whenever the component blurs (is deselected).\n   *\n   * @private\n   */\n  onBlur() {\n    setTimeout(() => {\n      if (!this.state.preventBlur) {\n        this.setStateAndClose({\n          suggestion: '',\n          keyboardSelectionIndex: -1\n        });\n      }\n    }, 1);\n  }\n\n  /**\n   * Handles onchange event for the searchbox. Gets the value from the event and calls\n   * the actual (possibly debounced) handler onFilterChange()\n   *\n   * @param {object} ev the event object sent from the browser\n   * @private\n   */\n  onElementValueChange(ev) {\n    const value = ev.target.value;\n    this.setState({ value });\n    this.onFilterChange(value);\n  }\n\n  /**\n   * Handles onchange event for the searchbox. Sets up states and decides filtered data.\n   *\n   * @param {string} value new input field value\n   * @private\n   */\n  onFilterChange(value) {\n    const filteredData = this.filterBy(value);\n    this.setState({ keyboardSelectionIndex: -1 });\n    this.props.onChange(value, filteredData);\n  }\n\n  /**\n   * Handles focus for the searchbox.\n   *\n   * @private\n   */\n  onFocus() {\n    this.filterBy(this.state.value);\n    this.setState({\n      open: this.props.resultsOnEmpty || this.state.data.length > 0,\n      preventBlur: false\n    });\n  }\n\n  /**\n   * Fill the textbox when the right arrow is clicked and a suggestion exists.\n   *\n   * @param {object} e Event object sent from the browser\n   * @private\n   */\n  onKeyDown(e) {\n    if (!this.formElement) return;\n    const suggestion = this.state.suggestion;\n\n    switch (e.key) {\n\n      case 'ArrowRight':\n        if (!this.state.suggestionEnabled || !this.state.suggestion) return;\n        this.setState({\n          suggestion: '',\n          value: suggestion\n        });\n        this.filterBy(suggestion);\n        break;\n\n      case 'Enter': {\n        const { keyboardSelectionIndex } = this.state;\n        if (this.state.keyboardSelectionIndex >= 0) {\n          const item = this.state.data[keyboardSelectionIndex];\n          const value = this.transform(item);\n          this.setStateAndClose({\n            value,\n            suggestion: ''\n          });\n\n          if (this.props.onSelect) {\n            this.props.onSelect(value);\n          }\n        } else {\n          this.onSelected();\n        }\n\n        break;\n      }\n\n      case 'ArrowDown':\n      case 'ArrowUp':\n        this.onArrowUpDown(e);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Callback function that is sent to each rendered item. It is triggered\n   * on-select of the item.\n   *\n   * @param {string} value the string that was selected\n   * @param {bool} isSearch determines whether to call the `onSearch` or `onSelect` callback\n   * @private\n   */\n  onSelect(value, isSearch = false) {\n    this.filterBy(value);\n    this.setState({\n      open: false,\n      suggestion: ''\n    });\n\n    if (isSearch && this.props.onSearch) {\n      this.props.onSearch(value);\n    } else if (this.props.onSelect) {\n      this.props.onSelect(value);\n    }\n  }\n\n  /**\n   * Called when the button is clicked. This action is equivalent to a selection.\n   *\n   * @private\n   */\n  onSelected() {\n    this.onSelect(this.state.value, true);\n  }\n\n  /**\n    * When props change check to see if suggestionEnabled needs to be changed.\n    *\n    * @param {Object} prevProps All props being set on this instance.\n    * @private\n    */\n  componentDidUpdate(prevProps) {\n    const nextState = {};\n    let filter = this.state.value;\n\n    if (this.props.value !== prevProps.value) {\n      filter = this.props.value;\n    }\n\n    if (prevProps.data !== this.props.data) {\n      nextState.data = this.props.data;\n    }\n\n    if (prevProps.filter !== this.props.filter) {\n      nextState.suggestionEnabled = this.shouldEnableSuggestion(this.props);\n    }\n\n    if (this.props.reset) {\n      filter = '';\n    }\n\n    if (Object.keys(nextState).length) {\n      this.setState(nextState, () => {\n        if (nextState.data || this.props.reset) {\n          this.filterBy(filter);\n        }\n      });\n    } else if (this.props.reset && this.state.value) {\n      this.filterBy(filter);\n    }\n  }\n\n  /**\n    * Only update on change to props if data, filter, open or reset changed.\n    *\n    * @param  {Object} nextProps All props being set on this instance.\n    * @param  {Object} nextState All state properties for upcoming setState\n    * @returns {bool} Returns true if data, filter, open or reset changed\n    */\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.reset\n      || this.props.data !== nextProps.data\n      || this.props.filter !== nextProps.filter\n      || this.state.data !== nextState.data\n      || this.state.value !== nextState.value\n      || this.state.open !== nextState.open\n      || this.props.className !== nextProps.className\n      || (nextState.open && this.state.keyboardSelectionIndex !== nextState.keyboardSelectionIndex);\n  }\n\n  /**\n   * Render a button when buttontext or button is defined.\n   *\n   * @returns {JSX} Button Searchbox button component\n   * @private\n   */\n  renderButton() {\n\n    let Icon;\n    if (this.props.icon || this.props.button) {\n      Icon = SearchIcon;\n      if (typeof this.props.icon !== 'boolean') {\n        Icon = this.props.icon;\n      }\n    }\n\n    let size;\n    if (this.props.size === 'small') {\n      size = 'small';\n    }\n\n    return (\n      Icon &&\n      <Button\n        aria-label={ !this.props.buttonText ? this.props.ariaLabels.searchButton : null }\n        design='primary'\n        icon={ <Icon/> }\n        type={ this.props.buttonType }\n        onClick={ this.onSelected }\n        size={ size }\n        text={ this.props.buttonText }\n      />\n    );\n  }\n\n  /**\n   * Render the list items based.\n   *\n   * @returns {JSX} the list component\n   */\n  renderList() {\n    if (this.state.open) {\n      const { keyboardSelectionIndex } = this.state;\n      const { transform } = this;\n\n      return (\n        <div role='listbox'\n          tabIndex='-1'\n          className='ux-search-list-container dropdown-menu'\n          onMouseDown={ this.preventBlur }\n          id={ `${this.props.id}-listBox` }\n          ref={ (c) => { this.listContainer = c; } }>\n          {\n            this.state.data.map((item, index) => {\n              if (typeof this.props.renderItem === 'function') {\n                return this.props.renderItem(transform(item), index, this.onSelect, item, index === keyboardSelectionIndex);\n              }\n\n              return (\n                <DefaultItem\n                  role='option'\n                  key={ index }\n                  item={ transform(item) }\n                  onSelect={ this.onSelect }\n                  selected={ index === keyboardSelectionIndex } />\n              );\n            })\n          }\n        </div>\n      );\n    }\n  }\n\n  /**\n   * Get the suggestion div.\n   *\n   * @returns {JSX} the lookahead component\n   * @private\n   */\n  renderLookAhead() {\n    const filter = this.state.filter || '';\n    const suggestion = this.state.suggestion;\n\n    if (!suggestion) return '';\n\n    const remainder = suggestion.substring(filter.length);\n    return (\n      <div\n        aria-hidden='true'\n        tabIndex='-1'\n        onKeyDown={ this.onKeyDown }\n        onMouseDown={ this.preventBlur }\n        onClick={ () => { if (this.formElement) this.formElement.elements.input.focus(); } }\n        className='ux-search-lookahead'>\n        <span style={{ visibility: 'hidden' }}>{ filter }</span>{ remainder }\n      </div>\n    );\n  }\n\n  render() {\n    const { placeholder, clearable, className, ariaLabels, ...props } = this.props;\n    const { suggestion, suggestionEnabled, value, open } = this.state;\n    const unknownProps = rip(props, ...Object.keys(propTypes));\n    const clsx = classNames('input-group', 'ux-search', className, { open });\n\n    const placeholderText = !suggestion.length || !suggestionEnabled\n      ? placeholder\n      : '';\n\n    const autoComplete = props.autoComplete || (props.data && props.data.length ? 'off' : 'on');\n    const dataLength = props.data && props.data.length;\n\n    return (\n      <div role={ dataLength ? 'combobox' : 'search' }\n           aria-haspopup={ dataLength ? 'listbox' : null }\n           aria-expanded={ open ? 'true' : 'false' }\n           aria-owns={ `${props.id}-listBox` }\n           className={ clsx } { ...unknownProps }>\n        <FormElement\n          aria-label={ ariaLabels.searchLabel }\n          aria-controls={ `${props.id}-listBox` }\n          aria-autocomplete='list'\n          label=''\n          id={ props.id }\n          value={ value }\n          name='searchText'\n          autoComplete={ autoComplete }\n          ref={ c => { this.formElement = c; } }\n          className='form-control'\n          onChange={ this.onElementValueChange }\n          onKeyDown={ this.onKeyDown }\n          onFocus={ this.onFocus }\n          onBlur={ this.onBlur }\n          placeholder={ placeholderText }\n          size={ this.props.size }\n          clearable={ clearable === true ? this.clear : clearable } />\n\n        { suggestionEnabled && this.renderLookAhead() }\n        { this.renderList() }\n\n        <span className='input-group-btn'>\n          { this.renderButton() }\n        </span>\n      </div>\n    );\n  }\n}\n\n/**\n * Property validation.\n *\n * @type {Object}\n * @public\n */\nSearch.propTypes = propTypes;\n\n/**\n * Default properties of the control\n *\n * @type {Object}\n * @public\n */\nSearch.defaultProps = {\n  button: false,\n  buttonText: '',\n  buttonType: 'submit',\n  className: '',\n  clearable: true,\n  data: [],\n  debounce: 0,\n  hideTruncatedResults: false,\n  icon: SearchIcon,\n  filter: { startsWith: true },\n  maxResults: Infinity,\n  onChange: function () {},\n  onFilter: function () {},\n  onSelect: function () {},\n  placeholder: '',\n  reset: false,\n  renderItem: null,\n  resultsOnEmpty: false,\n  size: 'default',\n  text: '',\n  value: '',\n  ariaLabels: DEFAULT_ARIA_LABELS\n};\n\nexport {\n  Search as default,\n  DefaultItem\n};\n","import PropTypes from 'prop-types';\nimport Component from '@ux/component';\n\n/**\n * Base class that contains the rating, count and onClick of a Star\n *\n * @class Base\n * @constructor\n * @extends React.Component\n */\nexport default class Base extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...this.state,\n      rating: props.rating,\n      count: props.count\n    };\n  }\n\n  /**\n  * Sets state with rating star index.\n  * @param {Function} func callback.\n  * @param {number} star Selected stars.\n  * @returns {Function} generateOnClick event\n  * @private\n  */\n  generateOnClick(func, star) {\n    return () => {\n      this.setState({ rating: star });\n      func(star);\n    };\n  }\n\n  /**\n   * Returns string with value of text rating.\n   *\n   * @returns {string} Rating text.\n   * @private\n   */\n  renderText() {\n    const { rating, count } = this.state;\n    return this.props.text ? `${ rating } / ${ count }` : '';\n  }\n}\n\nBase.propTypes = {\n  /** Flag stating whether an <h1> tag should be rendered indicating the current rating.*/\n  text: PropTypes.bool,\n  /** The current star rating to be rendered*/\n  rating: PropTypes.number,\n  /** Total number of stars*/\n  count: PropTypes.number\n};\n\nBase.defaultProps = {\n  text: true,\n  rating: 3,\n  count: 5\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Base from './base';\nimport Star from '@ux/icon/star';\nimport StarOutline from '@ux/icon/star-outline';\n\n/**\n* Default aria-labels\n*/\nconst DEFAULT_ARIA_LABELS = {\n  star: 'Star',\n  rateThis: 'Rate this'\n};\n\n/**\n * UXCore based Stars. Stars will always start with\n * an initial state given by the `rating` and `count` props, isHovering and hovered index(default is 0)\n *\n * @constructor\n */\nexport default class Stars extends Base {\n  constructor(props) {\n    super(props);\n\n    this.onInputKeyDown = this.onInputKeyDown.bind(this);\n\n    this.state = {\n      ...this.state,\n      isHovering: false,\n      hovered: props.rating\n    };\n  }\n\n  /**\n   * Gets className based on index for either hovering or rating star.\n   *\n   * @param {number} index of Star to retrieve className for.\n   * @returns {string} 'checked' or 'unchecked' class name.\n   * @private\n   */\n  _getClassName(index) {\n    const { isHovering, hovered, rating } = this.state;\n    const value = isHovering ? hovered : rating;\n    return index <= value ? 'checked' : 'unchecked';\n  }\n\n  /**\n   * Sets state with isHovering and hovered index.\n   *\n   * @param {Event} evt Mouse Event.\n   * @param {Number} i Selected index.\n   * @private\n   */\n  handleMouseOver(evt, i) {\n    this.setState({\n      isHovering: true,\n      hovered: i\n    });\n  }\n\n  /**\n   * Sets state with isHovering(false) and hovered index.\n   *\n   * @private\n   */\n  handleMouseOut() {\n    this.setState({\n      isHovering: false,\n      hovered: 0\n    });\n  }\n\n  /**\n   * Handles the keyboard events to increment or decrement this instance.\n   * @param  {Event} event Keyboard input event from the browser.\n   */\n  onInputKeyDown(event) {\n    const { count, hovered } = this.state;\n    const key = event.key;\n    const safelistKeys = [\n      '+',\n      '-',\n      'ArrowUp',\n      'ArrowLeft',\n      'ArrowRight',\n      'ArrowDown',\n      'Enter'\n    ];\n\n    event.preventDefault();\n\n    if (~safelistKeys.indexOf(key)) {\n      event.stopPropagation();\n\n      if (key !== 'Enter') {\n        const isIncrementing = (key === 'ArrowUp' || key === 'ArrowRight' || key === '+');\n        const incrementedHoverIndex = isIncrementing ? hovered + 1 : hovered - 1;\n\n        if ((incrementedHoverIndex >= 0) && (incrementedHoverIndex <= count)) {\n          this.setState({ hovered: incrementedHoverIndex });\n        }\n\n      } else {\n        this.setState({ rating: hovered });\n      }\n    }\n  }\n\n  /**\n   * Returns an array of stars (with classNames) based on rating index or hovered index.\n   *\n   * @returns {Array} Rendered stars.\n   * @private\n   */\n  renderStars() {\n    const stars = [];\n    for (let i = 1; i <= this.state.count; i++) {\n      const starType = this._getClassName(i) === 'checked' ? <Star /> : <StarOutline />;\n\n      stars.push(\n        <span role='button'\n          aria-label={ this.props.ariaLabels.star }\n          key={ i }\n          onKeyDown={ this.onInputKeyDown }\n          tabIndex={ this.props.tabIndex }\n          onClick={ this.generateOnClick(this.props.onRatingClick, i) }\n          className={ `ux-stars-item ${this._getClassName(i)}` }\n          onMouseEnter={ evt => {this.handleMouseOver(evt, i);} }\n          onMouseLeave={ evt => {this.handleMouseOut(evt, i);} }>\n          { starType }\n        </span>\n      );\n    }\n\n    return stars;\n  }\n\n  /**\n   * Render the Stars Component.\n   *\n   * @returns {ReactElement} Stars element.\n   * @private\n   */\n  render() {\n    const { rating, count } = this.state;\n\n    return (\n      <div className='ux-stars'\n        aria-label={ this.props.ariaLabels.rateThis }\n        role='slider'\n        tabIndex={ this.props.tabIndex }\n        aria-valuenow={ rating }\n        aria-valuemin={ this.props.rating }\n        aria-valuemax={ count }\n        aria-valuetext={ `${ rating } out of ${ count } stars` }>\n        <p className='ux-stars-title'>\n          { this.props.title }\n        </p>\n        <span\n          className='ux-stars-rating'>\n          { this.renderStars() }\n        </span>\n        <span className='ux-stars-numbers'>\n          { this.renderText() }\n        </span>\n      </div>\n    );\n  }\n}\n\nStars.propTypes = {\n  ...Base.propTypes,\n  /** Function to be called when a star is clicked. Callback gets the number of the clicked star on passed in.*/\n  onRatingClick: PropTypes.func.isRequired,\n  /** Title of the star rating */\n  title: PropTypes.string,\n  /** Tab index for whole React Element*/\n  tabIndex: PropTypes.oneOf([-1, 0]),\n  /** Overridable aria-label text */\n  ariaLabels: PropTypes.shape({\n    /** Aria-label for stars */\n    star: PropTypes.string,\n    /** aria-label for outer rating */\n    rateThis: PropTypes.string\n  })\n};\n\nStars.defaultProps = {\n  ...Base.defaultProps,\n  title: '',\n  tabIndex: 0,\n  startTabIndex: 0,\n  ariaLabels: DEFAULT_ARIA_LABELS\n};\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\n//\n// Set of functions required for sorting Table rows.\n//\nexport default class Sortable extends Component {\n  constructor(props = {}) {\n    super(...arguments);\n\n    this.sort = this.sort.bind(this);\n\n    this.state = {\n      data: (props.data || []).slice()\n    };\n  }\n\n  /**\n   * Immutably assign `data` into our `state` if it exists in `this.props`.\n   * @param  {Object} prevProps Previous properties to be set on this instance.\n   */\n  componentDidUpdate(prevProps) {\n    if (this.props && Array.isArray(this.props.data) && prevProps.data !== this.props.data) {\n      const newData = this.props.data.slice();\n      if (this.state.comparator) {\n        newData.sort(this.state.comparator);\n      }\n      this.setState({ data: newData });\n    }\n  }\n\n  /**\n   * Simple helper to spread the required stateful sortable properties to child\n   * Components, data is not provided to allow more developer control.\n   *\n   * @returns {Object} Sortable properties\n   * @public\n   */\n  getSortableProps() {\n    const { state: { active, direction }, sort: sortable } = this;\n\n    return {\n      direction,\n      sortable,\n      active\n    };\n  }\n\n  /**\n   * Set the sort order for the provided column. Ascending `asc` is the default\n   * and will be initialy set. Descending `desc` will invert the sort order.\n   * The column will be compared to the active sorting colum to determine the\n   * order state.\n   *\n   * @param {String} column Name of the current sorting column.\n   * @returns {Number} Sort order, either ascending (1) or descending (-1).\n   * @private\n   */\n  flip(column) {\n    const state = this.state || {};\n    let dir = state.direction || 1;\n\n    if (typeof dir === 'string') dir = dir === 'asc' ? 1 : -1;\n    return state.active !== column ? 1 : -1 * dir;\n  }\n\n  /**\n   * Sort by the provided column.\n   *\n   * @param {String} column Name of the current sorting column.\n   * @public\n   */\n  sort(column) {\n    const dir = this.flip(column);\n    const { state, props } = this;\n    const defaultComparator = function defaultComparator(a, b) {\n      if (a[column] > b[column]) return dir * 1;\n      if (a[column] < b[column]) return dir * -1;\n\n      return 0;\n    };\n\n    const comparator = typeof props.sortable === 'function' ? props.sortable(dir, column) : defaultComparator;\n\n    this.setState({\n      active: column,\n      direction: dir,\n      comparator,\n      data: state.data.slice().sort(comparator)\n    });\n  }\n}\n\n/**\n * Allowed properties for Sortable.\n *\n * @enum {Object} Properties.\n * @public\n */\nSortable.propTypes = {\n  data: PropTypes.array,\n  sortable: PropTypes.oneOfType([PropTypes.bool, PropTypes.func])\n};\n","import Sortable from './sortable';\nimport React from 'react';\n\n//\n// Set of mixins that handle rendering of childs. This allows mixing\n// regular HTML children with React Elements.\n//\nexport default class Collection extends Sortable {\n  /**\n   * Determine if the element is allowed to pass sortable properties.\n   *\n   * @param {ReactElement} element ReactElement.\n   * @param {Object} options Predefined set of properties.\n   * @returns {Object} extended properties.\n   * @private\n   */\n  sortableChild(element, options = {}) {\n    const { props = {}, state = {} } = this;\n    const sort = props.sortable;\n    const elementType = element.type;\n\n    options.direction = state.direction || props.direction;\n    options.active = state.active || props.active;\n\n    this.setSortableOptionsForChild(options, sort, elementType);\n\n    return options;\n  }\n\n  /**\n   * Sets options.sortable if appropriate for the instance & child-type\n   *\n   * @param {Object} options The options object to set sortable on\n   * @param {Boolean|Function} sort The sort value from props\n   * @param {string} childElementType The child element type that is being considered\n   * @private\n   */\n  setSortableOptionsForChild(options, sort, childElementType) {\n    if (childElementType === 'th') {\n      options.sortable = sort;\n    }\n  }\n\n  /**\n   * Add additional properties to child elements by checking if proxy methods are available.\n   *\n   * @param {ReactElement} element React Table or any of its children.\n   * @param {Object} properties Non frozen object to receive sortable properties.\n   * @returns {ReactElement} enhanced ReactElement.\n   * @private\n   */\n  getProperties(element, properties = {}) {\n    const props = this.props || {};\n\n    if (props.sortable) {\n      this.sortableChild(element, properties);\n    }\n\n    return properties;\n  }\n\n  /**\n   * Render Element, either the provided HTML or a replacement React Element.\n   *\n   * @param {ReactElement} element ReactElement.\n   * @returns {ReactElement} rendered child element.\n   * @public\n   */\n  renderChildren(element) {\n    const Component = this.components && this.components[element.type];\n\n    if (!Component) {\n      return element;\n    }\n\n    return React.createElement(Component, { ...this.getProperties(element), ...element.props || {} });\n  }\n}\n","import React from 'react';\n\n/**\n * A table cell component\n *\n * @displayName Td\n * @param {Object} props passed in properties\n * @returns {React.Element} Rendered Td\n * @extends React.Component\n */\nexport default (props) => <td { ...props }></td>;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\nimport ChevronDown from '@ux/icon/chevron-down';\nimport ChevronUp from '@ux/icon/chevron-up';\nimport rip from 'rip-out';\n//\n// Create a table header Component.\n//\n/**\n * A table header column component\n *\n * @displayName Th\n * @class Th\n * @extends {Component}\n */\nexport default class Th extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  /**\n   * Call the sort method on the parent Table Component. The\n   * method sorts the current state by the property column.\n   *\n   * @param {Event} event Mouse click.\n   * @private\n   */\n  sort(event) {\n    const { sortable, column } = this.props;\n    sortable(column, event);\n  }\n\n  /**\n   * Call the sort method on the parent Table Component. The\n   * method sorts the current state by the property column.\n   *\n   * @param {Event} event onKeyDown.\n   * @private\n   */\n  handleKeyDown(event) {\n    const key = event.key;\n    const { sortable, column } = this.props;\n\n    if (key === 'Enter') {\n      sortable(column, event);\n    }\n  }\n\n  /**\n   * Create a plain table header.\n   *\n   * @returns {ReactElement} Table header cell.\n   * @private\n   */\n  plain() {\n    const props = rip(this.props, 'sortable');\n\n    return <th { ...props }></th>;\n  }\n\n  /**\n   * Create a table header with click event handling.\n   *\n   * @returns {ReactElement} Table header cell.\n   * @private\n   */\n  sortable() {\n    const {\n      active,\n      column,\n      direction,\n      className,\n      children,\n      showIcon,\n      style\n    } = this.props;\n    const dir = ~direction ? 'down' : 'up';\n    const iconVisible = (active && active === column) || showIcon;\n    const visibleClass = iconVisible ? 'visible' : 'invisible';\n    //\n    // Show sorting icon with the proper direction.\n    //\n\n    return <th\n      role='button'\n      className={ classNames(className, 'ux-table-sort') }\n      tabIndex='0'\n      onKeyDown={ this.handleKeyDown }\n      onClick={ this.sort }\n      style={ style }>\n      { children }\n      <span className={ `drop-up-down-icon ${visibleClass}` }>\n        { dir === 'down' ? <ChevronDown /> : <ChevronUp />}\n      </span>\n    </th>;\n  }\n\n  /**\n   * Render the sortable header with an optional click event\n   * that will sort the current column.\n   *\n   * @returns {ReactElement} Table header cell.\n   * @public\n   */\n  render() {\n    const { sortable, column } = this.props;\n    return sortable && column ? this.sortable() : this.plain();\n  }\n}\n\n/**\n * Allowed properties for Th.\n *\n * @enum {Object} Properties.\n * @public\n */\nTh.propTypes = {\n  /** Function to sort the data by the given column */\n  sortable: PropTypes.func,\n  /** Child components */\n  children: PropTypes.node,\n  /** The name of this column, gets passed to the sortable function */\n  column: PropTypes.string,\n  /** The name of the actively sorted column */\n  active: PropTypes.string,\n  /** The direction of the current sort */\n  direction: PropTypes.number,\n  /** The css classname to apply to the raw th element */\n  className: PropTypes.string,\n  /** Show the sorting indicator for sortable columns */\n  showIcon: PropTypes.bool,\n  /** Styles to apply to the element */\n  style: PropTypes.object\n};\n","import Collection from './collection';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Td from './td';\nimport Th from './th';\n\n//\n// Set of allowed child Components for the Table row.\n//\nconst COMPONENTS = {\n  td: Td,\n  th: Th\n};\n\n/**\n * A table row component\n *\n * @displayName Tr\n * @class Tr\n * @extends {Collection}\n */\nexport default class Tr extends Collection {\n  constructor() {\n    super(...arguments);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  /**\n   * Getter that returns the allowed children.\n   *\n   * @returns {Object} Components\n   * @private\n   */\n  get components() {\n    return COMPONENTS;\n  }\n\n  /**\n   * Private keydown event handler that translates `Enter` keypresses into click events\n   *\n   * @param {any} event The event of the keydown\n   * @private\n   */\n  onKeyDown(event) {\n    if (!this.props.enableKeyboard) return;\n    if (event.key === 'Enter') {\n      this.props.click(event);\n    }\n  }\n\n  /**\n   * Render a table row.\n   *\n   * @returns {ReactElement} Table row.\n   * @public\n   */\n  render() {\n    const { click, className, children, tabIndex, style } = this.props;\n    return <tr\n      onKeyDown={ this.onKeyDown }\n      onClick={ click }\n      className={ className }\n      tabIndex={ tabIndex }\n      style={ style }>\n      { React.Children.map(children, this.renderChildren, this) }\n    </tr>;\n  }\n}\n\n\nTr.propTypes = {\n  /** Child cells */\n  children: PropTypes.node,\n  /** Called when the row is clicked */\n  click: PropTypes.func,\n  /** Styles to apply to the element */\n  style: PropTypes.object,\n  /** ClassName to apply to the element */\n  className: PropTypes.string\n};\n","import Collection from './collection';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tr from './tr';\n\n//\n// Set of allowed child Components for the Table Body.\n//\nconst COMPONENTS = {\n  tr: Tr\n};\n\n/**\n * A component representing the THEAD element\n *\n * @displayName Thead\n * @class Thead\n * @extends {Collection}\n */\nexport default class Thead extends Collection {\n  /**\n   * Getter that returns the allowed children.\n   *\n   * @returns {Object} Components\n   * @private\n   */\n  get components() {\n    return COMPONENTS;\n  }\n\n  /**\n   * Sets options.sortable if appropriate for the instance & child-type\n   *\n   * @param {Object} options The options object to set sortable on\n   * @param {Boolean|Function} sort The sort value from props\n   * @param {string} childElementType The child element type that is being considered\n   * @private\n   */\n  setSortableOptionsForChild(options, sort, childElementType) {\n    if (childElementType === 'tr') {\n      options.sortable = sort;\n    }\n  }\n\n  /**\n   * Render a table head.\n   *\n   * @returns {ReactElement} Table head.\n   * @public\n   */\n  render() {\n    const { style, children, className } = this.props;\n    return <thead style={ style } className={ className }>\n      { React.Children.map(children, this.renderChildren, this) }\n    </thead>;\n  }\n}\n\nThead.propTypes = {\n  /** Child row */\n  children: PropTypes.node,\n  /** Styles to apply to the element */\n  style: PropTypes.object,\n  /** ClassName to apply to the element */\n  className: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport enu from 'enu';\nimport Tr from './tr';\nimport Td from './td';\n\n//\n// Set of allowed child Components for the Table Body.\n//\nconst COMPONENTS = {\n  tr: Tr\n};\n\n/**\n * A table body component\n *\n * @displayName Tbody\n * @class Tbody\n * @extends {React.Component}\n */\nexport default class Tbody extends React.Component {\n  constructor(props = {}) {\n    super(...arguments, props);\n\n    //\n    // Define a counter for tabIndexes on each cell.\n    //\n    this.tabIndex = 0;\n  }\n\n  /**\n   * Getter that returns the allowed children.\n   *\n   * @returns {Object} Components\n   * @private\n   */\n  get components() {\n    return COMPONENTS;\n  }\n\n  /**\n   * Iterate over each data row while using the iterator. A predefined ordered\n   * list of property references is used by default if it is available, otherwise\n   * columns are rendered in the order of properties on the object.\n   *\n   * @param {Function} iterator Function that generates the content.\n   * @param {Object} data Reference to the dataset.\n   * @returns {Array} Collection of ReactDOM elements.\n   * @private\n   */\n  compose(iterator, data) {\n    let collection = data;\n\n    if (!Array.isArray(data)) {\n      collection = this.props.order || Object.keys(data);\n    }\n\n    return collection.map(this[iterator](), data);\n  }\n\n  /**\n   * Return a row iterator.\n   *\n   * @returns {Function} Iterator that maps children into Tr elements.\n   * @private\n   */\n  row() {\n    const self = this;\n    const { click, enableKeyboard } = self.props;\n\n    /**\n     * Row iterator that expects to be called with the data as scope. Return\n     * elements that are already valid ReactElements.\n     *\n     * @param {String} item Property reference.\n     * @param {Number} i Index.\n     * @returns {ReactElement} Table row.\n     * @private\n     */\n    return function iterate(item, i) {\n      if (React.isValidElement(item)) return item;\n\n      //\n      // Extract the enumerable and non enumerable keys from the object so we\n      // which properties should be used for the cells and which for the actual\n      // properties.\n      //\n      const props = enu(item);\n      props.non.key = props.non._key || i;\n\n      //\n      // Assign an optional row click listener, pre-bind it to `item` so we get\n      // a reference to the clicked item.\n      //\n      if (click) {\n        props.non.click = function clack(evt) {\n          click(item, evt);\n        };\n      }\n      let rowProps = { ...props.non };\n\n      if (enableKeyboard) {\n        rowProps = { ...rowProps, tabIndex: 0, enableKeyboard };\n      }\n\n      return React.createElement(Tr, rowProps, self.renderCells(props.enu));\n    };\n  }\n\n  /**\n   * Return a cell iterator.\n   *\n   * @returns {Function} Iterator that maps children into Td elements.\n   * @private\n   */\n  cell() {\n    const self = this;\n\n    /**\n     * Cell iterator that expects to be called with the data as scope. Return\n     * elements that are already valid ReactElements.\n     *\n     * @param {String} key Property reference.\n     * @param {Number} i Iterator index.\n     * @returns {ReactElement} Table cell.\n     * @private\n     */\n    return function iterate(key, i) {\n      if (React.isValidElement(this[key])) return this[key]; // eslint-disable-line no-invalid-this\n\n      let tabIndex;\n      if (!self.props.enableKeyboard) tabIndex = 0;\n\n      return React.createElement(Td, {\n        tabIndex,\n        className: key,\n        key: i\n      }, this[key]); // eslint-disable-line no-invalid-this\n    };\n  }\n\n  /**\n   * Render rows from a data collection.\n   *\n   * @param {Object} data Optional collection of rows that can be rendered.\n   * @returns {Array} Collection of ReactDOM elements.\n   * @public\n   */\n  renderRows(data) {\n    return this.compose('row', data || this.props.data || {});\n  }\n\n  /**\n   * Render a set of cells in a single row.\n   *\n   * @param {Object} data Single object where each property will become a cell.\n   * @returns {Array} Collection of ReactDOM elements.\n   * @private\n   */\n  renderCells(data) {\n    return this.compose('cell', data);\n  }\n\n  /**\n   * Render the table body. Allows passing both regular HTML/Components as\n   * children or datasets through properties to dynamically generate content.\n   *\n   * @returns {ReactDOM} Generated table body and respective rows.\n   * @public\n   */\n  render() {\n    const { style, className, children } = this.props;\n    return (\n      <tbody style={ style } className={ className }>\n        { children }\n        { this.renderRows() }\n      </tbody>\n    );\n  }\n}\n\n/**\n * Allowed properties for Tbody.\n *\n * @enum {Object} Properties.\n * @public\n */\nTbody.propTypes = {\n  /** The child rows */\n  children: PropTypes.node,\n  /** Called when a row is clicked */\n  click: PropTypes.func,\n  /** The data to fill the table */\n  data: PropTypes.array,\n  /** When false, tabbing is disabled between rows, and enabled between individual table cells,\n   * though there is no handler for Enter */\n  enableKeyboard: PropTypes.bool,\n  /** The column order for the rows */\n  order: PropTypes.array,\n  /** Styles to apply to the element */\n  style: PropTypes.object,\n  /** ClassName to apply to the element */\n  className: PropTypes.string\n};\n","import Collection from './collection';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tr from './tr';\n\n//\n// Set of allowed child Components for the Table Body.\n//\nconst COMPONENTS = {\n  tr: Tr\n};\n\n/**\n * A table footer component\n *\n * @displayName Tfoot\n * @export\n * @class Tfoot\n * @extends {Collection}\n */\nexport default class Tfoot extends Collection {\n  /**\n   * Getter that returns the allowed children.\n   *\n   * @returns {Object} Components\n   * @private\n   */\n  get components() {\n    return COMPONENTS;\n  }\n\n  /**\n   * Render a table footer.\n   *\n   * @returns {ReactElement} Table footer.\n   * @public\n   */\n  render() {\n    const { style, children, className } = this.props;\n    return <tfoot style={ style } className={ className }>\n      { React.Children.map(children, this.renderChildren, this) }\n    </tfoot>;\n  }\n}\n\nTfoot.propTypes = {\n  /** Child row */\n  children: PropTypes.node,\n  /** Styles to apply to the element */\n  style: PropTypes.object,\n  /** ClassName to apply to the element */\n  className: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Collection from './collection';\nimport Sortable from './sortable';\nimport Thead from './thead';\nimport Tbody from './tbody';\nimport Tfoot from './tfoot';\nimport Th from './th';\nimport Tr from './tr';\nimport Td from './td';\n\n//\n// Set of allowed child Components for the Table.\n//\nconst COMPONENTS = {\n  thead: Thead,\n  tbody: Tbody,\n  tfoot: Tfoot,\n  tr: Tr\n};\n\n/**\n * Enhanced Table.\n *\n * @displayName Table\n * @class Table\n * @public\n */\nclass Table extends Collection {\n  constructor() {\n    super(...arguments);\n    this.index = this.index.bind(this);\n  }\n\n  /**\n   * Getter that returns the allowed children.\n   *\n   * @returns {Object} Components\n   * @private\n   */\n  get components() {\n    return COMPONENTS;\n  }\n\n  /**\n   * Sets options.sortable if appropriate for the instance & child-type\n   *\n   * @param {Object} options The options object to set sortable on\n   * @private\n   */\n  setSortableOptionsForChild(options) {\n    options.sortable = this.sort;\n  }\n\n  /**\n   * Add unique hidden and readonly private key, used by each Table Row and\n   * React for rendering optimalization. Skip rows that are already a valid\n   * ReactElement.\n   *\n   * @param {Object} row Single object from the collection of data.\n   * @param {Number} i Iterator\n   * @returns {Object} Extended row.\n   */\n  index(row, i) {\n    if (React.isValidElement(row)) return row;\n\n    Object.defineProperty(row, '_key', {\n      enumerable: false,\n      writable: true,\n      value: i\n    });\n\n    Object.defineProperty(row, '_active', {\n      enumerable: false,\n      writable: true,\n      value: i === this.state.activeRow\n    });\n\n    return row;\n  }\n\n  /**\n   * Sorts the data by the given column\n   *\n   * @private\n   */\n  sort() {\n    super.sort(...arguments);\n    this.setState({ activeRow: 0 });\n  }\n\n  /**\n   * Render a table.\n   *\n   * TODO merge table body element if data is received with actual tbody child.\n   *\n   * @returns {ReactDOM} Rendered table.\n   * @public\n   */\n  render() {\n    const { className, children, enableKeyboard, row } = this.props;\n    let { order } = this.props;\n    const { data } = this.state;\n\n    //\n    // Convert the order property from a comma separated string to array.\n    //\n    order = typeof order === 'string' ? order.split(',') : order;\n\n    const tableClassName = className ? `ux-table ${className}` : 'ux-table';\n\n    return (\n      <table className={ tableClassName }>\n        { React.Children.map(children, this.renderChildren, this) }\n        <Tbody data={ data.map(this.index) } order={ order } click={ row } enableKeyboard={ enableKeyboard } />\n      </table>\n    );\n  }\n}\n\n/**\n * The default properties of the component.\n *\n * @type {Object}\n * @private\n */\nTable.defaultProps = {\n  data: [],\n  enableKeyboard: true,\n  row: () => {}\n};\n\n/**\n * Allowed properties for Table.\n *\n * @enum {Object} Properties.\n * @public\n */\nTable.propTypes = {\n  /** Css class name to apply to the table */\n  className: PropTypes.string,\n  /** The data used to populate the table */\n  data: PropTypes.array,\n  /** When false, tabbing is disabled between rows, and enabled between individual table cells,\n   * though there is no handler for Enter */\n  enableKeyboard: PropTypes.bool,\n  /** Specifies the column order */\n  order: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n  /** Function called when a row is clicked on */\n  row: PropTypes.func\n};\n\n// Attach auxiliary components to Table so they're accessible from @ux/uxcore2\nTable.Thead = Thead;\nTable.Tbody = Tbody;\nTable.Tfoot = Tfoot;\nTable.Tr = Tr;\nTable.Td = Td;\nTable.Th = Th;\nTable.Collection = Collection;\nTable.Sortable = Sortable;\n\n// Also do named exports for those importing from @ux/table directly\nexport {\n  Table as default,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Td,\n  Th,\n\n  Collection,\n  Sortable\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Display content of each Tab. The Tabs component can optionally use TabContent.\n * @param {Object} props props\n * @displayName Tab Content\n * @public\n * @returns {React.ReactElement} TabContent\n */\nexport default function TabContent(props) {\n  return (\n    <div { ...props } tabIndex={ props.tabIndex } role='tabpanel' />\n  );\n}\n\n/**\n * Property validation\n *\n * @type {Object}\n * @api private\n */\nTabContent.propTypes = {\n  /** Classes to be applied to tab content */\n  className: PropTypes.string,\n  /** Contents of the tab */\n  children: PropTypes.node,\n  /** Developer indicates tabIndex, default is 0 */\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n\nTabContent.defaultProps = {\n  tabIndex: 0\n};\n","import rip from 'rip-out';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames } from '@ux/component-utilities';\n\n/**\n * Display Tab\n *\n * @class Tab\n * @displayName Tab\n * @public\n */\nexport default class Tab extends Component {\n  /**\n   * Render the Tab. Depending on props.selected the tab is rendered as active.\n   *\n   * @returns {React.DOM} list element with tab caption as link\n   * @private\n   */\n  render() {\n    const props = this.props;\n    const other = rip(props, 'ariaControls');\n    const itemClassName = ['ux-tab-item'].concat(props.className);\n    const linkClassName = classNames('ux-tab-link', {\n      active: props.selected\n    });\n\n    const ariaControls = props.selected === true ? props.ariaControls : null;\n    const ariaSelectedTab = props.selected === true ? 'true' : 'false';\n\n    return (\n      <li { ...other } className={ itemClassName.join(' ') } role='presentation' >\n        <button className={ linkClassName } role='tab' aria-selected={ ariaSelectedTab } aria-controls={ ariaControls }>\n          { props.children }\n        </button>\n      </li>\n    );\n  }\n}\n\n/**\n * Property validation.\n *\n * @type {Object}\n * @api public\n */\nTab.propTypes = {\n  /** Classes applied to tab */\n  className: PropTypes.string,\n  /** Boolean of whether the tab is selected or not */\n  selected: PropTypes.bool,\n  /** Children elements of a tab */\n  children: PropTypes.node,\n  /** Accessibility attributes */\n  ariaControls: PropTypes.string\n};\n","import validateComponents from 'react-component-validator';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport rip from 'rip-out';\nimport Tab from './tab';\nimport ChevronLeft from '@ux/icon/chevron-left';\nimport ChevronRight from '@ux/icon/chevron-right';\nimport { Breakpoints } from '@ux/component-utilities';\n\n//\n// Control attributes.\n//\nconst directions = {\n  prev: {\n    side: 'left',\n    step: -1\n  },\n  next: {\n    side: 'right',\n    step: 1\n  }\n};\n\nconst breakpoints = ['tablet', 'desktop', 'large', 'xlarge'];\n\n/**\n * Render a default set of tabs used with each Component.\n *\n * @class TabIndex\n * @displayName Tab Index\n * @public\n */\nexport default class TabIndex extends Component {\n  constructor() {\n    super(...arguments);\n\n    //\n    // Move the conveyor through margin left styling.\n    //\n    this.state = {\n      conveyorMarginLeft: 0\n    };\n\n    this.defaultStepSize = 200;\n  }\n\n  /**\n   * Step size used to in- or decrement the conveyor position. Can also be provided\n   * through properties on TabIndex.\n   *\n   * @returns {number} Step size\n   * @public\n   */\n  get stepSize() {\n    if (!this.props || !this.props.stepSize) return this.defaultStepSize;\n\n    return this.props.stepSize;\n  }\n\n  /**\n   * Increment or decrement the conveyor steps within bounds.\n   * Bounds are: [0, this.tabsExceededWidth].\n   *\n   * @param {string} direction Previous or next control\n   * @returns {Function} Event handler\n   * @private\n   */\n  moveConveyor(direction) {\n    return event => {\n      event.preventDefault();\n\n      const margin = this.state.conveyorMarginLeft;\n      const absMargin = Math.abs(margin);\n      let step = this.stepSize;\n\n      if (direction === 'prev' && absMargin < step) {\n        step = absMargin;\n      } else if (direction === 'next' && this.tabsExceededWidth - absMargin < step) {\n        step = this.tabsExceededWidth - absMargin;\n      }\n\n      this.setState({\n        conveyorMarginLeft: margin + -directions[direction].step * step\n      });\n    };\n  }\n\n  /**\n   * Calculate the amount of by which the tabs exceed the width of the conveyor.\n   *\n   * @returns {number} Exceeded width in pixels\n   * @private\n   */\n  get tabsExceededWidth() {\n    const tabindex = this.conveyor;\n    let tabs = this.tabs;\n    let sum = 0;\n    let n;\n\n    if (!tabindex || !tabs) {\n      return sum;\n    }\n\n    tabs = Array.prototype.map.call(tabs.childNodes, tab => {\n      var tabStyles = window.getComputedStyle(tab);\n\n      return parseFloat(tabStyles.width)\n        + parseFloat(tabStyles.marginLeft)\n        + parseFloat(tabStyles.marginRight);\n\n    });\n    n = tabs.length;\n\n    while (n--) {\n      sum += tabs[n];\n    }\n\n    return sum - parseFloat(window.getComputedStyle(tabindex).width);\n  }\n\n  /**\n   * Check if controls should be visible or hidden.\n   *\n   * @param {string} side Previous or next control\n   * @param {string} breakpoint current view point\n   * @returns {Object} Display style\n   */\n  conveyorArrowStyle(side, breakpoint) {\n    const { conveyorMarginLeft } = this.state;\n    const width = this.tabsExceededWidth;\n    if (!['large', 'desktop', 'xlarge'].includes(breakpoint)) {\n      return { display: 'none' };\n    } else if ((side === 'prev' && conveyorMarginLeft) || (side === 'next' && width !== Math.abs(conveyorMarginLeft) && width > 0)) {\n      return { display: 'flex' };\n    }\n    return { display: 'none' };\n  }\n\n  /**\n   * Get attributes that are required for conveyor controls.\n   *\n   * @param {string} direction Previous or next control\n   * @param {string} breakpoint current viewpoint\n   * @returns {Object} Control attributes\n   * @private\n   */\n  controlAttributes(direction, breakpoint) {\n    return {\n      'className': [`ux-conveyor-control-${directions[direction].side}`, 'ux-conveyor-control'].join(' '),\n      'style': this.conveyorArrowStyle(direction, breakpoint),\n      'onClick': this.moveConveyor(direction),\n      'data-slide': direction,\n      'role': 'button'\n    };\n  }\n\n  /**\n   * Render the TabIndex Component.\n   *\n   * @returns {React.DOM} conveyor clipping div element with children\n   * @private\n   */\n  render() {\n    const props = this.props;\n    const { conveyorMarginLeft } = this.state;\n    const other = rip(props, 'stepSize', 'selected', 'change', 'contentIds');\n\n    return (\n      <Breakpoints breakpoints={ breakpoints }>{\n\n        ({ breakpoint }) => {\n          // Only add the marginLeft if we're on large/desktop breakpoints (prevents scrolling from breaking on small devices)\n          const marginLeftStyle = {};\n          if (['large', 'desktop', 'xlarge'].includes(breakpoint)) {\n            marginLeftStyle.marginLeft = conveyorMarginLeft;\n          }\n          return (<div className='ux-conveyor-clip'>\n\n            <button { ...this.controlAttributes('prev', breakpoint) }>\n              <ChevronLeft aria-hidden='true' />\n              <span className='sr-only'>Previous</span>\n            </button>\n\n            <div { ...other } ref={ ref => { this.conveyor = ref; } } className='ux-conveyor'>\n              <ul className='ux-tabs' ref={ ref => { this.tabs = ref; } } style={ marginLeftStyle } role='tablist'>\n                { React.Children.map(props.children, (child, i) => React.cloneElement(child, {\n                  onClick: props.change.bind(null, i),\n                  selected: props.selected === i,\n                  ariaControls: props.contentIds[i]\n                }))}\n              </ul>\n            </div>\n\n            <button { ...this.controlAttributes('next', breakpoint) }>\n              <ChevronRight aria-hidden='true' />\n              <span className='sr-only'>Next</span>\n            </button>\n          </div>\n          );\n        }\n      }</Breakpoints>\n    );\n  }\n}\n\n/**\n * Validate that the passed children are of type Tab.\n *\n * @enum {Object} expected types of properties.\n * @api public\n */\nTabIndex.propTypes = {\n  /** Increments or decrements the conveyor position */\n  stepSize: PropTypes.number,\n  /** Function called when selection changes */\n  change: PropTypes.func,\n  /** Index of selected tab */\n  selected: PropTypes.number,\n  /** Child tab */\n  children: validateComponents([Tab]),\n  /** IDs of linked tab contents */\n  contentIds: PropTypes.array\n};\n","import validateComponents from 'react-component-validator';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n//\n// Import all child components.\n//\nimport TabContent from './tab-content';\nimport TabIndex from './tab-index';\nimport Tab from './tab';\n\n/**\n * Display content as tabs.\n *\n * @class Tabs\n * @displayName Tabs\n * @public\n */\nclass Tabs extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.state = {\n      selected: 0\n    };\n  }\n\n  /**\n   * Default implementation of tab selection logic. This method can be provided\n   * as property and will receive arguments as specified below.\n   *\n   * @name change\n   * @memberof Tabs\n   * @returns {Function} Click event handler\n   * @public\n   */\n  get change() {\n    return (index, event) => {\n      event.preventDefault();\n\n      this.setState({\n        selected: index\n      });\n    };\n  }\n\n  /**\n   * Return selected tab, prefer props over state.\n   *\n   * @returns {Number} Index of selected tab\n   * @private\n   */\n  get selected() {\n    return 'selected' in this.props ? this.props.selected : this.state.selected;\n  }\n\n  /**\n   * Extract TabIndex child from all childs.\n   *\n   * @name navigation\n   * @memberof Tabs\n   * @param {React.DOM[]} childs - React elements\n   * @returns {React.DOM[]} React elements\n   * @private\n   */\n  navigation(childs) {\n    const tabIndex = childs.filter(child => child.type === TabIndex)[0];\n    if (!tabIndex) {\n      return null;\n    }\n\n    const contentIds = childs.filter(child => child.type === TabContent)\n      .map(child => child.props.id);\n\n    return React.cloneElement(tabIndex, {\n      selected: this.selected,\n      change: this.props.change || this.change,\n      contentIds\n    });\n  }\n\n  /**\n   * Gets the tab ID for a given child index\n   * @param {React.DOM[]} childs Array of children tabs\n   * @param {number} idx Index of child to get tab ID for\n   * @returns {number} ID of the child at given index\n   */\n  getTabId(childs, idx) {\n    const tabIndex = childs.filter(child => child.type === TabIndex)[0];\n    if (!tabIndex) {\n      return;\n    }\n\n    const tabs = React.Children.toArray(tabIndex.props.children).filter(child => child.type === Tab);\n    return tabs[idx] && tabs[idx].props && tabs[idx].props.id;\n  }\n\n  /**\n   * Extract TabContent children from all childs. The double filter is required to\n   * ensure the length of the childs array matches the length of the TabIndexes.\n   *\n   * @name content\n   * @memberof Tabs\n   * @param {React.DOM[]} childs - React elements\n   * @returns {React.DOM[]} React elements\n   * @private\n   */\n  content(childs) {\n    const selectedTab = this.getTabId(childs, this.selected);\n    const content = childs.filter(child => child.type === TabContent)[this.selected];\n\n    if (!content) {\n      return null;\n    }\n\n    return React.cloneElement(content, {\n      'aria-labelledby': selectedTab,\n      'tabIndex': this.props.tabIndex\n    });\n  }\n\n  /**\n   * Render the Tabs Component.\n   *\n   * @returns {React.DOM} div element with TabIndex and TabContent as children\n   * @private\n   */\n  render() {\n    const props = this.props;\n    const children = React.Children.toArray(props.children);\n\n    return (\n      <div className={ props.className }>\n        { this.navigation(children) }\n        { this.content(children) }\n      </div>\n    );\n  }\n}\n\n/**\n * Optional properties: selected and change. Also validate the type of children\n * that are passed.\n *\n * @enum {Object} expected types of properties.\n * @public\n */\nTabs.propTypes = {\n  /** Tab index that should be selected */\n  selected: PropTypes.number,\n  /** Function called when selected tab is changed */\n  change: PropTypes.func,\n  /** Child tabs or tab contents */\n  children: validateComponents([TabIndex, TabContent]),\n  /** Classes to apply to Tabs */\n  className: PropTypes.string,\n  /** Developer indicates tabIndex */\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n\n//\n// Attach childs to the main Component for availability without ES6 imports.\n//\nTabs.TabContent = TabContent;\nTabs.TabIndex = TabIndex;\nTabs.Tab = Tab;\n\n//\n// Export the Class and related children.\n//\nexport {\n  Tabs as default,\n  TabContent,\n  TabIndex,\n  Tab\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * CountryDropdown renders the country selector dropdown for the TelephoneInput\n * @displayName CountryDropdown\n * @class CountryDropdown\n *\n */\nexport default class CountryDropdown extends PureComponent {\n  /**\n   * Render the country dropdown\n   *\n   * @returns {React.DOM} rendered component\n   * @private\n   */\n  render() {\n    const { countryData, onCountrySelect, activeClassName } = this.props;\n    const selected = this.props.selectedCountry;\n\n    const onSelectedClick = (event) => onCountrySelect(event, selected);\n\n    return <ul id='phoneCountryList' className='dropdown-menu dropdown-menu-items' role='menu'>\n      <div id={ selected.countryKey }\n        key={ selected.countryKey }\n        role='presentation'\n        className={ activeClassName }\n        onClick={ onSelectedClick }>\n        <a role='menuitem' href={ '#' + selected.countryKey }>\n          <span className='country-id'>{ selected.countryKey } </span>\n          <span className='country-name'>{ selected.label } </span>\n          <span className='dial-code'>{ '+' + selected.callingCode } </span>\n        </a>\n      </div>\n\n      {\n        countryData.map((country) => {\n          if (country.countryKey === selected.countryKey) { return; }\n\n          const onClick = (event) => onCountrySelect(event, country);\n\n          return (\n            <div id={ country.countryKey }\n              key={ country.countryKey }\n              role='presentation'\n              className='dropdown-item'\n              onClick={ onClick }>\n              <a role='menuitem' href={ '#' + country.countryKey }>\n                <span className='country-id'>{ country.countryKey } </span>\n                <span className='country-name'>{ country.label } </span>\n                <span className='dial-code'>{ '+' + country.callingCode } </span>\n              </a>\n            </div>\n          );\n        })\n      }\n    </ul>;\n  }\n}\n\nCountryDropdown.propTypes = {\n  /** An array of countries and their associated calling data. */\n  countryData: PropTypes.array.isRequired,\n  /** Selected country object which will render first in the dropdown list before the rest of countryData. */\n  selectedCountry: PropTypes.object.isRequired,\n  /** Styles applied for the active item */\n  activeClassName: PropTypes.string.isRequired,\n  /** Handle country selection, update the phone number with the calling code and notify the parent of the change */\n  onCountrySelect: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@ux/button';\nimport FormElement from '@ux/form-element';\nimport { classNames, ClickOutside } from '@ux/component-utilities';\nimport CountryDropdown from './country-dropdown.js';\n\nconst phoneRegEx = /^\\+([0-9]){1,3}\\.([0-9]){6,14}$/;\nconst maxLength = 17;\n\n/**\n * TelephoneInput renders a component with country calling code selector\n *\n * @displayName TelephoneInput\n * @class TelephoneInput\n */\nexport default class TelephoneInput extends Component {\n  constructor(props) {\n    super(props);\n\n    const { countryKey, phoneNumber, countryData, marketId, presorted } = props;\n\n    const countryDataProps = (Array.isArray(countryData) &&\n      countryData.length &&\n      this.sortCountryData(countryData, marketId, presorted)) || [\n      {\n        countryKey: 'US',\n        label: 'United States',\n        callingCode: '1'\n      }\n    ];\n\n    const normalizedCountryData = this.normalizeCountryData(countryDataProps);\n    const parsedPhoneNumber = this.parsePhoneNumber(phoneNumber);\n    const phoneCountryKey = this.getCountryKeyFromCallingCode(\n      parsedPhoneNumber.callingCode,\n      countryKey,\n      normalizedCountryData\n    );\n    const countryCallingCode = this.getCallingCodeFromCountryKey(countryKey, countryDataProps);\n\n    this.state = {\n      showCountryList: false,\n      callingCode: parsedPhoneNumber.callingCode || countryCallingCode,\n      lineNumber: parsedPhoneNumber.lineNumber,\n      countryKey: phoneCountryKey || countryKey,\n      countryData: countryDataProps,\n      normalizedCountryData,\n      hadInput: false,\n      inputError: false\n    };\n\n    this.onInputBlur = this.onInputBlur.bind(this);\n    this.onInputFocus = this.onInputFocus.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onInputKeyDown = this.onInputKeyDown.bind(this);\n    this.onOutsideClick = this.onOutsideClick.bind(this);\n    this.onCountryClick = this.onCountryClick.bind(this);\n    this.onCountrySelect = this.onCountrySelect.bind(this);\n    this.phoneControl = React.createRef();\n  }\n\n  /**\n   * After component mounts, call the onChangeHandler for initial validation\n   *\n   * @returns {void}\n   * @private\n   */\n  componentDidMount() {\n    const { phoneNumber, countryKey } = this.props;\n    const event = document.createEvent('Event');\n\n    this.props.onChangeHandler(event, phoneNumber, this.validatePhoneNumber(phoneNumber), countryKey);\n  }\n\n  /**\n   * Focus on input when callingCode change. On Android devices, check\n   * to see if the boundary of the selection is less than the calling code\n   * prefix. If it is then force cursor to the end.\n   *\n   * @param {Object} prevProps - previous props\n   * @param {Object} prevState - previous state\n   * @returns {void}\n   * @private\n   */\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n    const updates = {};\n    const { elements: { input } } = this.phoneInput;\n\n    if (!prevState.callingCode && prevState.callingCode !== this.state.callingCode) {\n      input.focus();\n    }\n\n    //\n    // **ANDROID MOBILE ONLY FIX** Force the cursor to the end of the input\n    // if the selectionStart is less than the calling code prefix.\n    //\n    const { lineNumber, callingCode } = this.state;\n    if (lineNumber && callingCode && input.selectionStart < `+${callingCode}.`.length) {\n      const phoneNumber = this.state.phoneNumber || this.buildPhoneNumber(callingCode, lineNumber) || '';\n      input.selectionStart = input.selectionEnd = phoneNumber.length;\n    }\n\n    if (!this.state.lineNumber && props.countryKey !== prevProps.countryKey) {\n      updates.countryKey = props.countryKey;\n      updates.callingCode = this.getCallingCodeFromCountryKey(props.countryKey);\n    }\n\n    if (props.countryData && props.countryData !== prevProps.countryData) {\n      const marketId = props.marketId || prevProps.marketId;\n      updates.countryData = this.sortCountryData(props.countryData, marketId, props.presorted);\n    }\n\n    if (prevProps.countryData !== props.countryData) {\n      updates.normalizedCountryData = this.normalizeCountryData(updates.countryData);\n    }\n\n    if (Object.keys(updates).length) {\n      this.setState(updates);\n    }\n  }\n\n\n  /**\n   * Sort the countries by label\n   *\n   * @param {array} data - data from api\n   * @param {string=} marketId - BCP-47 language string to use as locale when comparing entries, defaults to 'en-US'\n   * @param {bool=} presorted - indicates if data is already sorted, defaults to false\n   * @returns {string} marketId\n   * @public\n   */\n  sortCountryData(data, marketId = 'en-US', presorted = false) {\n    if (presorted) {\n      return data;\n    }\n\n    return data.slice().sort(function (a, b) {\n      return a.label.localeCompare(b.label, marketId);\n    });\n  }\n\n  /**\n   * Compose a complete phone number from the calling code and line number\n   *\n   * @param {number} callingCode - Country callingCode\n   * @param {string} lineNumber - Phone number\n   * @returns {string} Complete phone number\n   * @public\n   */\n  buildPhoneNumber(callingCode, lineNumber) {\n    let phoneNumber = '';\n    if (callingCode) {\n      phoneNumber += '+' + callingCode + '.';\n    }\n    if (lineNumber) {\n      phoneNumber += lineNumber;\n    }\n    return phoneNumber;\n  }\n\n  /**\n   * Find the country by calling code\n   *\n   * @param {string} countryKey Country key\n   * @param {array} dataset Optional dataset to use.\n   * @returns {number} callingCode\n   * @public\n   */\n  getCallingCodeFromCountryKey(countryKey, dataset) {\n    const countryData = dataset || this.state.countryData || [];\n    let callingCode = null;\n\n    for (let i = countryData.length; i--;) {\n      if (countryData[i].countryKey === countryKey) {\n        callingCode = countryData[i].callingCode;\n        break;\n      }\n    }\n\n    return callingCode;\n  }\n\n  /**\n   * Find the country by calling code.\n   * FYI: If there are multiple countries with the same code,\n   * it will return the first one.\n   *\n   * @param {number} callingCode Country callingCode\n   * @param {string} countryKey Current country key\n   * @param {array} normalizedCountryData Optional dataset to use.\n   * @returns {string} countryKey\n   * @public\n   */\n  getCountryKeyFromCallingCode(callingCode, countryKey, normalizedCountryData) {\n    if (!countryKey) countryKey = this.state.countryKey;\n\n    if (!normalizedCountryData) {\n      normalizedCountryData = this.state.normalizedCountryData || this.normalizeCountryData();\n    }\n\n    if (callingCode && normalizedCountryData[callingCode]) {\n      if (normalizedCountryData[callingCode].indexOf(countryKey) < 0) {\n        countryKey = normalizedCountryData[callingCode][0];\n      }\n    }\n\n    return countryKey;\n  }\n\n  /**\n   * Normalize country data by calling code. Ensure US is first for calling\n   * code 1.\n   *\n   * @param {Array} countryData Data to normalize\n   * @returns {Object} Normalized country data by calling code\n   * @private\n   */\n  normalizeCountryData(countryData) {\n    countryData = countryData || this.state.countryData;\n    const normalizedCountryData = { 1: ['US'] };\n\n    if (Array.isArray(countryData)) {\n      for (let i = countryData.length - 1; i >= 0; i--) {\n        const country = countryData[i];\n\n        if (country.countryKey !== 'US') {\n          const callingCode = country.callingCode;\n\n          if (!normalizedCountryData[callingCode]) {\n            normalizedCountryData[callingCode] = [];\n          }\n\n          normalizedCountryData[callingCode].push(country.countryKey);\n        }\n      }\n    }\n\n    return normalizedCountryData;\n  }\n\n  /**\n   * Handle the country dropdown click\n   *\n   * @returns {void}\n   * @private\n   */\n  onCountryClick() {\n    const show = this.state.showCountryList;\n    this.setState({ showCountryList: !show });\n  }\n\n  /**\n   * Handle country selection, update the phone number with the calling code\n   * and notify the parent of the change\n   *\n   * @param {Object} event - Event for click\n   * @param {Object} country - Country object being clicked\n   * @returns {void}\n   */\n  onCountrySelect(event, country) {\n    // added to avoid issues with hash routing.\n    event.preventDefault();\n\n    const newNumber = this.buildPhoneNumber(country.callingCode, this.state.lineNumber);\n\n    this.setState({\n      phoneNumber: newNumber,\n      countryKey: country.countryKey,\n      callingCode: country.callingCode,\n      showCountryList: false\n    });\n\n    this.props.onChangeHandler(event, newNumber, this.validatePhoneNumber(newNumber), country.countryKey);\n  }\n\n  /**\n   * Handle clicking on the document to determine if the country list should be hidden\n   *\n   * @param {Object} event - Event for click\n   * @param {Function} fn - listener for click event\n   * @private\n   */\n  onOutsideClick(event, fn) {\n    if (this.state.showCountryList) {\n      this.setState({\n        outsideListener: fn,\n        showCountryList: false\n      });\n    }\n  }\n\n  /**\n   * Handle keyboard input change, look up country, render the new phone number\n   *\n   * @param {Object} event - Event for KeyDown\n   * @returns {void}\n   * @private\n   */\n  onInputChange(event) {\n    const newValue = event.target.value;\n    const parsedPhoneNumber = this.parsePhoneNumber(newValue);\n    const countryKey = this.getCountryKeyFromCallingCode(parsedPhoneNumber.callingCode);\n    const callingCode = parsedPhoneNumber.callingCode || this.getCallingCodeFromCountryKey(countryKey);\n    const newNumber = this.buildPhoneNumber(callingCode, parsedPhoneNumber.lineNumber);\n\n    let hadInput = this.state.hadInput;\n    if (this.props.required && !this.state.hadInput) {\n      hadInput = true;\n    }\n\n    this.setState({\n      lineNumber: parsedPhoneNumber.lineNumber,\n      phoneNumber: newNumber,\n      callingCode,\n      countryKey,\n      hadInput\n    });\n\n    this.props.onChangeHandler(event, newNumber, this.validatePhoneNumber(newNumber), countryKey);\n  }\n\n  /**\n   * Handle input blur, remove calling code from input if no line number is provided\n   *\n   * @returns {void}\n   * @private\n   */\n  onInputBlur() {\n    const callingCode = this.buildPhoneNumber(this.state.callingCode);\n    const phoneInput = this.phoneInput.elements.input.value || '';\n\n    const inputError = this.props.required && this.state.hadInput && phoneInput === '';\n    if (phoneInput === callingCode) {\n      this.setState({\n        lineNumber: null,\n        inputError\n      });\n    }\n  }\n\n  /**\n   * Handle input focus, hide the country list, populate calling code if empty\n   *\n   * @param {Object} event - Event for Focus\n   * @returns {void}\n   * @private\n   */\n  onInputFocus() {\n    const updated = { showCountryList: false, inputError: false };\n    if (this.phoneInput.elements.input.value === '') {\n      updated.callingCode = this.getCallingCodeFromCountryKey(this.state.countryKey);\n    }\n\n    this.setState(updated);\n  }\n\n  /**\n   * Handle input key down, if down arrow key, show country list\n   *\n   * @param {Object} event - Event for KeyDown\n   * @returns {void}\n   * @private\n   */\n  onInputKeyDown(event) {\n    let key = event.key;\n    const safelistKeys = ['Backspace', 'ArrowLeft', 'ArrowRight', 'ArrowDown', 'Delete', 'Tab'];\n\n    //\n    // Safari@10.1 workaround (and perhaps others), which is lacking a `key` identifiers. This maps each number to\n    // their actual value, keys from the safelist are properly identified.\n    //\n    if (key === 'Unidentified') key = event.keyCode - 48;\n\n    const safeModifierKeys = event.ctrlKey || event.metaKey;\n\n    if (!/^[0-9]$/.test(key) && !safeModifierKeys && !~safelistKeys.indexOf(key)) {\n      event.preventDefault();\n    }\n\n    //\n    // If key is backspace or delete handle the deletion of characters from index to left\n    // and then items right of index and left\n    //\n    if (key === 'Backspace' || key === 'Delete') {\n      const directionModifier = key === 'Delete';\n      const { value, selectionStart, selectionEnd } = event.target;\n      const selection = value.substring(selectionStart, selectionEnd);\n      const firstPeriodPos = value.indexOf('.') + 1;\n\n      if (firstPeriodPos) {\n        const noSelectionBeforeDot =\n          selectionStart + directionModifier <= firstPeriodPos && selectionStart === selectionEnd;\n        const cursorBeforeDotNotFullSel = selectionStart + directionModifier < firstPeriodPos && selection !== value;\n        const dotSelectedButNotFullSel = ~selection.indexOf('.') && selection !== value;\n\n        if (noSelectionBeforeDot || cursorBeforeDotNotFullSel || dotSelectedButNotFullSel) {\n          event.preventDefault();\n        }\n      }\n    }\n\n    if (!this.state.showCountryList && key === 'ArrowDown') {\n      this.setState({ showCountryList: true });\n    }\n  }\n\n  /**\n   * Parse the phone number to determine the calling code and line number\n   *\n   * @param {string} phoneNumber - Phone number to be parsed\n   * @returns {Object} callingCode and lineNumber\n   * @public\n   */\n  parsePhoneNumber(phoneNumber) {\n    let callingCode = null;\n    let lineNumber = phoneNumber;\n\n    if (phoneNumber && phoneNumber[0] === '+') {\n      phoneNumber = phoneNumber.replace('+', '');\n      const dotIndex = phoneNumber.indexOf('.');\n      if (dotIndex > 0) {\n        callingCode = phoneNumber.substring(0, dotIndex);\n        lineNumber = phoneNumber.substring(dotIndex + 1);\n      }\n    }\n\n    return {\n      callingCode: callingCode,\n      lineNumber: lineNumber\n    };\n  }\n\n  /**\n   * Validate the phone number passes the is required check and regex check\n   *\n   * @param {string} phoneNumber - Phone number to be parsed\n   * @returns {boolean} Does phone number pass regEx text\n   * @public\n   */\n  validatePhoneNumber(phoneNumber) {\n    let isValid = true;\n    const { isRequired } = this.props;\n    const isEmpty = !phoneNumber || phoneNumber.length === 0;\n\n    if (isRequired) {\n      isValid = !isEmpty;\n    }\n\n    if (isValid && (isRequired || (!isRequired && !isEmpty))) {\n      isValid = phoneRegEx.test(phoneNumber);\n    }\n\n    return isValid;\n  }\n\n  /**\n   * Gets the countryData item that should be selected.\n   * RIf countryKey is not in data, returns US data or first item in list\n   * @returns {Object} countryData item that should be selected\n   * @private\n   */\n  getSelectedCountry() {\n    const { countryKey, countryData } = this.state;\n    const selectedCountry = countryData.filter(country => country.countryKey === countryKey)[0];\n    if (!selectedCountry) {\n      if (!countryData.some(country => country.countryKey === 'US')) {\n        return countryData[0];\n      }\n      return { callingCode: '1', countryKey: 'US', label: 'United States' };\n    }\n    return selectedCountry;\n  }\n\n  /**\n   * Render the country list\n   * @param {Object} selected The item that should render as selected\n   * @param {string} selected.countryKey The selected item's country key\n   * @param {string} selected.callingCode The selected item's calling code\n   * @returns {ReactElement} rendered country menu list\n   */\n  renderCountryList(selected) {\n    const { showCountryList, countryData } = this.state;\n\n    const classes = classNames('dropdown', 'ux-select-dropdown', 'ux-tel-container', { open: showCountryList });\n\n    return (\n      <div style={{ top: 'inherit' }} className={ classes }>\n        <CountryDropdown\n          selectedCountry={ selected }\n          activeClassName='dropdown-item active'\n          onCountrySelect={ this.onCountrySelect }\n          countryData={ countryData }\n        />\n      </div>\n    );\n  }\n\n  /**\n   * Render the phone component\n   *\n   * @returns {React.DOM} rendered component\n   * @private\n   */\n  render() {\n    const { name, placeholderText, id } = this.props;\n    const { callingCode, lineNumber } = this.state;\n    const phoneNumber = lineNumber ? this.buildPhoneNumber(callingCode, lineNumber) : '';\n    const selectedCountry = this.getSelectedCountry();\n    const countryList = this.renderCountryList(selectedCountry);\n    const keyCode =  `${selectedCountry.countryKey} +${selectedCountry.callingCode}`;\n\n    return (\n      <ClickOutside\n        targetRef={ this.phoneControl }\n        onClick={ this.onOutsideClick }\n      >\n        <div\n          className='form-group'\n          ref={ this.phoneControl }\n        >\n          <div className='ux-tel-container'>\n            <Button\n              className={ classNames('ux-tel-btn', { 'ux-tel-btn-danger': this.state.inputError }) }\n              id='basic-addon1'\n              onClick={ this.onCountryClick }\n              as='select'\n              text={ keyCode }/>\n            <FormElement\n              className='form-control ctHidden ux-tel-input'\n              name={ name }\n              id={ id }\n              maxLength={ maxLength }\n              onBlur={ this.onInputBlur }\n              onChange={ this.onInputChange }\n              onFocus={ this.onInputFocus }\n              onKeyDown={ this.onInputKeyDown }\n              placeholder={ placeholderText }\n              label={ this.props.label }\n              required={ this.props.required }\n              value={ phoneNumber }\n              ref={ input => {\n                this.phoneInput = input;\n              } }\n              type='tel'\n            />\n          </div>\n          {countryList}\n        </div>\n      </ClickOutside>\n    );\n  }\n}\n\nTelephoneInput.propTypes = {\n  /** An array of countries and their associated calling data. */\n  countryData: PropTypes.array.isRequired,\n  /** The current country. Default is US */\n  countryKey: PropTypes.string.isRequired,\n  /** Id of the input field */\n  id: PropTypes.string,\n  /** If true, indicates a required field */\n  isRequired: PropTypes.bool,\n  /** The label for the Form element */\n  label: PropTypes.node,\n  /** The current market. Default is en-US */\n  marketId: PropTypes.string.isRequired,\n  /** name of the input, useful for form auto completion. Default is phone */\n  name: PropTypes.string,\n  /** Handles initial validation after component mounts, and handles input changes */\n  onChangeHandler: PropTypes.func.isRequired,\n  /** Current phone number with callingCode and lineNumber */\n  phoneNumber: PropTypes.string,\n  /** Text in form field before user input */\n  placeholderText: PropTypes.string,\n  /** If true, the component will not attempt to sort the countryData array. */\n  presorted: PropTypes.bool,\n  /**\n   * A boolean or string to indicate if the input field is required. If\n   * a string is provided, it will be used as the error message.\n   */\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.node])\n};\n\nTelephoneInput.defaultProps = {\n  isRequired: false,\n  name: 'phone',\n  presorted: false\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst UX_TEXT_CLASSNAME = 'ux-text';\n// Possible options for as prop\nconst asOptions = ['title', 'heading', 'paragraph', 'action', 'input', 'label', 'caption'];\n\nfunction create(TagName) {\n\n  function Text(props) {\n    const {\n      as,\n      className,\n      children,\n      size,\n      text\n    } = props || {};\n\n    if (process.env.NODE_ENV !== 'production' && children) {\n      console.warn(`Warning: The use of children elements within @ux/text is deprecated.\n          Please use the 'text' prop instead.`);\n    }\n\n    const classNames = [UX_TEXT_CLASSNAME, className];\n\n    if (typeof size === 'number' && size >= 0 && size < 6) {\n      classNames.push(`${UX_TEXT_CLASSNAME}-size${size}`);\n    }\n\n    if (as && asOptions.includes(as)) {\n      classNames.push(`${UX_TEXT_CLASSNAME}-${as}`);\n    }\n\n\n    return <TagName className={ classNames.filter(Boolean).join(' ') }>{ text || children }</TagName>;\n  }\n\n  /**\n   *\n   * @enum {Object} expected types of properties.\n   * @public\n   */\n  Text.propTypes = {\n    /** The type of text expected in the component */\n    as: PropTypes.oneOf(asOptions),\n    /** Deprecated, children for the component, please use text prop instead */\n    children: PropTypes.node,\n    /** Classes to apply to component */\n    className: PropTypes.string,\n    /** The size of the text, affected by the 'as' prop */\n    size: PropTypes.number,\n    /** Text to be displayed */\n    text: PropTypes.string\n  };\n\n  return Text;\n}\n\nexport const text = new Proxy(function () {}, {\n  get: function get(_, tagName) {\n    return create(tagName);\n  }\n});\n\nexport default text;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Class representing a 2-state switch.\n *\n * @displayName Toggle\n * @class Base\n * @public\n */\nexport default class Base extends Component {\n  constructor(props) {\n    super(...arguments);\n\n    if (!('checked' in props)) {\n      this.state = {\n        checked: false\n      };\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n  }\n\n  /**\n   * Keep value in state if checked is not provided. Value is used over `checked` for the\n   * React Native Switch component which uses `value`.\n   *\n   * @private\n   */\n  onChange() {\n    const props = this.props;\n    if ('onChange' in props) {\n      props.onChange(...arguments);\n    }\n    if (!('checked' in props)) {\n      this.setState({\n        checked: !this.state.checked\n      });\n    }\n  }\n\n  /**\n   * Handles the keyboard events for space and enter keys.\n   *\n   * @param  {Event} event Keyboard input event from the browser.\n   * @private\n   */\n  onKeyDown(event) {\n    const key = event.key;\n    const props = this.props;\n    const safelistKeys = [' ', 'Enter'];\n\n    event.preventDefault();\n\n    if (safelistKeys.includes(key)) {\n      event.stopPropagation();\n      if ('onChange' in props) props.onChange(event);\n      if (!('checked' in props))\n        this.setState({\n          checked: !this.state.checked\n        });\n    }\n  }\n\n  render() {\n    return super.render();\n  }\n}\n\nBase.defaultProps = {\n  type: 'checkbox',\n  disabled: false,\n  tabIndex: 0\n};\n\n/**\n * Validate label and require ID if label is a ReactElement\n *\n * @param {Object} props the props passed in\n * @param {string} propName the name of the current prop\n * @param {string} componentName the name of the component\n * @returns {Error | void} returns an error if label is invalid\n */\nBase.validatePropTypeLabel = function validatePropTypeLabel(\n  props,\n  propName,\n  componentName\n) {\n  const label = props[propName];\n  if (typeof label !== 'string' && !props.id) {\n    return new Error(\n      `Invalid prop \"${propName}\" supplied to \"${componentName}\". Prop \"${propName}\" must be a string, otherwise prop \"id\" must be provided. Validation failed`\n    );\n  }\n};\n\nBase.allowedTypes = ['checkbox', 'radio'];\n\nBase.propTypes = {\n  /** Defines the type of behavior for the toggle*/\n  type: PropTypes.oneOf(Base.allowedTypes),\n  /** Identifies the toggle label on the page (used for aria references)*/\n  htmlFor: PropTypes.string,\n  /** Label for the toggle */\n  label: Base.validatePropTypeLabel,\n  /** Flag dictating the toggle should be rendered smaller */\n  small: PropTypes.bool,\n  /** Flag dictating if the toggle is disabled */\n  disabled: PropTypes.bool,\n  /** Flag dictating the checked state of the toggle */\n  checked: PropTypes.bool,\n  /** Flag dictating if the toggle should hide its label*/\n  hideLabel: PropTypes.bool,\n  /** onChange callback */\n  onChange: PropTypes.func,\n  /** onKeyDown override, (default allows Enter and Space to flip the toggle) */\n  onKeyDown: PropTypes.func,\n  /** Identifies the toggle on the page, must be unique if multiple component share the same label (used for aria references) */\n  // used for aria references.\n  id: PropTypes.string,\n  /** Developer indicates tabIndex */\n  tabIndex: PropTypes.oneOf([-1, 0])\n};\n","import Base from './toggle';\nimport React from 'react';\nimport rip from 'rip-out';\nimport { classNames, id as _id } from '@ux/component-utilities';\n\n/**\n * Class representing a 2-state switch.\n *\n * @displayName Toggle (web)\n * @class Toggle\n * @public\n */\nexport class Toggle extends Base {\n  render() {\n    let { type, onChange, onKeyDown, tabIndex, ...props } = this.props;\n    const { label, hideLabel } = this.props;\n    const checked = !!('checked' in props ? props.checked : this.state.checked);\n    const id = _id('label', { props: this.props });\n\n    onChange = onChange || this.onChange;\n    onKeyDown = onKeyDown || this.onKeyDown;\n    type = Base.allowedTypes.includes(type) ? type : Base.allowedTypes[0];\n\n    const className = classNames(\n      classNames('ux-toggle', {\n        'disabled': props.disabled,\n        'ux-toggle-small': props.small\n      })\n    );\n\n    props = rip(props, 'small');\n\n    return (\n      <label htmlFor={ id }  className={ className }>\n        <input\n          { ...props }\n          type={ type }\n          checked={ checked }\n          className={ 'ux-toggle-checkbox' }\n          onChange={ onChange }\n          onKeyDown={ onKeyDown }\n          id={ id }\n          tabIndex={ tabIndex }\n        />\n        <span className='ux-toggle-container'>\n          <span className='ux-toggle-bg'></span>\n          <span className='ux-toggle-handle'></span>\n        </span>\n        {!hideLabel && label && (\n          <span className='ux-toggle-message'>{label}</span>\n        )}\n      </label>\n    );\n  }\n}\n\n/**\n * Inherit the propTypes from the Namespace, as well as our base class. We\n * don't want to add these shapes to our base class as it doesn't need\n * any namespace functionality.\n *\n * @type {Object}\n * @public\n */\nToggle.propTypes = {\n  ...Base.propTypes\n};\n\nexport default Toggle;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Button from '@ux/button';\nimport Close from '@ux/icon/x';\n\n/**\n * Render the close button of the tooltip.\n *\n * @param {Object} props Component properties.\n * @returns {ReactElement} button\n * @private\n */\nexport default function TooltipClose({ close, className }) {\n  return (\n    <Button\n      aria-hidden='true'\n      type='button'\n      className={ className }\n      onClick={ close }\n      design={ 'inline' }\n      icon={ <Close /> }\n    />\n  );\n}\n\n/**\n * Property types definition.\n *\n * @enum {Object} propTypes\n * @private\n */\nTooltipClose.propTypes = {\n  close: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n/**\n * Render the title of the tooltip.\n *\n * @param {Object} props Component properties.\n * @returns {ReactElement} Div containing title.\n * @private\n */\nexport default function TooltipTitle({ children, className }) {\n  return <div className={ className }>\n    { children }\n  </div>;\n}\n\n/**\n * Property types definition.\n *\n * @enum {Object} propTypes\n * @private\n */\nTooltipTitle.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { offset, classNames } from '@ux/component-utilities';\nimport Close from './tooltip-close';\nimport Title from './tooltip-title';\n\n/**\n * Render and position the tooltip content.\n *\n * @class TooltipContent\n * @private\n */\nexport class TooltipContent extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      anchor: {\n        height: 0,\n        width: 0,\n        top: 0,\n        y: 0,\n        x: 0\n      }\n    };\n    this.element = React.createRef();\n  }\n\n  /**\n   * After the initial render the tooltip will need to be re-rendered for\n   * correct positioning in the DOM.\n   *\n   * @private\n   */\n  componentDidMount() {\n    document.addEventListener('resize', this.update);\n    this.recalculateAnchor();\n  }\n\n  /**\n   * Remove the attached click event listener.\n   *\n   * @private\n   */\n  componentWillUnmount() {\n    document.removeEventListener('resize', this.update);\n  }\n\n  /**\n   * Provide the position and dimensions of the anchor element each time the\n   * component is about to update the DOM.\n   *\n   * @private\n   */\n  componentDidUpdate() {\n    this.recalculateAnchor();\n  }\n\n  /**\n   * Force an update of the component, usually required to update the position.\n   *\n   * @private\n   */\n  update() {\n    this.forceUpdate();\n  }\n\n  anchorsDiffer(prevAnchor, newAnchor) {\n    return JSON.stringify(prevAnchor) !== JSON.stringify(newAnchor);\n  }\n\n  recalculateAnchor() {\n    const { anchor } = this.props;\n    const { top, left } = offset(anchor);\n    const bounding = anchor.getBoundingClientRect();\n    const recalculatedAnchor = {\n      height: bounding.height,\n      width: bounding.width,\n      top: bounding.top,\n      y: top,\n      x: left\n    };\n\n    const prevAnchor = this.state.anchor;\n    if (this.anchorsDiffer(prevAnchor, recalculatedAnchor)) {\n      this.setState({\n        anchor: recalculatedAnchor\n      });\n    }\n  }\n\n  /**\n   * Get top and left distances of the tooltip. Also return if the tooltip needs\n   * to be rendered above or below the anchor.\n   *\n   * @returns {Array} positional values.\n   * @private\n   */\n  // eslint-disable-next-line max-statements\n  get position() {\n    let left;\n\n    //\n    // Deliberately return to top left corner here so the tooltip will get the\n    // maximum space to render. Having it elsewhere on the page might cause\n    // the message to render with a different width causing errors in the\n    // calculation afterwards.\n    //\n    if (!this.element.current) {\n      return [{\n        left: 0,\n        top: 0\n      }];\n    }\n\n    const { anchor } = this.state;\n    const viewportWidth = window.innerWidth;\n    const tooltip = this.element.current.getBoundingClientRect();\n    const height = tooltip.height;\n    const width = tooltip.width;\n    const above = height < anchor.top;\n\n    //\n    // Determine x position on the tooltip, attempt to place it centered above\n    // the anchor at first.\n    //\n    left = Math.floor(anchor.x + (anchor.width / 2) - (width / 2));\n\n    const delta = above ? height : -anchor.height;\n    const overflow = left + width - viewportWidth;\n\n    const arrowMargin = {\n      marginLeft: this.arrowMarginLeft\n    };\n\n    //\n    // Move the tooltip further to the left if there is not enough space in\n    // the viewport to the right side of the anchor. Also move the arrow the\n    //\n    if (overflow > 0) {\n      arrowMargin.marginLeft += overflow;\n      left -= overflow;\n    }\n\n    //\n    // Do not allow for positioning left < 0, respect boundaries of the viewport.\n    // Instead move the arrow with margin-left above the anchor.\n    //\n    if (left < 0) {\n      arrowMargin.marginLeft += left;\n      left = 0;\n    }\n\n    return [{\n      top: Math.floor(anchor.y - delta),\n      left: left\n    }, arrowMargin, above];\n  }\n\n  /**\n   * Render Tooltip content and store references to the wrapping div and the arrow.\n   * Both are required for positional calculations and updates.\n   *\n   * @returns {ReactElement} div element with Tooltip content.\n   * @private\n   */\n  render() {\n    const props = this.props;\n    const [style, arrowMargin, above] = this.position;\n    const clsx = classNames([\n      props.className,\n      'tooltip',\n      'show',\n      {\n        'bs-tooltip-bottom': above,\n        'bs-tooltip-top': !above\n      }\n    ]);\n\n    //\n    // Get and store the arrow's original margin-left\n    //\n    const arrowMarginRef = r => {\n      if (!this.arrowMarginLeft && r) {\n        this.arrowMarginLeft = 0;\n      }\n    };\n\n    return (\n      <div className={ 'spaced-group' } ref={ this.props.contentRef }>\n        <div\n          role='tooltip'\n          ref={ this.element }\n          className={ clsx }\n          style={ style }\n          onMouseEnter={ props.onMouseEnter }\n          onMouseLeave={ props.onMouseLeave }>\n          <div\n            className={ 'tooltip-arrow' }\n            ref={ arrowMarginRef }\n            style={ arrowMargin }></div>\n          <div className={ 'tooltip-inner' }>\n            {props.hideClose ||\n              <Close close={ props.dismiss } className={ 'tooltip-close' } />\n            }\n            <span role='status' aria-live='assertive'>\n              {props.title && (\n                <Title className={ 'tooltip-title' }>{props.title}</Title>\n              )}\n              {props.message}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * Define required and types of properties.\n *\n * @enum {Object} propTypes\n * @private\n */\nTooltipContent.propTypes = {\n  // @see https://stackoverflow.com/a/51127130\n  contentRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]),\n  anchor: PropTypes.object,\n  message: PropTypes.node,\n  title: PropTypes.node,\n  close: PropTypes.func.isRequired,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  hideClose: PropTypes.bool,\n  persistent: PropTypes.bool,\n  dismiss: PropTypes.func,\n  className: PropTypes.string\n};\n\nexport default TooltipContent;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Content from './tooltip-content';\n\n/**\n * Render the tooltip content in a portal.\n *\n * @param {Object} props Content properties.\n * @returns {ReactElement} Div containing title.\n * @private\n */\nexport default class TooltipPortal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inDOM: false\n    };\n\n    this.tooltip = document.createElement('div');\n    const { anchor, root } = props;\n    const rootElement = root || anchor.getRootNode();\n    this.attachmentElement = rootElement.querySelector('body') || rootElement;\n  }\n\n  componentDidMount() {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    this.attachmentElement.appendChild(this.tooltip);\n    this.setState({\n      inDOM: true\n    });\n  }\n\n  componentWillUnmount() {\n    this.attachmentElement.removeChild(this.tooltip);\n  }\n\n\n  render() {\n    return this.state.inDOM && ReactDOM.createPortal(\n      <Content\n        { ...this.props }\n        hideClose={ this.props.openOnHover && this.props.hideClose }\n      />,\n      this.tooltip\n    );\n  }\n}\n\n/**\n * Property types definition.\n *\n * @enum {Object} propTypes\n * @private\n */\nTooltipPortal.propTypes = {\n  ...Content.propTypes\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { classNames, ClickOutside } from '@ux/component-utilities';\nimport Close from './tooltip-close';\nimport Content from './tooltip-content';\nimport Title from './tooltip-title';\nimport TooltipPortal from './tooltip-portal';\nimport Help from '@ux/icon/help';\n\n/**\n * Display a Tooltip.\n *\n * @displayName Tooltip (Web)\n * @class Tooltip\n * @public\n */\nexport class Tooltip extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isOpen: false\n    };\n    this.anchorRef = React.createRef();\n    this.contentRef = React.createRef();\n    this.close = this.close.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.anchorMouseEnter = this.anchorMouseEnter.bind(this);\n    this.anchorMouseLeave = this.anchorMouseLeave.bind(this);\n    this.startAutoHideTimer = this.startAutoHideTimer.bind(this);\n    this.stopAutoHideTimer = this.stopAutoHideTimer.bind(this);\n    this.autoHideTime = 0;\n    this.autoHideTimerHandle = null;\n  }\n\n  /**\n   * Getter to return a handler to toggle the tooltip. If no tooltip instance\n   * is available, it will be opened. Otherwise it will be closed.\n   *\n   * Propagation cannot be stopped here as other tooltips need to be closed with\n   * the same click event.\n   *\n   * @param {React.SyntheticEvent} event React SyntheticClick event.\n   * @public\n   */\n  get toggle() {\n    return event => {\n      event.preventDefault();\n      this[this.state.isOpen ? 'close' : 'open'](event);\n    };\n  }\n\n  /**\n   * Getter to return a handler that closes the tooltip and calls the `onDismiss`\n   * property.\n   *\n   * This function is supposed to be called only when the user clicks the\n   * `close` button, representing that the user had a clear intent to close\n   * the tooltip.\n   *\n   * @private\n   */\n  get dismiss() {\n    return event => {\n      event.preventDefault();\n\n      this.close();\n      this.props.onDismiss && this.props.onDismiss();\n    };\n  }\n\n  /**\n   * Check if the component needs to be re-rendered.\n   * If `props.open` has changed, it will open or close the tooltip as needed.\n   *\n   * @param {Object} prevProps values before the component update.\n   * @private\n   */\n  componentDidUpdate(prevProps) {\n    const { open } = this.props;\n\n    if (open !== prevProps.open) {\n      if (open) {\n        this.open();\n      } else {\n        this.close();\n      }\n    }\n  }\n\n  /**\n   * Open the tooltip if `props.open` is true.\n   *\n   * @private\n   */\n  componentDidMount() {\n    if (this.props.open) {\n      this.open();\n    }\n  }\n\n  /**\n   * Remove the attached click event listener and close any remaining tooltips.\n   *\n   * @private\n   */\n  componentWillUnmount() {\n    this.stopAutoHideTimer();\n    this.close();\n  }\n\n  /**\n   * Handles mouse enter event for the anchor element\n   *\n   * @param {Event} event React SyntheticMouseEnter event.\n   * @private\n   */\n  anchorMouseEnter(event) {\n    if (!this.props.openOnHover) {\n      return;\n    }\n\n    this.open(event);\n    this.stopAutoHideTimer();\n  }\n\n  /**\n   * Handles mouse leave event for the anchor element\n   *\n   * @private\n   */\n  anchorMouseLeave() {\n    this.startAutoHideTimer();\n  }\n\n  /**\n   * Starts or restarts auto hide timer using `autoHideTimeout` prop\n   *\n   * @private\n   */\n  startAutoHideTimer() {\n    if (!this.props.autoHideTimeout) {\n      return;\n    }\n\n    this.stopAutoHideTimer();\n    this.autoHideTimerHandle = window.setTimeout(\n      this.close,\n      this.props.autoHideTimeout\n    );\n  }\n\n  /**\n   * Stops (clears) auto hide timer\n   *\n   * @private\n   */\n  stopAutoHideTimer() {\n    if (this.autoHideTimerHandle) {\n      window.clearTimeout(this.autoHideTimerHandle);\n    }\n  }\n\n  /**\n   * Handle keyboard events for escape key on the tooltip, this can be\n   * used to augment the default behavior if you want to have manual control\n   * over closing of the tooltip.\n   *\n   * @param {Event} event Browser event.\n   * @private\n   */\n  onKeyDown(event) {\n    const key = event.key;\n\n    if (event.type === 'keydown' && key === 'Escape') {\n      event.preventDefault();\n      this.close(event);\n    }\n  }\n\n  /**\n   * Unmount and remove the Content Component. This methods is used as\n   * event handler and therefore follows the getter pattern.\n   *\n   * @public\n   */\n  close() {\n    if (!this.state.isOpen) return;\n\n    this.setState({\n      isOpen: false\n    }, this.props.onClose);\n  }\n\n  /**\n   * Close event handler specifically for when a close was triggered by clicking\n   * outside of the tooltip\n   *\n   * @param {Event} event React SyntheticMouseEnter event.\n   * @private\n   */\n  closeFromClickOutside(event) {\n    // If the event that triggered the outside close was hitting the anchor, \"ignore\" the event\n    // We ignore it because we're deferring the process of closing the tooltip to the anchor's\n    // click handler chain.\n    const composedPath = typeof event.composedPath === 'function' && !Array.from(event.composedPath()).includes(this.anchorRef.current);\n    if (!composedPath || !this.anchorRef.current || this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * This method is called from `toggle` to open the tooltip.\n   *\n   * @public\n   */\n  open() {\n    if (this.state.isOpen) return;\n\n    this.setState({\n      isOpen: true\n    }, this.props.onOpen);\n  }\n\n  /**\n   * Render Tooltip component.\n   *\n   * @returns {ReactElement} div element with Tooltip.\n   * @private\n   */\n  render() {\n    const pointer = {\n      cursor: 'pointer',\n      outline: 'none'\n    };\n    const props = this.props;\n    const dataEid = props['data-eid'];\n    const ariaLabel = props['aria-label'];\n    const className = classNames(\n      props.text ? 'tooltip-over-text' : 'tooltip-help-icon'\n    );\n    const onClick = !props.persistent ? this.toggle : null;\n    const onKeyDown = !props.persistent ? this.onKeyDown : null;\n    const onMouseEnter = props.openOnHover ? this.anchorMouseEnter : null;\n    const onMouseLeave = props.autoHideTimeout ? this.anchorMouseLeave : null;\n\n    if (React.isValidElement(props.children)) {\n      const child = React.Children.only(props.children);\n\n      return (\n        <React.Fragment>\n          { this.state.isOpen &&\n              <ClickOutside\n                onClick={ (e) => {\n                  if (props.persistent) return;\n                  this.closeFromClickOutside(e);\n                } }\n                targetRef={ this.contentRef }>\n                <TooltipPortal\n                  { ...props }\n                  contentRef={ this.contentRef }\n                  anchor={ this.anchorRef.current }\n                  root={ props.root }\n                  hideClose={ props.hideClose }\n                  openOnHover={ props.openOnHover }\n                  close={ this.close }\n                  open={ this.open }\n                  dismiss={ this.dismiss }\n                  onMouseEnter={ this.stopAutoHideTimer }\n                  onMouseLeave={ this.startAutoHideTimer }\n                /> </ClickOutside>\n          }\n          {React.cloneElement(child, {\n            'style': Object.assign({}, child.props.style || {}, pointer),\n            onClick,\n            onMouseEnter,\n            onMouseLeave,\n            onKeyDown,\n            'id': props.id,\n            'ref': this.anchorRef,\n            'tabIndex': props.tabIndex,\n            'data-eid': dataEid,\n            'aria-label': ariaLabel\n          })}\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <span\n        id={ props.id }\n        onMouseEnter={ onMouseEnter }\n        onMouseLeave={ onMouseLeave }>\n        {this.state.isOpen &&\n                <ClickOutside\n                  onClick={ (e) => {\n                    if (props.persistent) return;\n                    this.closeFromClickOutside(e);\n                  } }\n                  targetRef={ this.contentRef }>\n                  <TooltipPortal\n                    { ...props }\n                    contentRef={ this.contentRef }\n                    anchor={ this.anchorRef.current }\n                    hideClose={ props.hideClose }\n                    openOnHover={ props.openOnHover }\n                    close={ this.close }\n                    dismiss={ this.dismiss }\n                    onMouseEnter={ this.stopAutoHideTimer }\n                    onMouseLeave={ this.startAutoHideTimer }\n                  />\n                </ClickOutside>\n        }\n        {props.children}\n        <span\n          role='button'\n          aria-haspopup='true'\n          aria-label={ ariaLabel }\n          tabIndex={ props.tabIndex }\n          className={ className }\n          onClick={ onClick }\n          onKeyDown={ onKeyDown }\n          style={ pointer }\n          ref={ this.anchorRef }\n          data-eid={ dataEid }>\n          { props.text || <Help height={ 16 } width={ 16 } /> }\n        </span>\n      </span>\n    );\n  }\n}\n\n/**\n * Default prop values.\n *\n * @enum {Object} defaultProps\n * @public\n */\nTooltip.defaultProps = {\n  persistent: false,\n  openOnHover: false,\n  hideClose: false,\n  open: false,\n  tabIndex: 0\n};\n\n/**\n * Property types definition.\n *\n * @enum {Object} propTypes\n * @public\n */\nTooltip.propTypes = {\n  /** HTML element id to use for the anchor element */\n  'id': PropTypes.string,\n  /** Flag for whether a tooltip is persistent */\n  'persistent': PropTypes.bool,\n  /** (Desktop/Mouse use only) Flag for whether the tooltip should open when the anchor is hovered */\n  'openOnHover': PropTypes.bool,\n  /** The number of milliseconds before a tooltip auto-hides */\n  'autoHideTimeout': PropTypes.number,\n  /** (Desktop/Mouse use only) Hides the close button for use as a hover only tooltip **/\n  'hideClose': PropTypes.bool,\n  /** className for styling */\n  'className': PropTypes.string,\n  /** Children to use as the tooltip anchor */\n  'children': PropTypes.node,\n  /** Tooltip message content */\n  'message': PropTypes.node,\n  /** The root document to attach the tooltip, defaults to document.documentElement. Used to support Shadow DOM */\n  'root': PropTypes.node,\n  /** Content for the tooltip title */\n  'title': PropTypes.node,\n  /** Text content for the tooltip anchor */\n  'text': PropTypes.node,\n  /** Flag for if the tooltip should open at start */\n  'open': PropTypes.bool,\n  /** Handler for when a tooltip is closed */\n  'onClose': PropTypes.func,\n  /** Handler for when a tooltip is opened */\n  'onOpen': PropTypes.func,\n  /** Handler for when a tooltip is closed explicitly by the user */\n  'onDismiss': PropTypes.func,\n  /** The accessibility tab index value */\n  'tabIndex': PropTypes.number,\n  /** The eid to identify click origin */\n  'data-eid': PropTypes.string,\n  /** The aria-label to identify the button */\n  'aria-label': PropTypes.string\n};\n\n//\n// Make importing easier by exposing the individual components to the Tooltip\n// class.\n//\nTooltip.Close = Close;\nTooltip.Content = Content;\nTooltip.Title = Title;\n\nexport default Tooltip;\n","import fetch, { AbortController, Request } from '@godaddy/fetch';\nimport diagnostics from 'diagnostics';\nimport qs from 'querystringify';\nimport jsonp from 'jsonp';\nimport rip from 'rip-out';\n\nconst log = diagnostics('request');\n\n/**\n * Safely stringify an object into JSON and log on error\n *\n * @param {Object} obj An object to stringify into JSON.\n * @returns {String} A JSON string representing obj.\n * @private\n */\nfunction jsonstringify(obj) {\n  try {\n    return JSON.stringify(obj);\n  } catch (error) {\n    log(error.message);\n  }\n}\n\n/**\n * @callback RequestCallback\n * @param {Error} [err] Error, if any\n * @param {any} [data] Data returned\n */\n/**\n * Send the request and process response.\n *\n * @param {String} url URI to request.\n * @param {Object} [options] Configuration.\n * @param {RequestCallback} done Completion callback.\n * @returns {Request} Request instance.\n * @private\n */\nfunction send(url, options, done) { // eslint-disable-line max-statements, complexity\n  if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  let controller = options.controller;\n\n  // Cautiously enhance functionality to abort fetch\n  if (!controller && typeof AbortController !== 'undefined') {\n    controller = new AbortController();\n  }\n\n  // Provide backwards compatibility for internal configuration of requests,\n  // see https://github.com/unshiftio/requests/blob/master/index.js#L102.\n  options.mode = options.mode || 'cors';\n  options.credentials = options.credentials || 'include';\n  options.timeout = options.timeout || 30000;\n  url = url + qs.stringify(options.query || {}, true);\n\n  if (options.jsonp) {\n    return jsonp(url, options, done);\n  }\n\n  if (options.body && typeof options.body !== 'string') {\n    options.body = jsonstringify(options.body);\n  }\n\n  if (typeof options.timeout === 'number' && controller) {\n    setTimeout(controller.abort.bind(controller), options.timeout);\n    options.signal = controller.signal;\n  }\n\n  //\n  // Delete properties that should not be passed to the `window.Request` constructor.\n  //\n  options = rip(options, 'timeout', 'query', 'controller');\n\n  const request = new Request(url, options);\n  fetch(request)\n    .then(handleResponse)\n    .then(content => {\n      done(null, content);\n    })\n    .catch(done);\n\n  return {\n    controller,\n    request\n  };\n}\n\n/**\n * Extract the method that should be used for reading content from the content-type.\n *\n * @param {string} type Content type\n * @returns {string} method\n * @private\n */\nfunction getMethod(type) {\n  if (type && ~type.indexOf('application/json')) return 'json';\n  if (type && ~type.indexOf('text/')) return 'text';\n\n  return 'blob';\n}\n\n/**\n * Handles the response of the fetch request\n *\n * @param {Response} response Response from the request\n * @returns {Promise} Content or Error from the response\n * @private\n */\nfunction handleResponse(response) {\n  const method = getMethod(response.headers.get('content-type'));\n\n  if (response.status >= 400) {\n    const error = new Error(response.statusText);\n    error.status = response.status;\n\n    return Promise.reject(error);\n  }\n\n  return response[method]();\n}\n\n/**\n * Execute DELETE request\n *\n * @param {String} url URI to request.\n * @param {Object} [options] Configuration.\n * @param {RequestCallback} done Completion callback.\n * @returns {requests} Requests instance.\n * @public\n */\nexport function del(url, options, done) {\n  return send(url, {\n    ...options,\n    method: 'DELETE'\n  }, done);\n}\n\n/**\n * Execute GET request\n *\n * @param {String} url URI to request.\n * @param {Object} [options] Configuration.\n * @param {RequestCallback} done Completion callback.\n * @returns {requests} Requests instance.\n * @public\n */\nexport function get(url, options, done) {\n  return send(url, options, done);\n}\n\n/**\n * Execute PATCH request\n *\n * @param {String} url URI to request.\n * @param {Object} data Data to send with request.\n * @param {Object} [options] Configuration.\n * @param {RequestCallback} done Completion callback.\n * @returns {requests} Requests instance.\n * @public\n */\nexport function patch(url, data, options, done) {\n  if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  return send(url, {\n    ...options,\n    method: 'PATCH',\n    body: data\n  }, done);\n}\n\n/**\n * Execute POST request\n *\n * @param {String} url URI to request.\n * @param {Object} data Data to send with request.\n * @param {Object} [options] Configuration.\n * @param {RequestCallback} done Completion callback.\n * @returns {requests} Requests instance.\n * @public\n */\nexport function post(url, data, options, done) {\n  if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  return send(url, {\n    ...options,\n    method: 'POST',\n    body: data\n  }, done);\n}\n\n/**\n * Execute PUT request\n *\n * @param {String} url URI to request.\n * @param {Object} data Data to send with request.\n * @param {Object} [options] Configuration.\n * @param {RequestCallback} done Completion callback.\n * @returns {requests} Requests instance.\n * @public\n */\nexport function put(url, data, options, done) {\n  if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  return send(url, {\n    ...options,\n    method: 'PUT',\n    body: data\n  }, done);\n}\n\nexport default {\n  del,\n  get,\n  patch,\n  post,\n  put\n};\n","import diagnostics from 'diagnostics';\n\n//\n// Keep track of the entire logging stack.\n//\nconst loggers = {};\n\n/**\n * Setup diagnostic logger with `util` namespace.\n *\n * @param {String} name Scope of the logger.\n * @returns {Function} diagnostics instance.\n * @api public\n */\nfunction debug(name) {\n  const logger = loggers[name] = diagnostics(`util:${name}`);\n\n  return logger;\n}\n\nexport default debug;\n\nexport {\n  loggers\n};\n","import debug from './diagnostics';\n\nconst log = debug('json');\n\n/**\n * Safely run JSON method.\n *\n * @param {String} name Function name.\n * @param {...[Mixed]} args Valid arguments\n * @returns {Mixed|undefined} Parsed or stringified object.\n * @api private\n */\nfunction run(name, ...args) {\n  try {\n    return JSON[name](...args);\n  } catch (error) {\n    log(error.message);\n  }\n}\n\n/**\n * Proxy to JSON.stringify.\n *\n * @returns {String|undefined} stringified representation of the provided arguments.\n * @api public\n */\nfunction stringify() {\n  return run('stringify', ...arguments);\n}\n\n/**\n * Proxy to JSON.parse.\n *\n * @returns {Object|undefined} parsed object or undefined.\n * @api public\n */\nfunction parse() {\n  return run('parse', ...arguments);\n}\n\n//\n// Export both functions.\n//\nexport {\n  stringify,\n  parse\n};\n","import URLParse from 'url-parse';\n\n/**\n * Construct new URL to parse, use current location if no address was provided.\n *\n * @param {String} address URL to parse.\n * @param {...[Mixed]} args Remainder of arguments.\n * @class URL\n * @api public\n */\nfunction URL(address, ...args) {\n  if (!address) {\n    const target = typeof document !== 'undefined' ? window : {};\n    address = (target.location || {}).href || '';\n  }\n\n  return new URLParse(address, ...args);\n}\n\n/**\n * Get domain parts of hostname.\n *\n * @returns {Object} Domain parts.\n * @api public\n */\nURLParse.prototype.domains = function domains() {\n  const hostname = this.hostname.split('.');\n\n  return {\n    top: hostname.pop(),\n    sub: hostname\n  };\n};\n\n/**\n * Return domain with configured number of subdomains (rtl). Defaults to 0,\n * e.g. all subdomains.\n *\n * @param {Number} sub Number of subdomains.\n * @returns {String} parsed domains.\n * @api public\n */\nURLParse.prototype.domain = function domain(sub = 0) {\n  const domains = this.domains();\n\n  return domains.sub.slice(-sub).concat(domains.top).join('.');\n};\n\n//\n// Expose the URL parser and some additional properties that might be\n// useful for others or testing.\n//\nURL.extractProtocol = URLParse.extractProtocol;\nURL.location = URLParse.location;\nURL.qs = URLParse.qs;\n\nexport default URL;\n","import request from '@godaddy/request';\nimport debug from './utils/diagnostics';\nimport * as json from './utils/json';\nconst cookie = require('koekiemonster')();\nimport URL from './utils/url';\n\n//\n// @deprecated\n// We have moved on from `cookie-monster` as it is no longer maintained\n// Polyfill to cookie-monster@0.1.1\n// See: https://github.com/kahnjw/cookie-monster/compare/0.1.1...0.2.1\n//\ncookie.get = cookie.getItem;\ncookie.set = cookie.setItem;\ncookie.remove = cookie.removeItem;\ncookie.clear = null;\n\n//\n// @deprecated\n// sessionStorage is now available on window in all browsers in our\n// target support matrix. However, since it was previously exposed\n// prior to this we must re-expose it in this fashion.\n//\nlet storage;\nif (typeof window !== 'undefined') {\n  storage = window.sessionStorage;\n}\n\nexport {\n  request,\n  storage,\n  cookie,\n  debug,\n  json,\n  URL\n};\n","import palette from '../../variables/palette.json';\n\nexport default palette;\n","import { breakpoints } from '@ux/component';\n\nconst points = breakpoints.specification.map(spec => spec.name);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Get style properties through a dot separated string.\n *\n * @param {Object} styles Source stylesheet.\n * @param {String} path Path to target property.\n * @param {Object} pathArguments The arguments to use if any styles are functions\n * @returns {Object} Reference to requested stylesheet property.\n * @private\n */\nfunction get(styles, path = '', pathArguments = {}) {\n  const props = path.split('.');\n\n  if (!styles[props[0]]) return;\n\n  for (let i = 0; i < props.length; i++) {\n    const key = props[i];\n\n    if (!hasOwnProperty.call(styles, key)) return;\n    styles = styles[key];\n    if (typeof styles === 'function') {\n      styles = styles.apply(null, pathArguments[key] || []);\n    }\n  }\n\n  return styles;\n}\n\n/**\n * Copy properties from source to target.\n *\n * @param {Object} source Stylesheet properties to be copied\n * @param {Object} target To contain copied stylesheet properies.\n * @returns {Object} Target styles\n * @private\n */\nfunction copy(source, target) {\n  for (const key in source) {\n    if (hasOwnProperty.call(source, key)) target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * Recursive freeze of object(s) in stylesheet.\n *\n * @param {Object} styles Source stylesheet.\n * @returns {Object} Frozen stylesheet\n * @private\n */\nfunction freeze(styles) {\n  for (const key in styles) {\n    if (hasOwnProperty.call(styles, key) && typeof styles[key] === 'object') freeze(styles[key]);\n  }\n\n  return Object.freeze(styles);\n}\n\n/**\n * Breakpoint aware recursive clone, minimal features as source styles are strings, objects or arrays.\n *\n * @param {Object|Array} obj Collection of properties to be cloned.\n * @param {String} breakpoint Clone object that is identified by breakpoint.\n * @returns {Object|Array} cloned object.\n * @private\n */\nfunction clone(obj, breakpoint) {\n  if (!obj) return;\n\n  return Object.keys(obj).reduce((memo, key) => {\n    const value = obj[key];\n    const cloneable = value && typeof value === 'object' && !value._preserved;\n\n    //\n    // Clone shallow when a breakpoint is specified, only use matching objects.\n    //\n    if (cloneable && breakpoint) {\n      if (key === breakpoint) {\n        copy(value, memo);\n      }\n\n      return memo;\n    }\n\n    memo[key] = cloneable ? clone(value) : value;\n\n    return memo;\n  }, Array.isArray(obj) ? [] : Object.create(null));\n}\n\n/**\n * Immutable stylesheet definition.\n *\n * Example:\n *   ```\n *   new StyleSheet({\n *     button: {\n *      width: '100%',\n *\n *    }\n *   })\n *   ```\n *\n * @class StyleSheet\n * @param {Function} source Callable source reference.\n * @public\n */\nexport default class StyleSheet {\n  constructor(styles) {\n    //\n    // Store copied source and media specific styling on instance and make the objects immutable.\n    //\n    this.styles = freeze(\n      clone(styles)\n    );\n  }\n\n  /**\n   * Define breakpoint specific styles. Returned object should be spread on the source object\n   * and will be have a `_[breakpoint]` identifier.\n   *\n   * Example:\n   *   ```\n   *   {\n   *     ...StyleSheet.select({\n   *       'mobile|phablet': {\n   *         width: '75%',\n   *         margin: 0\n   *       }\n   *     })\n   *   }\n   *   ```\n   *\n   * @param {Object} variety Breakpoint specific styling.\n   * @returns {Object} Reduced collection of breakpoint specific styles.\n   * @public\n   */\n  static select(variety) {\n    return points.reduce(function select(memo, point) {\n      const src = Object.keys(variety).filter(key => ~key.indexOf(point))[0];\n\n      if (src) memo[`_${point}`] = variety[src];\n\n      return memo;\n    }, {});\n  }\n\n  /**\n   * Lock the provided value so that the literal object is always returned in the result styles.\n   * Useful for styles that expect values as object such as react-native's shadowOffset and textShadowOffset\n   *\n   * Example:\n   *   ```\n   *   {\n   *     shadowRadius: 2,\n   *     shadowOffset: StyleSheet.preserve({\n   *       width: 0,\n   *       height: 1\n   *     })\n   *   }\n   *   ```\n   *\n   * @param {Object} value style value to preserve\n   * @returns {Object} Preserved value for inclusion in the Stylesheet definition\n   * @public\n   */\n  static preserve(value) {\n    return Object.defineProperty(value, '_preserved', {\n      value: true,\n      enumerable: false\n    });\n  }\n\n  /**\n   * Reduce style objects\n   *\n   * @param {Array} styles Objects containing styles.\n   * @returns {Object} Reduced collection of styles.\n   * @private\n   */\n  query(...styles) {\n    return styles.reduce(function query(memo, style) {\n      return copy(clone(style, `_${breakpoints.breakpoint}`), memo);\n    }, {});\n  }\n\n  /**\n   * Get mutable styles from source stylesheet.\n   *\n   * @param {String} path Path to target property.\n   * @param {Object} pathArguments The arguments to any path segments that are functions, keyed off the path segment\n   * @returns {undefined|Object} mutable styles.\n   * @public\n   */\n  get(path, pathArguments = {}) {\n    const style = get(this.styles, path, pathArguments);\n\n    if (!style) return;\n\n    //\n    // Return styles from cloned source. This is required to prevent\n    // nested objects from being immutable or exposing the source.\n    //\n    const query = this.query.bind(this);\n    return Object.defineProperty(query(style), 'merge', {\n      enumerable: false,\n\n      /**\n       * Proxy to merge properties and update the current style property.\n       *\n       * @param {Array} styles Style properties to merge.\n       * @returns {Style} fluent interface.\n       * @public\n       */\n      value: function merge(...styles) {\n        copy(query(...styles), this);\n\n        return this;\n      }\n    });\n  }\n}\n","import fontSizes from '../../variables/typography.json';\n\nexport default fontSizes;\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst delimiter = /_|-/;\n\nexport default class Query {\n  constructor(vars) {\n    this.load(vars);\n  }\n\n  /**\n   * Initializes (or re-initializes) with the JSON representation\n   * of the palette (i.e. fonts & colors).\n   *\n   * @param  {Object} vars JSON representation of the palette\n   * @public\n   */\n  load(vars) {\n    //\n    // Mimic the logic within @ux/scss-definitions\n    // - marketFonts: set of all font groups (e.g. brand, mangal, etc)\n    // - marketGroups: mapping of language to key in marketFonts (e.g. \"mr\" => \"mangal\")\n    //\n    this.marketFonts = vars.marketFonts;\n    this.marketGroups = vars.marketGroups;\n    this.colors = vars.colors || vars.paletteColors;\n  }\n\n  /**\n   * Transform a locale into iso639.\n   *\n   * @param {String} locale Locale to transform.\n   * @returns {Array} Split locale, iso639.\n   * @public\n   */\n  iso639(locale) {\n    if (!locale) { return []; }\n    return locale.split(delimiter);\n  }\n\n  /**\n   * Returns the grouping name within the marketFonts lookups which are indexed\n   * according to IETF language tags. If no group exists in marketGroups, 'brand'\n   * is returned. (see: https://en.wikipedia.org/wiki/IETF_language_tag)\n   *\n   * e.g. zh-CN is composed of two distinct parts (or subtags):\n   * 1. zh represents the **primary language subtag** (Chinese) from ISO-639\n   *    (see: https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)\n   * 2. CN represents the **region subtag** (China) from ISO-3166-1 alpha-2\n   *    (see: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n   *\n   * @param  {String} lang   Primary language subtag\n   * @param  {String} region Region subtag\n   * @returns {String} Name of the market group within marketFonts to provide.\n   * @public\n   */\n  marketGroup(lang, region) {\n    const group = this.marketGroups[lang];\n\n    if (typeof group === 'string') { return group; }\n    if (typeof group === 'object' && hasOwnProperty.call(group, region)) {\n      return group[region];\n    }\n\n    return 'brand';\n  }\n\n  /**\n   * Returns the market font information for the specified locale.\n   *\n   * @param  {String} locale IETF language tag for the locale (e.g. zh-SG).\n   * @returns {Object} Object describing the font information for the locale\n   * @public\n   */\n  marketFont(locale) {\n    let [lang, region] = this.iso639(locale);\n    if (region) {\n      region = region.toLowerCase();\n    }\n\n    if (hasOwnProperty.call(this.marketFonts, lang)) {\n      return this.marketFonts[lang];\n    }\n\n    const group = this.marketGroup(lang, region);\n    return this.marketFonts[group];\n  }\n\n  /**\n   * Retrieve typefaces based on device locale.\n   *\n   * @param {String} type primary or base.\n   * @param {String} locale Locale of we want to use for the font.\n   * @returns {Object} correct font names && weight for the given locale.\n   * @public\n   */\n  font(type = 'base', locale = 'en_US') {\n    const fontStack = this.marketFont(locale);\n\n    if (type === 'primary') {\n      type = 'primary-bold';\n    }\n\n    let font = fontStack[type];\n\n    if (!font && type === 'marketing') {\n      font = fontStack['primary-bold'];\n    }\n\n    return {\n      fontFamily: font.family,\n      fontWeight: font.weight\n    };\n  }\n\n  /**\n   * Retrieve hexidecimal color from UXCore2 color palette.\n   *\n   * @param {String} paletteName Palette name.\n   * @param {String} tone Tone variation.\n   * @param {String} color Variant (eg: contrast for text or color)\n   * @returns {String} Color.\n   * @public\n   */\n  palette(paletteName, tone = 'base', color = 'color') {\n    if (!hasOwnProperty.call(this.colors, paletteName)) {\n      return null;\n    }\n\n    if (!hasOwnProperty.call(this.colors[paletteName], tone)) {\n      return null;\n    }\n\n    return this.colors[paletteName][tone][color];\n  }\n}\n\n","import variables from './variables/palette';\nimport StyleSheet from './stylesheet';\nimport typographies from './variables/typography';\nimport Query from './query';\n\n//\n// If `window.ux.palette` is already defined then use it when creating the initial\n// query. This is absolutely necessary because `palette.min?.js` loads before\n// `uxcore2.min?.js` to support import-time usage of `palette` and `font` functions.\n//\nlet loadable = variables;\nconst ux = (typeof window !== 'undefined' && window.ux)  || {};\nconst browserPalette = ux && ux.palette;\n\nif (browserPalette) {\n  // Merge in color, font, and market group override data.\n\n  const brandFonts = browserPalette.fonts['brand-fonts'];\n  const paletteMarketGroups = browserPalette.fonts['palette-market-groups'];\n\n  loadable = {\n    ...loadable,\n    colors: browserPalette.colors,\n    marketGroups: {\n      ...loadable.marketGroups,\n      ...paletteMarketGroups\n    },\n    fonts: brandFonts,\n    marketFonts: {\n      ...loadable.marketFonts,\n      brand: brandFonts\n    }\n  };\n}\n\n//\n// Create a lookup for variables\n//\n\nconst query = new Query(loadable);\nconst defaultLocale = (ux.data && ux.data.market) || 'en_US';\n\n/**\n * Retrieve typography for standard heading types (h1, h2, etc...)\n * defaults to h1, returns basefont size if invalid header type is requested\n *\n * @param {String} styleType style to fetch.\n * @param {String} locale Locale we want to use defaults to en_US\n * @returns {Object} correct font name and size for the given header type.\n * @public\n */\nfunction typography(styleType, locale = defaultLocale) {\n\n  const sizeValue = typographies[`${styleType.match(/^h\\d$/i)}FontSize`] || typographies.fontSizeBase;\n\n  return {\n    ...font('primary', locale),\n    fontSize: sizeValue\n  };\n}\n\n/**\n * Retrieve typefaces based on device locale.\n *\n * @param {String} type primary or base.\n * @param {String} locale Locale of we want to use for the font.\n * @returns {Object} correct font names && weight for the given locale.\n * @public\n */\nfunction font(type = 'base', locale = defaultLocale) {\n  return query.font(type, locale);\n}\n\n/**\n * Retrieve hexidecimal color from UXCore2 color palette.\n *\n * @param {String} paletteName Palette name.\n * @param {String} tone Tone variation.\n * @param {String} color Variant (eg: contrast for text or color)\n * @returns {String} Color.\n * @public\n */\nfunction palette(paletteName, tone, color) {\n  return query.palette(paletteName, tone, color);\n}\n\n/**\n * Initializes (or re-initializes) with the JSON representation\n * of the palette (i.e. fonts & colors).\n *\n * @param {Object} values JSON representation of the palette\n * @public\n */\nfunction load(values) {\n  query.load(values);\n}\n\nexport default StyleSheet;\nexport {\n  Query,\n  palette,\n  font,\n  typography,\n  load\n};\n","//\n// (Explicit Dependencies) Import UXCore2 components.\n//\nimport Accordion from '@ux/accordion';\nimport Alert from '@ux/alert';\nimport Button from '@ux/button';\nimport ButtonSet from '@ux/button-set';\nimport Checkbox from '@ux/checkbox';\nimport CheckboxGroup from '@ux/checkbox-group';\nimport Collapsible from '@ux/collapsible';\nimport Component from '@ux/component';\nimport Criteria from '@ux/criteria';\nimport Dropdown from '@ux/dropdown';\nimport Fieldset from '@ux/fieldset';\nimport Form from '@ux/form';\nimport FormElement from '@ux/form-element';\nimport FormGroup from '@ux/form-group';\nimport Growl from '@ux/growl';\nimport Icon from '@ux/icon';\nimport MessageOverlay from '@ux/message-overlay';\nimport Modal from '@ux/modal';\nimport * as NamespaceComponent from '@ux/namespace-component';\nimport Pagination from '@ux/pagination';\nimport Password from '@ux/password';\nimport Pivots from '@ux/pivot';\nimport ProgressBar from '@ux/progress-bar';\nimport ProgressSteps from '@ux/progress-steps';\nimport QuantitySelector from '@ux/quantity-selector';\nimport Radio from '@ux/radio';\nimport RadioGroup from '@ux/radio-group';\nimport Remaining from '@ux/remaining';\nimport Search from '@ux/search';\nimport Spinner from '@ux/spinner';\nimport Stars from '@ux/stars';\nimport Table from '@ux/table';\nimport Tabs from '@ux/tabs';\nimport TelephoneInput from '@ux/telephone-input';\nimport Text from '@ux/text';\nimport Toggle from '@ux/toggle';\nimport Tooltip from '@ux/tooltip';\nimport request from '@godaddy/request';\nimport trfq from 'react-trfq';\nimport * as utils from '@ux/util';\nimport * as Validation from 'react-validation-context';\nimport * as styles from '@ux/inline-styles';\n\nconst versions = {\n  // eslint-disable-next-line no-process-env\n  [process.env.BUNDLE_NAME]: process.env.BUNDLE_VERSION\n};\n\n//\n// In order to provide a frictionless upgrade for our teams we're automatically\n// enhancing the @ux/icons class names that our partner teams are using while\n// they are transitioning towards the new Icon library.\n//\nimport '@ux/icon/enhance.js';\n\n// Babel7 doesn't attach __esModule onto `import *`s even if they are actually es modules.\n// For now, manually attach them for compatibility\n[utils, styles, NamespaceComponent].forEach(function (thing) {\n  Object.defineProperty(thing, '__esModule', {\n    value: true\n  });\n});\n\n//\n// Also export Components to allow other applications depend directly on\n// UXCore2. This cannot be done dynamically by destructuring the components as\n// this would violate the assumption of statically defined imports/exports.\n//\n// Note: do NOT export as default, it will prevent `{ [Component] }` like imports.\n//\nexport {\n  Accordion,\n  Alert,\n  Button,\n  ButtonSet,\n  Checkbox,\n  CheckboxGroup,\n  Collapsible,\n  Component,\n  Criteria,\n  Dropdown,\n  Fieldset,\n  Form,\n  FormElement,\n  FormGroup,\n  Growl,\n  Icon,\n  MessageOverlay,\n  Modal,\n  NamespaceComponent,\n  Pagination,\n  Password,\n  Pivots,\n  ProgressBar,\n  ProgressSteps,\n  QuantitySelector,\n  Radio,\n  RadioGroup,\n  Remaining,\n  Search,\n  Spinner,\n  Stars,\n  Table,\n  Tabs,\n  TelephoneInput,\n  Text,\n  Toggle,\n  Tooltip,\n  request,\n  styles,\n  trfq,\n  utils,\n  Validation,\n  versions\n};\n","import * as components from './index';\n\nwindow.ux = window.ux || {};\n\n//\n// Expose components in ux scope.\n//\nObject.keys(components).forEach(component => {\n  window.ux[component] = components[component];\n});\n"]}